// DeadByDaylight (2.0.1) SDK

#ifdef _MSC_VER
	#pragma pack(push, 0x8)
#endif

#include "DBD_DeadByDaylight_parameters.hpp"

namespace SDK
{
//---------------------------------------------------------------------------
//Functions
//---------------------------------------------------------------------------

// Function DeadByDaylight.DBDAnalytics.RecordGameProgress
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                  InProgressType                 (Parm, ZeroConstructor)

void UDBDAnalytics::STATIC_RecordGameProgress(const class FString& InProgressType)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDAnalytics.RecordGameProgress");

	UDBDAnalytics_RecordGameProgress_Params params;
	params.InProgressType = InProgressType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.RitualEvaluatorBase.EvaluateEvent
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// TEnumAsByte<EDBDScoreTypes>    event                          (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  Instigator                     (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  Target                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool URitualEvaluatorBase::EvaluateEvent(TEnumAsByte<EDBDScoreTypes> event, class AActor* Instigator, class AActor* Target)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.RitualEvaluatorBase.EvaluateEvent");

	URitualEvaluatorBase_EvaluateEvent_Params params;
	params.event = event;
	params.Instigator = Instigator;
	params.Target = Target;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.FearMarketManager.ReceivedFearMarketData
// (Final, Native, Private)
// Parameters:
// bool                           success                        (Parm, ZeroConstructor, IsPlainOldData)

void UFearMarketManager::ReceivedFearMarketData(bool success)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.FearMarketManager.ReceivedFearMarketData");

	UFearMarketManager_ReceivedFearMarketData_Params params;
	params.success = success;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.GameEventDispatcher.UnregisterListener
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FGameEventDispatcherHandle GameEventDispatcherHandle      (ConstParm, Parm, OutParm, ReferenceParm)

void UGameEventDispatcher::UnregisterListener(const struct FGameEventDispatcherHandle& GameEventDispatcherHandle)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.GameEventDispatcher.UnregisterListener");

	UGameEventDispatcher_UnregisterListener_Params params;
	params.GameEventDispatcherHandle = GameEventDispatcherHandle;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.GameEventDispatcher.RemotelyDispatch
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FGameplayTag            gameEventType                  (ConstParm, Parm)
// struct FGameEventData          GameEventData                  (ConstParm, Parm, OutParm, ReferenceParm)

void UGameEventDispatcher::RemotelyDispatch(const struct FGameplayTag& gameEventType, const struct FGameEventData& GameEventData)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.GameEventDispatcher.RemotelyDispatch");

	UGameEventDispatcher_RemotelyDispatch_Params params;
	params.gameEventType = gameEventType;
	params.GameEventData = GameEventData;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.GameEventDispatcher.RegisterListener
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FGameEventDispatcherHandle GameEventDispatcherHandle      (ConstParm, Parm, OutParm, ReferenceParm)

void UGameEventDispatcher::RegisterListener(const struct FGameEventDispatcherHandle& GameEventDispatcherHandle)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.GameEventDispatcher.RegisterListener");

	UGameEventDispatcher_RegisterListener_Params params;
	params.GameEventDispatcherHandle = GameEventDispatcherHandle;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.GameEventDispatcher.LocallyDispatch
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FGameplayTag            gameEventType                  (ConstParm, Parm)
// struct FGameEventData          GameEventData                  (ConstParm, Parm, OutParm, ReferenceParm)

void UGameEventDispatcher::LocallyDispatch(const struct FGameplayTag& gameEventType, const struct FGameEventData& GameEventData)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.GameEventDispatcher.LocallyDispatch");

	UGameEventDispatcher_LocallyDispatch_Params params;
	params.gameEventType = gameEventType;
	params.GameEventData = GameEventData;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.GameEventTracker.FireGameflowEvent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<EDBDScoreTypes>    EventType                      (Parm, ZeroConstructor, IsPlainOldData)
// float                          amount                         (Parm, ZeroConstructor, IsPlainOldData)
// class ADBDPlayerState*         Instigator                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// struct FName                   Data                           (Parm, ZeroConstructor, IsPlainOldData)

void UGameEventTracker::FireGameflowEvent(TEnumAsByte<EDBDScoreTypes> EventType, float amount, class ADBDPlayerState* Instigator, const struct FName& Data)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.GameEventTracker.FireGameflowEvent");

	UGameEventTracker_FireGameflowEvent_Params params;
	params.EventType = EventType;
	params.amount = amount;
	params.Instigator = Instigator;
	params.Data = Data;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.GameEventTracker.FireGameEvent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<EDBDScoreTypes>    EventType                      (Parm, ZeroConstructor, IsPlainOldData)
// float                          amount                         (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  Instigator                     (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  Target                         (Parm, ZeroConstructor, IsPlainOldData)

void UGameEventTracker::FireGameEvent(TEnumAsByte<EDBDScoreTypes> EventType, float amount, class AActor* Instigator, class AActor* Target)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.GameEventTracker.FireGameEvent");

	UGameEventTracker_FireGameEvent_Params params;
	params.EventType = EventType;
	params.amount = amount;
	params.Instigator = Instigator;
	params.Target = Target;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.GameEventTracker.FireAnalyticEvent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                  EventName                      (Parm, ZeroConstructor)

void UGameEventTracker::FireAnalyticEvent(const class FString& EventName)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.GameEventTracker.FireAnalyticEvent");

	UGameEventTracker_FireAnalyticEvent_Params params;
	params.EventName = EventName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.StatusView.ResetView
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class ADBDPlayer*              DBDPlayer                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void AStatusView::ResetView(class ADBDPlayer* DBDPlayer)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.StatusView.ResetView");

	AStatusView_ResetView_Params params;
	params.DBDPlayer = DBDPlayer;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.StatusView.FireNotification
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FStatusViewSource       StatusViewSource               (ConstParm, Parm)

void AStatusView::FireNotification(const struct FStatusViewSource& StatusViewSource)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.StatusView.FireNotification");

	AStatusView_FireNotification_Params params;
	params.StatusViewSource = StatusViewSource;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.GameplayModifierCondition.SetOwningGameplayModifier
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UGameplayModifierContainer* OwningGameplayModifier         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UGameplayModifierCondition::SetOwningGameplayModifier(class UGameplayModifierContainer* OwningGameplayModifier)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.GameplayModifierCondition.SetOwningGameplayModifier");

	UGameplayModifierCondition_SetOwningGameplayModifier_Params params;
	params.OwningGameplayModifier = OwningGameplayModifier;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.GameplayModifierCondition.IsApplicable
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UGameplayModifierCondition::IsApplicable()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.GameplayModifierCondition.IsApplicable");

	UGameplayModifierCondition_IsApplicable_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.GameplayModifierCondition.GetOwningPlayer
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ADBDPlayer*              ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ADBDPlayer* UGameplayModifierCondition::GetOwningPlayer()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.GameplayModifierCondition.GetOwningPlayer");

	UGameplayModifierCondition_GetOwningPlayer_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.GameplayModifierCondition.GetOwningGameplayModifier
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UGameplayModifierContainer* ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UGameplayModifierContainer* UGameplayModifierCondition::GetOwningGameplayModifier()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.GameplayModifierCondition.GetOwningGameplayModifier");

	UGameplayModifierCondition_GetOwningGameplayModifier_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.GameplayModifierContainer.UpdateCooldownTimer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          DeltaTime                      (Parm, ZeroConstructor, IsPlainOldData)

void UGameplayModifierContainer::UpdateCooldownTimer(float DeltaTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.GameplayModifierContainer.UpdateCooldownTimer");

	UGameplayModifierContainer_UpdateCooldownTimer_Params params;
	params.DeltaTime = DeltaTime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.GameplayModifierContainer.UnlistenToGameEvent
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// TEnumAsByte<EDBDScoreTypes>    EventType                      (Parm, ZeroConstructor, IsPlainOldData)

void UGameplayModifierContainer::UnlistenToGameEvent(TEnumAsByte<EDBDScoreTypes> EventType)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.GameplayModifierContainer.UnlistenToGameEvent");

	UGameplayModifierContainer_UnlistenToGameEvent_Params params;
	params.EventType = EventType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.GameplayModifierContainer.UnlistenToAllGameEvents
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// TEnumAsByte<EDBDScoreTypes>    EventType                      (Parm, ZeroConstructor, IsPlainOldData)

void UGameplayModifierContainer::UnlistenToAllGameEvents(TEnumAsByte<EDBDScoreTypes> EventType)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.GameplayModifierContainer.UnlistenToAllGameEvents");

	UGameplayModifierContainer_UnlistenToAllGameEvents_Params params;
	params.EventType = EventType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.GameplayModifierContainer.TriggerTimerActivePerkEvent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          duration                       (Parm, ZeroConstructor, IsPlainOldData)

void UGameplayModifierContainer::TriggerTimerActivePerkEvent(float duration)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.GameplayModifierContainer.TriggerTimerActivePerkEvent");

	UGameplayModifierContainer_TriggerTimerActivePerkEvent_Params params;
	params.duration = duration;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.GameplayModifierContainer.SetModifierValue
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FGameplayTag            Type                           (Parm)
// float                          GameplayModifierValue          (Parm, ZeroConstructor, IsPlainOldData)

void UGameplayModifierContainer::SetModifierValue(const struct FGameplayTag& Type, float GameplayModifierValue)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.GameplayModifierContainer.SetModifierValue");

	UGameplayModifierContainer_SetModifierValue_Params params;
	params.Type = Type;
	params.GameplayModifierValue = GameplayModifierValue;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.GameplayModifierContainer.SetFlag
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FGameplayTag            flag                           (Parm)
// bool                           flagValue                      (Parm, ZeroConstructor, IsPlainOldData)

void UGameplayModifierContainer::SetFlag(const struct FGameplayTag& flag, bool flagValue)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.GameplayModifierContainer.SetFlag");

	UGameplayModifierContainer_SetFlag_Params params;
	params.flag = flag;
	params.flagValue = flagValue;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.GameplayModifierContainer.RemoveModifier
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FGameplayTag            Type                           (Parm)

void UGameplayModifierContainer::RemoveModifier(const struct FGameplayTag& Type)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.GameplayModifierContainer.RemoveModifier");

	UGameplayModifierContainer_RemoveModifier_Params params;
	params.Type = Type;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.GameplayModifierContainer.RemoveAllModifiers
// (Final, Native, Public, BlueprintCallable)

void UGameplayModifierContainer::RemoveAllModifiers()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.GameplayModifierContainer.RemoveAllModifiers");

	UGameplayModifierContainer_RemoveAllModifiers_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.GameplayModifierContainer.RemoveAllFlags
// (Final, Native, Public, BlueprintCallable)

void UGameplayModifierContainer::RemoveAllFlags()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.GameplayModifierContainer.RemoveAllFlags");

	UGameplayModifierContainer_RemoveAllFlags_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.GameplayModifierContainer.OnStatusEffectInitialized
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UStatusEffect*           effect                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UGameplayModifierContainer::OnStatusEffectInitialized(class UStatusEffect* effect)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.GameplayModifierContainer.OnStatusEffectInitialized");

	UGameplayModifierContainer_OnStatusEffectInitialized_Params params;
	params.effect = effect;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.GameplayModifierContainer.OnListenedGameEvent
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// TEnumAsByte<EDBDScoreTypes>    EventType                      (Parm, ZeroConstructor, IsPlainOldData)
// float                          amount                         (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  Instigator                     (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  Target                         (Parm, ZeroConstructor, IsPlainOldData)

void UGameplayModifierContainer::OnListenedGameEvent(TEnumAsByte<EDBDScoreTypes> EventType, float amount, class AActor* Instigator, class AActor* Target)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.GameplayModifierContainer.OnListenedGameEvent");

	UGameplayModifierContainer_OnListenedGameEvent_Params params;
	params.EventType = EventType;
	params.amount = amount;
	params.Instigator = Instigator;
	params.Target = Target;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.GameplayModifierContainer.OnLevelReadyToPlay
// (Event, Public, BlueprintEvent)

void UGameplayModifierContainer::OnLevelReadyToPlay()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.GameplayModifierContainer.OnLevelReadyToPlay");

	UGameplayModifierContainer_OnLevelReadyToPlay_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.GameplayModifierContainer.OnInitialized_Internal
// (Native, Public)

void UGameplayModifierContainer::OnInitialized_Internal()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.GameplayModifierContainer.OnInitialized_Internal");

	UGameplayModifierContainer_OnInitialized_Internal_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.GameplayModifierContainer.OnInitialized
// (Native, Event, Public, BlueprintEvent)

void UGameplayModifierContainer::OnInitialized()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.GameplayModifierContainer.OnInitialized");

	UGameplayModifierContainer_OnInitialized_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.GameplayModifierContainer.OnGameEvent
// (Final, Native, Protected)
// Parameters:
// TEnumAsByte<EDBDScoreTypes>    EventType                      (Parm, ZeroConstructor, IsPlainOldData)
// float                          amount                         (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  Instigator                     (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  Target                         (Parm, ZeroConstructor, IsPlainOldData)

void UGameplayModifierContainer::OnGameEvent(TEnumAsByte<EDBDScoreTypes> EventType, float amount, class AActor* Instigator, class AActor* Target)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.GameplayModifierContainer.OnGameEvent");

	UGameplayModifierContainer_OnGameEvent_Params params;
	params.EventType = EventType;
	params.amount = amount;
	params.Instigator = Instigator;
	params.Target = Target;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.GameplayModifierContainer.OnApplyEnd
// (Event, Public, BlueprintEvent)

void UGameplayModifierContainer::OnApplyEnd()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.GameplayModifierContainer.OnApplyEnd");

	UGameplayModifierContainer_OnApplyEnd_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.GameplayModifierContainer.OnApplyBegin
// (Event, Public, BlueprintEvent)

void UGameplayModifierContainer::OnApplyBegin()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.GameplayModifierContainer.OnApplyBegin");

	UGameplayModifierContainer_OnApplyBegin_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.GameplayModifierContainer.Multicast_TriggerCooldownTimer
// (Net, NetReliable, Native, Event, NetMulticast, Protected)
// Parameters:
// float                          cooldownTime                   (Parm, ZeroConstructor, IsPlainOldData)

void UGameplayModifierContainer::Multicast_TriggerCooldownTimer(float cooldownTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.GameplayModifierContainer.Multicast_TriggerCooldownTimer");

	UGameplayModifierContainer_Multicast_TriggerCooldownTimer_Params params;
	params.cooldownTime = cooldownTime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.GameplayModifierContainer.ListenToGameEvent
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// TEnumAsByte<EDBDScoreTypes>    EventType                      (Parm, ZeroConstructor, IsPlainOldData)

void UGameplayModifierContainer::ListenToGameEvent(TEnumAsByte<EDBDScoreTypes> EventType)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.GameplayModifierContainer.ListenToGameEvent");

	UGameplayModifierContainer_ListenToGameEvent_Params params;
	params.EventType = EventType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.GameplayModifierContainer.IsStatusViewActive
// (Native, Event, Protected, BlueprintEvent, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UGameplayModifierContainer::IsStatusViewActive()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.GameplayModifierContainer.IsStatusViewActive");

	UGameplayModifierContainer_IsStatusViewActive_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.GameplayModifierContainer.IsApplicable
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UGameplayModifierContainer::IsApplicable()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.GameplayModifierContainer.IsApplicable");

	UGameplayModifierContainer_IsApplicable_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.GameplayModifierContainer.InstantiateGameplayModifierConditions
// (Final, Native, Public, BlueprintCallable)

void UGameplayModifierContainer::InstantiateGameplayModifierConditions()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.GameplayModifierContainer.InstantiateGameplayModifierConditions");

	UGameplayModifierContainer_InstantiateGameplayModifierConditions_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.GameplayModifierContainer.HasModifierOfType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayTag            Type                           (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UGameplayModifierContainer::HasModifierOfType(const struct FGameplayTag& Type)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.GameplayModifierContainer.HasModifierOfType");

	UGameplayModifierContainer_HasModifierOfType_Params params;
	params.Type = Type;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.GameplayModifierContainer.HasFlag
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayTag            flag                           (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UGameplayModifierContainer::HasFlag(const struct FGameplayTag& flag)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.GameplayModifierContainer.HasFlag");

	UGameplayModifierContainer_HasFlag_Params params;
	params.flag = flag;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.GameplayModifierContainer.GetPercentageFill
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UGameplayModifierContainer::GetPercentageFill()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.GameplayModifierContainer.GetPercentageFill");

	UGameplayModifierContainer_GetPercentageFill_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.GameplayModifierContainer.GetOwningPlayer
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ADBDPlayer*              ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ADBDPlayer* UGameplayModifierContainer::GetOwningPlayer()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.GameplayModifierContainer.GetOwningPlayer");

	UGameplayModifierContainer_GetOwningPlayer_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.GameplayModifierContainer.GetOriginatingEffect
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class UGameplayModifierContainer* ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UGameplayModifierContainer* UGameplayModifierContainer::GetOriginatingEffect()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.GameplayModifierContainer.GetOriginatingEffect");

	UGameplayModifierContainer_GetOriginatingEffect_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.GameplayModifierContainer.GetModifierValue
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayTag            Type                           (Parm)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UGameplayModifierContainer::GetModifierValue(const struct FGameplayTag& Type)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.GameplayModifierContainer.GetModifierValue");

	UGameplayModifierContainer_GetModifierValue_Params params;
	params.Type = Type;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.GameplayModifierContainer.GetLevelToDisplay
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UGameplayModifierContainer::GetLevelToDisplay()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.GameplayModifierContainer.GetLevelToDisplay");

	UGameplayModifierContainer_GetLevelToDisplay_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.GameplayModifierContainer.GetInventoryItemType
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TEnumAsByte<EInventoryItemType> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

TEnumAsByte<EInventoryItemType> UGameplayModifierContainer::GetInventoryItemType()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.GameplayModifierContainer.GetInventoryItemType");

	UGameplayModifierContainer_GetInventoryItemType_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.GameplayModifierContainer.GetIconFilePathIndex
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UGameplayModifierContainer::GetIconFilePathIndex()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.GameplayModifierContainer.GetIconFilePathIndex");

	UGameplayModifierContainer_GetIconFilePathIndex_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.GameplayModifierContainer.GetGameplayModifierData
// (Native, Public)
// Parameters:
// struct FGameplayModifierData   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FGameplayModifierData UGameplayModifierContainer::GetGameplayModifierData()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.GameplayModifierContainer.GetGameplayModifierData");

	UGameplayModifierContainer_GetGameplayModifierData_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.GameplayModifierContainer.GetConstGameplayModifierData
// (Native, Public, Const)
// Parameters:
// struct FGameplayModifierData   ReturnValue                    (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm)

struct FGameplayModifierData UGameplayModifierContainer::GetConstGameplayModifierData()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.GameplayModifierContainer.GetConstGameplayModifierData");

	UGameplayModifierContainer_GetConstGameplayModifierData_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.GameplayModifierContainer.GetCondition
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            Index                          (Parm, ZeroConstructor, IsPlainOldData)
// class UGameplayModifierCondition* ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UGameplayModifierCondition* UGameplayModifierContainer::GetCondition(int Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.GameplayModifierContainer.GetCondition");

	UGameplayModifierContainer_GetCondition_Params params;
	params.Index = Index;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.GameplayModifierContainer.FireActiveStatusViewEvent
// (Final, Native, Protected, BlueprintCallable, Const)
// Parameters:
// struct FName                   StatusViewID                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FName                   uniqueSourceID                 (Parm, ZeroConstructor, IsPlainOldData)
// struct FStatusViewSource       StatusViewSource               (ConstParm, Parm)

void UGameplayModifierContainer::FireActiveStatusViewEvent(const struct FName& StatusViewID, const struct FName& uniqueSourceID, const struct FStatusViewSource& StatusViewSource)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.GameplayModifierContainer.FireActiveStatusViewEvent");

	UGameplayModifierContainer_FireActiveStatusViewEvent_Params params;
	params.StatusViewID = StatusViewID;
	params.uniqueSourceID = uniqueSourceID;
	params.StatusViewSource = StatusViewSource;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.GameplayModifierContainer.FireActivePerkEvent
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:
// float                          percentage                     (Parm, ZeroConstructor, IsPlainOldData)
// int                            chargeCount                    (Parm, ZeroConstructor, IsPlainOldData)

void UGameplayModifierContainer::FireActivePerkEvent(float percentage, int chargeCount)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.GameplayModifierContainer.FireActivePerkEvent");

	UGameplayModifierContainer_FireActivePerkEvent_Params params;
	params.percentage = percentage;
	params.chargeCount = chargeCount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.GameplayModifierContainer.ConvertEGameplayModifierTypeToGamePlayTag
// (Final, Native, Static, Private)
// Parameters:
// class FString                  DefaultValue                   (ConstParm, Parm, ZeroConstructor)
// class FString                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

class FString UGameplayModifierContainer::STATIC_ConvertEGameplayModifierTypeToGamePlayTag(const class FString& DefaultValue)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.GameplayModifierContainer.ConvertEGameplayModifierTypeToGamePlayTag");

	UGameplayModifierContainer_ConvertEGameplayModifierTypeToGamePlayTag_Params params;
	params.DefaultValue = DefaultValue;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.GameplayModifierContainer.ConvertEGameplayModifierFlagToGamePlayTag
// (Final, Native, Static, Private)
// Parameters:
// class FString                  DefaultValue                   (ConstParm, Parm, ZeroConstructor)
// class FString                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

class FString UGameplayModifierContainer::STATIC_ConvertEGameplayModifierFlagToGamePlayTag(const class FString& DefaultValue)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.GameplayModifierContainer.ConvertEGameplayModifierFlagToGamePlayTag");

	UGameplayModifierContainer_ConvertEGameplayModifierFlagToGamePlayTag_Params params;
	params.DefaultValue = DefaultValue;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.GameplayModifierContainer.Authority_TriggerCooldownTimer
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// float                          coolddownTime                  (Parm, ZeroConstructor, IsPlainOldData)

void UGameplayModifierContainer::Authority_TriggerCooldownTimer(float coolddownTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.GameplayModifierContainer.Authority_TriggerCooldownTimer");

	UGameplayModifierContainer_Authority_TriggerCooldownTimer_Params params;
	params.coolddownTime = coolddownTime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.GameplayModifierContainer.Apply
// (Event, Public, BlueprintEvent)
// Parameters:
// float                          DeltaTime                      (Parm, ZeroConstructor, IsPlainOldData)

void UGameplayModifierContainer::Apply(float DeltaTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.GameplayModifierContainer.Apply");

	UGameplayModifierContainer_Apply_Params params;
	params.DeltaTime = DeltaTime;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.GameplayModifierContainer.AddCondition
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UClass*                  conditionType                  (Parm, ZeroConstructor, IsPlainOldData)
// class UGameplayModifierCondition* ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UGameplayModifierCondition* UGameplayModifierContainer::AddCondition(class UClass* conditionType)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.GameplayModifierContainer.AddCondition");

	UGameplayModifierContainer_AddCondition_Params params;
	params.conditionType = conditionType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.GameplayNotificationManager.FireGameplayNotification
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FGameplayNotificationData notificationData               (ConstParm, Parm)
// bool                           addToHistory                   (Parm, ZeroConstructor, IsPlainOldData)

void UGameplayNotificationManager::FireGameplayNotification(const struct FGameplayNotificationData& notificationData, bool addToHistory)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.GameplayNotificationManager.FireGameplayNotification");

	UGameplayNotificationManager_FireGameplayNotification_Params params;
	params.notificationData = notificationData;
	params.addToHistory = addToHistory;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayerState.UpdateSkillCheckInteractionData
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// float                          Progress                       (Parm, ZeroConstructor, IsPlainOldData)

void ADBDPlayerState::UpdateSkillCheckInteractionData(float Progress)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayerState.UpdateSkillCheckInteractionData");

	ADBDPlayerState_UpdateSkillCheckInteractionData_Params params;
	params.Progress = Progress;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayerState.UpdateOngoingScores
// (Final, Native, Protected)

void ADBDPlayerState::UpdateOngoingScores()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayerState.UpdateOngoingScores");

	ADBDPlayerState_UpdateOngoingScores_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayerState.SetSkillCheckInteractionData
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// struct FSkillCheckInteractionData skillCheckData                 (Parm)

void ADBDPlayerState::SetSkillCheckInteractionData(const struct FSkillCheckInteractionData& skillCheckData)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayerState.SetSkillCheckInteractionData");

	ADBDPlayerState_SetSkillCheckInteractionData_Params params;
	params.skillCheckData = skillCheckData;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayerState.SetPlayerGameState
// (Final, Native, Public)
// Parameters:
// TEnumAsByte<EGameState>        newGameState                   (Parm, ZeroConstructor, IsPlainOldData)

void ADBDPlayerState::SetPlayerGameState(TEnumAsByte<EGameState> newGameState)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayerState.SetPlayerGameState");

	ADBDPlayerState_SetPlayerGameState_Params params;
	params.newGameState = newGameState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayerState.SetKillerJoiningState
// (Final, Native, Public)
// Parameters:
// TEnumAsByte<EKillerJoiningState> State                          (Parm, ZeroConstructor, IsPlainOldData)

void ADBDPlayerState::SetKillerJoiningState(TEnumAsByte<EKillerJoiningState> State)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayerState.SetKillerJoiningState");

	ADBDPlayerState_SetKillerJoiningState_Params params;
	params.State = State;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayerState.Server_SetSelectedCharacterId
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// TEnumAsByte<EPlayerRole>       forRole                        (Parm, ZeroConstructor, IsPlainOldData)
// int                            ID                             (Parm, ZeroConstructor, IsPlainOldData)
// bool                           updateDisplayData              (Parm, ZeroConstructor, IsPlainOldData)

void ADBDPlayerState::Server_SetSelectedCharacterId(TEnumAsByte<EPlayerRole> forRole, int ID, bool updateDisplayData)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayerState.Server_SetSelectedCharacterId");

	ADBDPlayerState_Server_SetSelectedCharacterId_Params params;
	params.forRole = forRole;
	params.ID = ID;
	params.updateDisplayData = updateDisplayData;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayerState.Server_SetSelectedCharacterCustomization
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// TEnumAsByte<EPlayerRole>       forRole                        (Parm, ZeroConstructor, IsPlainOldData)
// int                            ID                             (Parm, ZeroConstructor, IsPlainOldData)
// TArray<struct FName>           customizationItemIds           (ConstParm, Parm, ZeroConstructor, ReferenceParm)
// bool                           updateDisplayData              (Parm, ZeroConstructor, IsPlainOldData)

void ADBDPlayerState::Server_SetSelectedCharacterCustomization(TEnumAsByte<EPlayerRole> forRole, int ID, TArray<struct FName> customizationItemIds, bool updateDisplayData)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayerState.Server_SetSelectedCharacterCustomization");

	ADBDPlayerState_Server_SetSelectedCharacterCustomization_Params params;
	params.forRole = forRole;
	params.ID = ID;
	params.customizationItemIds = customizationItemIds;
	params.updateDisplayData = updateDisplayData;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayerState.Server_SetPlayerGameState
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// TEnumAsByte<EGameState>        newGameState                   (Parm, ZeroConstructor, IsPlainOldData)

void ADBDPlayerState::Server_SetPlayerGameState(TEnumAsByte<EGameState> newGameState)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayerState.Server_SetPlayerGameState");

	ADBDPlayerState_Server_SetPlayerGameState_Params params;
	params.newGameState = newGameState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayerState.Server_SetGameRole
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// TEnumAsByte<EPlayerRole>       newPlayerRole                  (Parm, ZeroConstructor, IsPlainOldData)

void ADBDPlayerState::Server_SetGameRole(TEnumAsByte<EPlayerRole> newPlayerRole)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayerState.Server_SetGameRole");

	ADBDPlayerState_Server_SetGameRole_Params params;
	params.newPlayerRole = newPlayerRole;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayerState.Server_RemotelyDispatchGameEvent
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// struct FGameplayTag            gameEventType                  (ConstParm, Parm, ReferenceParm)
// struct FGameEventData          GameEventData                  (ConstParm, Parm, ReferenceParm)

void ADBDPlayerState::Server_RemotelyDispatchGameEvent(const struct FGameplayTag& gameEventType, const struct FGameEventData& GameEventData)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayerState.Server_RemotelyDispatchGameEvent");

	ADBDPlayerState_Server_RemotelyDispatchGameEvent_Params params;
	params.gameEventType = gameEventType;
	params.GameEventData = GameEventData;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayerState.Server_KillerServerJoined
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// bool                           succeeded                      (Parm, ZeroConstructor, IsPlainOldData)

void ADBDPlayerState::Server_KillerServerJoined(bool succeeded)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayerState.Server_KillerServerJoined");

	ADBDPlayerState_Server_KillerServerJoined_Params params;
	params.succeeded = succeeded;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayerState.OnRep_DisplayData
// (Native, Public)

void ADBDPlayerState::OnRep_DisplayData()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayerState.OnRep_DisplayData");

	ADBDPlayerState_OnRep_DisplayData_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayerState.Multicast_UpdateSkillCheckInteractionData
// (Net, NetReliable, Native, Event, NetMulticast, Protected, NetValidate)
// Parameters:
// float                          Progress                       (Parm, ZeroConstructor, IsPlainOldData)

void ADBDPlayerState::Multicast_UpdateSkillCheckInteractionData(float Progress)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayerState.Multicast_UpdateSkillCheckInteractionData");

	ADBDPlayerState_Multicast_UpdateSkillCheckInteractionData_Params params;
	params.Progress = Progress;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayerState.Multicast_SetSkillCheckInteractionData
// (Net, NetReliable, Native, Event, NetMulticast, Protected, NetValidate)
// Parameters:
// struct FSkillCheckInteractionData skillCheckInteraction          (Parm)

void ADBDPlayerState::Multicast_SetSkillCheckInteractionData(const struct FSkillCheckInteractionData& skillCheckInteraction)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayerState.Multicast_SetSkillCheckInteractionData");

	ADBDPlayerState_Multicast_SetSkillCheckInteractionData_Params params;
	params.skillCheckInteraction = skillCheckInteraction;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayerState.Multicast_SetSelectedCharacterId
// (Net, NetReliable, Native, Event, NetMulticast, Protected)
// Parameters:
// TEnumAsByte<EPlayerRole>       forRole                        (Parm, ZeroConstructor, IsPlainOldData)
// int                            ID                             (Parm, ZeroConstructor, IsPlainOldData)
// bool                           updateDisplayData              (Parm, ZeroConstructor, IsPlainOldData)

void ADBDPlayerState::Multicast_SetSelectedCharacterId(TEnumAsByte<EPlayerRole> forRole, int ID, bool updateDisplayData)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayerState.Multicast_SetSelectedCharacterId");

	ADBDPlayerState_Multicast_SetSelectedCharacterId_Params params;
	params.forRole = forRole;
	params.ID = ID;
	params.updateDisplayData = updateDisplayData;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayerState.Multicast_SetSelectedCharacterCustomization
// (Net, NetReliable, Native, Event, NetMulticast, Protected)
// Parameters:
// TEnumAsByte<EPlayerRole>       forRole                        (Parm, ZeroConstructor, IsPlainOldData)
// int                            ID                             (Parm, ZeroConstructor, IsPlainOldData)
// TArray<struct FName>           customizationItemIds           (ConstParm, Parm, ZeroConstructor, ReferenceParm)
// bool                           updateDisplayData              (Parm, ZeroConstructor, IsPlainOldData)

void ADBDPlayerState::Multicast_SetSelectedCharacterCustomization(TEnumAsByte<EPlayerRole> forRole, int ID, TArray<struct FName> customizationItemIds, bool updateDisplayData)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayerState.Multicast_SetSelectedCharacterCustomization");

	ADBDPlayerState_Multicast_SetSelectedCharacterCustomization_Params params;
	params.forRole = forRole;
	params.ID = ID;
	params.customizationItemIds = customizationItemIds;
	params.updateDisplayData = updateDisplayData;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayerState.Multicast_SetPlayerGameState
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// TEnumAsByte<EGameState>        newGameState                   (Parm, ZeroConstructor, IsPlainOldData)

void ADBDPlayerState::Multicast_SetPlayerGameState(TEnumAsByte<EGameState> newGameState)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayerState.Multicast_SetPlayerGameState");

	ADBDPlayerState_Multicast_SetPlayerGameState_Params params;
	params.newGameState = newGameState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayerState.Multicast_SetInParadise
// (Net, NetReliable, Native, Event, NetMulticast, Protected, NetValidate)
// Parameters:
// bool                           KILLED                         (Parm, ZeroConstructor, IsPlainOldData)

void ADBDPlayerState::Multicast_SetInParadise(bool KILLED)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayerState.Multicast_SetInParadise");

	ADBDPlayerState_Multicast_SetInParadise_Params params;
	params.KILLED = KILLED;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayerState.Multicast_SetEquipment
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// TEnumAsByte<ELoadoutSlot>      Slot                           (Parm, ZeroConstructor, IsPlainOldData)
// struct FName                   ItemId                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           callOnRep                      (Parm, ZeroConstructor, IsPlainOldData)

void ADBDPlayerState::Multicast_SetEquipment(TEnumAsByte<ELoadoutSlot> Slot, const struct FName& ItemId, bool callOnRep)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayerState.Multicast_SetEquipment");

	ADBDPlayerState_Multicast_SetEquipment_Params params;
	params.Slot = Slot;
	params.ItemId = ItemId;
	params.callOnRep = callOnRep;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayerState.Multicast_SetAsLeftMatch
// (Net, NetReliable, Native, Event, NetMulticast, Public)

void ADBDPlayerState::Multicast_SetAsLeftMatch()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayerState.Multicast_SetAsLeftMatch");

	ADBDPlayerState_Multicast_SetAsLeftMatch_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayerState.Multicast_ScoreEvent
// (Net, NetReliable, Native, Event, NetMulticast, Protected, NetValidate)
// Parameters:
// struct FScoreEvent             ScoreEvent                     (Parm)

void ADBDPlayerState::Multicast_ScoreEvent(const struct FScoreEvent& ScoreEvent)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayerState.Multicast_ScoreEvent");

	ADBDPlayerState_Multicast_ScoreEvent_Params params;
	params.ScoreEvent = ScoreEvent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayerState.Multicast_RemotelyDispatchGameEvent
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private, NetValidate)
// Parameters:
// struct FGameplayTag            gameEventType                  (ConstParm, Parm, ReferenceParm)
// struct FGameEventData          GameEventData                  (ConstParm, Parm, ReferenceParm)

void ADBDPlayerState::Multicast_RemotelyDispatchGameEvent(const struct FGameplayTag& gameEventType, const struct FGameEventData& GameEventData)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayerState.Multicast_RemotelyDispatchGameEvent");

	ADBDPlayerState_Multicast_RemotelyDispatchGameEvent_Params params;
	params.gameEventType = gameEventType;
	params.GameEventData = GameEventData;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayerState.Multicast_FireGameplayEvent
// (Net, NetReliable, Native, Event, NetMulticast, Public, NetValidate)
// Parameters:
// TEnumAsByte<EDBDScoreTypes>    playerGameplayEventType        (Parm, ZeroConstructor, IsPlainOldData)
// float                          amount                         (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  effector                       (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  Target                         (Parm, ZeroConstructor, IsPlainOldData)

void ADBDPlayerState::Multicast_FireGameplayEvent(TEnumAsByte<EDBDScoreTypes> playerGameplayEventType, float amount, class AActor* effector, class AActor* Target)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayerState.Multicast_FireGameplayEvent");

	ADBDPlayerState_Multicast_FireGameplayEvent_Params params;
	params.playerGameplayEventType = playerGameplayEventType;
	params.amount = amount;
	params.effector = effector;
	params.Target = Target;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayerState.LogCurrentLoadout
// (Final, Native, Public, BlueprintCallable)

void ADBDPlayerState::LogCurrentLoadout()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayerState.LogCurrentLoadout");

	ADBDPlayerState_LogCurrentLoadout_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayerState.KillerJoiningState
// (Final, Native, Public, Const)
// Parameters:
// TEnumAsByte<EKillerJoiningState> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

TEnumAsByte<EKillerJoiningState> ADBDPlayerState::KillerJoiningState()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayerState.KillerJoiningState");

	ADBDPlayerState_KillerJoiningState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDPlayerState.IsEscaped
// (Final, Native, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ADBDPlayerState::IsEscaped()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayerState.IsEscaped");

	ADBDPlayerState_IsEscaped_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDPlayerState.HasHappened
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TEnumAsByte<EDBDScoreTypes>    gameplayEventType              (Parm, ZeroConstructor, IsPlainOldData)
// float                          maxSecondsAgo                  (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ADBDPlayerState::HasHappened(TEnumAsByte<EDBDScoreTypes> gameplayEventType, float maxSecondsAgo)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayerState.HasHappened");

	ADBDPlayerState_HasHappened_Params params;
	params.gameplayEventType = gameplayEventType;
	params.maxSecondsAgo = maxSecondsAgo;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDPlayerState.GetGameplayNotificationManager
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UGameplayNotificationManager* ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UGameplayNotificationManager* ADBDPlayerState::GetGameplayNotificationManager()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayerState.GetGameplayNotificationManager");

	ADBDPlayerState_GetGameplayNotificationManager_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDPlayerState.GetCurrentCharacterID
// (Final, Native, Public, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int ADBDPlayerState::GetCurrentCharacterID()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayerState.GetCurrentCharacterID");

	ADBDPlayerState_GetCurrentCharacterID_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDPlayerState.FireScoreEvent
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<EDBDScoreTypes>    ScoreType                      (Parm, ZeroConstructor, IsPlainOldData)
// float                          PercentToAward                 (Parm, ZeroConstructor, IsPlainOldData)

void ADBDPlayerState::FireScoreEvent(TEnumAsByte<EDBDScoreTypes> ScoreType, float PercentToAward)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayerState.FireScoreEvent");

	ADBDPlayerState_FireScoreEvent_Params params;
	params.ScoreType = ScoreType;
	params.PercentToAward = PercentToAward;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayerState.FireActiveStatusViewEvent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FName                   StatusViewID                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FName                   uniqueSourceID                 (Parm, ZeroConstructor, IsPlainOldData)
// struct FStatusViewSource       StatusViewSource               (ConstParm, Parm)

void ADBDPlayerState::FireActiveStatusViewEvent(const struct FName& StatusViewID, const struct FName& uniqueSourceID, const struct FStatusViewSource& StatusViewSource)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayerState.FireActiveStatusViewEvent");

	ADBDPlayerState_FireActiveStatusViewEvent_Params params;
	params.StatusViewID = StatusViewID;
	params.uniqueSourceID = uniqueSourceID;
	params.StatusViewSource = StatusViewSource;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayerState.FireActiveStatusEffectEvent
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// struct FName                   statusEffectID                 (Parm, ZeroConstructor, IsPlainOldData)
// float                          percentage                     (Parm, ZeroConstructor, IsPlainOldData)
// int                            iconFilePathIndex              (Parm, ZeroConstructor, IsPlainOldData)
// int                            LevelToDisplay                 (Parm, ZeroConstructor, IsPlainOldData)

void ADBDPlayerState::FireActiveStatusEffectEvent(const struct FName& statusEffectID, float percentage, int iconFilePathIndex, int LevelToDisplay)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayerState.FireActiveStatusEffectEvent");

	ADBDPlayerState_FireActiveStatusEffectEvent_Params params;
	params.statusEffectID = statusEffectID;
	params.percentage = percentage;
	params.iconFilePathIndex = iconFilePathIndex;
	params.LevelToDisplay = LevelToDisplay;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayerState.FireActivePerkEvent
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// struct FName                   PerkID                         (Parm, ZeroConstructor, IsPlainOldData)
// int                            LevelToDisplay                 (Parm, ZeroConstructor, IsPlainOldData)
// int                            iconFilePathIndex              (Parm, ZeroConstructor, IsPlainOldData)
// float                          percentage                     (Parm, ZeroConstructor, IsPlainOldData)
// int                            chargeCount                    (Parm, ZeroConstructor, IsPlainOldData)

void ADBDPlayerState::FireActivePerkEvent(const struct FName& PerkID, int LevelToDisplay, int iconFilePathIndex, float percentage, int chargeCount)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayerState.FireActivePerkEvent");

	ADBDPlayerState_FireActivePerkEvent_Params params;
	params.PerkID = PerkID;
	params.LevelToDisplay = LevelToDisplay;
	params.iconFilePathIndex = iconFilePathIndex;
	params.percentage = percentage;
	params.chargeCount = chargeCount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayerState.Client_SetInParadise
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// bool                           KILLED                         (Parm, ZeroConstructor, IsPlainOldData)

void ADBDPlayerState::Client_SetInParadise(bool KILLED)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayerState.Client_SetInParadise");

	ADBDPlayerState_Client_SetInParadise_Params params;
	params.KILLED = KILLED;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayerState.Client_SetGameRole
// (Net, NetReliable, Native, Event, Protected, NetClient, NetValidate)
// Parameters:
// TEnumAsByte<EPlayerRole>       newRole                        (Parm, ZeroConstructor, IsPlainOldData)

void ADBDPlayerState::Client_SetGameRole(TEnumAsByte<EPlayerRole> newRole)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayerState.Client_SetGameRole");

	ADBDPlayerState_Client_SetGameRole_Params params;
	params.newRole = newRole;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayerState.Client_RemoveItemFromInventory
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// struct FName                   toRemove                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           updateLoadout                  (Parm, ZeroConstructor, IsPlainOldData)

void ADBDPlayerState::Client_RemoveItemFromInventory(const struct FName& toRemove, bool updateLoadout)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayerState.Client_RemoveItemFromInventory");

	ADBDPlayerState_Client_RemoveItemFromInventory_Params params;
	params.toRemove = toRemove;
	params.updateLoadout = updateLoadout;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayerState.Authority_HandleScoring
// (Final, Native, Private)
// Parameters:
// TEnumAsByte<EDBDScoreTypes>    ScoreType                      (Parm, ZeroConstructor, IsPlainOldData)
// float                          PercentToAward                 (Parm, ZeroConstructor, IsPlainOldData)

void ADBDPlayerState::Authority_HandleScoring(TEnumAsByte<EDBDScoreTypes> ScoreType, float PercentToAward)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayerState.Authority_HandleScoring");

	ADBDPlayerState_Authority_HandleScoring_Params params;
	params.ScoreType = ScoreType;
	params.PercentToAward = PercentToAward;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayerState.Authority_ForceEndOngoingScoreEvent
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<EDBDScoreTypes>    ScoreType                      (Parm, ZeroConstructor, IsPlainOldData)

void ADBDPlayerState::Authority_ForceEndOngoingScoreEvent(TEnumAsByte<EDBDScoreTypes> ScoreType)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayerState.Authority_ForceEndOngoingScoreEvent");

	ADBDPlayerState_Authority_ForceEndOngoingScoreEvent_Params params;
	params.ScoreType = ScoreType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayerState.Authority_ForceCancelOngoingScoreEvent
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<EDBDScoreTypes>    ScoreType                      (Parm, ZeroConstructor, IsPlainOldData)

void ADBDPlayerState::Authority_ForceCancelOngoingScoreEvent(TEnumAsByte<EDBDScoreTypes> ScoreType)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayerState.Authority_ForceCancelOngoingScoreEvent");

	ADBDPlayerState_Authority_ForceCancelOngoingScoreEvent_Params params;
	params.ScoreType = ScoreType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.AchievementHandlerComponent.ReceiveGameEvent
// (Final, Native, Public)
// Parameters:
// TEnumAsByte<EDBDScoreTypes>    ScoreType                      (Parm, ZeroConstructor, IsPlainOldData)
// float                          amount                         (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  Instigator                     (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  Target                         (Parm, ZeroConstructor, IsPlainOldData)

void UAchievementHandlerComponent::ReceiveGameEvent(TEnumAsByte<EDBDScoreTypes> ScoreType, float amount, class AActor* Instigator, class AActor* Target)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.AchievementHandlerComponent.ReceiveGameEvent");

	UAchievementHandlerComponent_ReceiveGameEvent_Params params;
	params.ScoreType = ScoreType;
	params.amount = amount;
	params.Instigator = Instigator;
	params.Target = Target;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.ActorClipperComponent.SetClippingEnabled
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           Enabled                        (Parm, ZeroConstructor, IsPlainOldData)

void UActorClipperComponent::SetClippingEnabled(bool Enabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.ActorClipperComponent.SetClippingEnabled");

	UActorClipperComponent_SetClippingEnabled_Params params;
	params.Enabled = Enabled;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.ActorClipperComponent.OnOverlapExit
// (Final, Native, Protected)
// Parameters:
// class UPrimitiveComponent*     HitComponent                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// int                            OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData)

void UActorClipperComponent::OnOverlapExit(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.ActorClipperComponent.OnOverlapExit");

	UActorClipperComponent_OnOverlapExit_Params params;
	params.HitComponent = HitComponent;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.ActorClipperComponent.OnOverlapEnter
// (Final, Native, Protected, HasOutParms)
// Parameters:
// class UPrimitiveComponent*     HitComponent                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// int                            OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bFromSweep                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FHitResult              SweepResult                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void UActorClipperComponent::OnOverlapEnter(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.ActorClipperComponent.OnOverlapEnter");

	UActorClipperComponent_OnOverlapEnter_Params params;
	params.HitComponent = HitComponent;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;
	params.bFromSweep = bFromSweep;
	params.SweepResult = SweepResult;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.ActorComponentExt.IsLocallyObserved
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UActorComponent*         ActorComponent                 (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UActorComponentExt::STATIC_IsLocallyObserved(class UActorComponent* ActorComponent)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.ActorComponentExt.IsLocallyObserved");

	UActorComponentExt_IsLocallyObserved_Params params;
	params.ActorComponent = ActorComponent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.ActorComponentExt.IsLocallyControlled
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UActorComponent*         ActorComponent                 (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UActorComponentExt::STATIC_IsLocallyControlled(class UActorComponent* ActorComponent)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.ActorComponentExt.IsLocallyControlled");

	UActorComponentExt_IsLocallyControlled_Params params;
	params.ActorComponent = ActorComponent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.ActorComponentExt.HasAuthority
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UActorComponent*         ActorComponent                 (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UActorComponentExt::STATIC_HasAuthority(class UActorComponent* ActorComponent)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.ActorComponentExt.HasAuthority");

	UActorComponentExt_HasAuthority_Params params;
	params.ActorComponent = ActorComponent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.ActorComponentExt.GetValidatedOwner
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UActorComponent*         ActorComponent                 (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class AActor*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AActor* UActorComponentExt::STATIC_GetValidatedOwner(class UActorComponent* ActorComponent)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.ActorComponentExt.GetValidatedOwner");

	UActorComponentExt_GetValidatedOwner_Params params;
	params.ActorComponent = ActorComponent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.ActorComponentExt.GetOwningSurvivor
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UActorComponent*         ActorComponent                 (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class ACamperPlayer*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ACamperPlayer* UActorComponentExt::STATIC_GetOwningSurvivor(class UActorComponent* ActorComponent)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.ActorComponentExt.GetOwningSurvivor");

	UActorComponentExt_GetOwningSurvivor_Params params;
	params.ActorComponent = ActorComponent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.ActorComponentExt.GetOwningPlayer
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UActorComponent*         ActorComponent                 (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class ADBDPlayer*              ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ADBDPlayer* UActorComponentExt::STATIC_GetOwningPlayer(class UActorComponent* ActorComponent)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.ActorComponentExt.GetOwningPlayer");

	UActorComponentExt_GetOwningPlayer_Params params;
	params.ActorComponent = ActorComponent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.ActorComponentExt.GetOwningKiller
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UActorComponent*         ActorComponent                 (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class ASlasherPlayer*          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ASlasherPlayer* UActorComponentExt::STATIC_GetOwningKiller(class UActorComponent* ActorComponent)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.ActorComponentExt.GetOwningKiller");

	UActorComponentExt_GetOwningKiller_Params params;
	params.ActorComponent = ActorComponent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.TileSpawnPoint.OnRep_SpawnObject
// (Native, Protected)

void UTileSpawnPoint::OnRep_SpawnObject()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.TileSpawnPoint.OnRep_SpawnObject");

	UTileSpawnPoint_OnRep_SpawnObject_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.TileSpawnPoint.GetSpawnedObject
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AActor* UTileSpawnPoint::GetSpawnedObject()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.TileSpawnPoint.GetSpawnedObject");

	UTileSpawnPoint_GetSpawnedObject_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.ActorDetectorComponent.SetDetectionPrimitive
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UPrimitiveComponent*     Primitive                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UActorDetectorComponent::SetDetectionPrimitive(class UPrimitiveComponent* Primitive)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.ActorDetectorComponent.SetDetectionPrimitive");

	UActorDetectorComponent_SetDetectionPrimitive_Params params;
	params.Primitive = Primitive;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.ActorDetectorComponent.OnOverlapEnter
// (Final, Native, Protected, HasOutParms)
// Parameters:
// class UPrimitiveComponent*     HitComponent                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// int                            OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bFromSweep                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FHitResult              SweepResult                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void UActorDetectorComponent::OnOverlapEnter(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.ActorDetectorComponent.OnOverlapEnter");

	UActorDetectorComponent_OnOverlapEnter_Params params;
	params.HitComponent = HitComponent;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;
	params.bFromSweep = bFromSweep;
	params.SweepResult = SweepResult;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.ActorKnowledgeCollection.IsAvailable
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ACharacter*              Character                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UActorKnowledgeCollection::IsAvailable(class ACharacter* Character)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.ActorKnowledgeCollection.IsAvailable");

	UActorKnowledgeCollection_IsAvailable_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.ActorKnowledgeCollection.Contains
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                  Actor                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UActorKnowledgeCollection::Contains(class AActor* Actor)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.ActorKnowledgeCollection.Contains");

	UActorKnowledgeCollection_Contains_Params params;
	params.Actor = Actor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.ActorKnowledgeCollection.Authority_SetSharingType
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<EKnowledgeSharingType> Value                          (Parm, ZeroConstructor, IsPlainOldData)

void UActorKnowledgeCollection::Authority_SetSharingType(TEnumAsByte<EKnowledgeSharingType> Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.ActorKnowledgeCollection.Authority_SetSharingType");

	UActorKnowledgeCollection_Authority_SetSharingType_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.ActorKnowledgeCollection.Authority_SetPossessor
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class ACharacter*              possessor                      (Parm, ZeroConstructor, IsPlainOldData)

void UActorKnowledgeCollection::Authority_SetPossessor(class ACharacter* possessor)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.ActorKnowledgeCollection.Authority_SetPossessor");

	UActorKnowledgeCollection_Authority_SetPossessor_Params params;
	params.possessor = possessor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.ActorKnowledgeCollection.Authority_SetAvailable
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// bool                           Value                          (Parm, ZeroConstructor, IsPlainOldData)

void UActorKnowledgeCollection::Authority_SetAvailable(bool Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.ActorKnowledgeCollection.Authority_SetAvailable");

	UActorKnowledgeCollection_Authority_SetAvailable_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.ActorKnowledgeCollection.Authority_Remove
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                  Actor                          (Parm, ZeroConstructor, IsPlainOldData)

void UActorKnowledgeCollection::Authority_Remove(class AActor* Actor)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.ActorKnowledgeCollection.Authority_Remove");

	UActorKnowledgeCollection_Authority_Remove_Params params;
	params.Actor = Actor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.ActorKnowledgeCollection.Authority_Empty
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)

void UActorKnowledgeCollection::Authority_Empty()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.ActorKnowledgeCollection.Authority_Empty");

	UActorKnowledgeCollection_Authority_Empty_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.ActorKnowledgeCollection.Authority_Append
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// TArray<class AActor*>          Actors                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)

void UActorKnowledgeCollection::Authority_Append(TArray<class AActor*> Actors)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.ActorKnowledgeCollection.Authority_Append");

	UActorKnowledgeCollection_Authority_Append_Params params;
	params.Actors = Actors;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.ActorKnowledgeCollection.Authority_Add
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                  Actor                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UActorKnowledgeCollection::Authority_Add(class AActor* Actor)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.ActorKnowledgeCollection.Authority_Add");

	UActorKnowledgeCollection_Authority_Add_Params params;
	params.Actor = Actor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDClientSyncer.Multicast_SyncSeed
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
// Parameters:
// int                            Seed                           (Parm, ZeroConstructor, IsPlainOldData)
// class UPaperTileMap*           tileMap                        (Parm, ZeroConstructor, IsPlainOldData)

void ADBDClientSyncer::Multicast_SyncSeed(int Seed, class UPaperTileMap* tileMap)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDClientSyncer.Multicast_SyncSeed");

	ADBDClientSyncer_Multicast_SyncSeed_Params params;
	params.Seed = Seed;
	params.tileMap = tileMap;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDClientSyncer.Multicast_SyncFinalLocallySpawnCount
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
// Parameters:
// int16_t                        numLocal                       (Parm, ZeroConstructor, IsPlainOldData)

void ADBDClientSyncer::Multicast_SyncFinalLocallySpawnCount(int16_t numLocal)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDClientSyncer.Multicast_SyncFinalLocallySpawnCount");

	ADBDClientSyncer_Multicast_SyncFinalLocallySpawnCount_Params params;
	params.numLocal = numLocal;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDClientSyncer.Multicast_SyncActorToSpawnLocally
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
// Parameters:
// TArray<struct FSpawnInfo>      spawnInfos                     (ConstParm, Parm, ZeroConstructor, ReferenceParm)
// int16_t                        startIndex                     (Parm, ZeroConstructor, IsPlainOldData)

void ADBDClientSyncer::Multicast_SyncActorToSpawnLocally(TArray<struct FSpawnInfo> spawnInfos, int16_t startIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDClientSyncer.Multicast_SyncActorToSpawnLocally");

	ADBDClientSyncer_Multicast_SyncActorToSpawnLocally_Params params;
	params.spawnInfos = spawnInfos;
	params.startIndex = startIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.ActorSpawner.UseActivatedElement
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UActorSpawner::UseActivatedElement()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.ActorSpawner.UseActivatedElement");

	UActorSpawner_UseActivatedElement_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.ActorSpawner.EditorForceSpawnVisualization
// (Final, Native, Public, BlueprintCallable)

void UActorSpawner::EditorForceSpawnVisualization()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.ActorSpawner.EditorForceSpawnVisualization");

	UActorSpawner_EditorForceSpawnVisualization_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.ActorSpawner.AuthorityGetSpawnedActor
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AActor* UActorSpawner::AuthorityGetSpawnedActor()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.ActorSpawner.AuthorityGetSpawnedActor");

	UActorSpawner_AuthorityGetSpawnedActor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.ActorSpawner.Authority_SpawnActorAsyncEvent
// (Final, Native, Public, BlueprintCallable)

void UActorSpawner::Authority_SpawnActorAsyncEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.ActorSpawner.Authority_SpawnActorAsyncEvent");

	UActorSpawner_Authority_SpawnActorAsyncEvent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.AICharacterBehaviour.Update
// (Native, Public)

void UAICharacterBehaviour::Update()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.AICharacterBehaviour.Update");

	UAICharacterBehaviour_Update_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.AICharacterBehaviour.SetEnable
// (Final, Native, Public)
// Parameters:
// bool                           enable                         (Parm, ZeroConstructor, IsPlainOldData)

void UAICharacterBehaviour::SetEnable(bool enable)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.AICharacterBehaviour.SetEnable");

	UAICharacterBehaviour_SetEnable_Params params;
	params.enable = enable;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.AICharacterBehaviour.IsEnabled
// (Final, Native, Public, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UAICharacterBehaviour::IsEnabled()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.AICharacterBehaviour.IsEnabled");

	UAICharacterBehaviour_IsEnabled_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.CharacterEvasionData.Init
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                  Hunter                         (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class AActor*>          escapePoints                   (Parm, ZeroConstructor)
// float                          minEscapeDist                  (Parm, ZeroConstructor, IsPlainOldData)

void UCharacterEvasionData::Init(class AActor* Hunter, TArray<class AActor*> escapePoints, float minEscapeDist)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CharacterEvasionData.Init");

	UCharacterEvasionData_Init_Params params;
	params.Hunter = Hunter;
	params.escapePoints = escapePoints;
	params.minEscapeDist = minEscapeDist;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.AICharacterEvasionHandler.EscapeDestinationReached
// (Final, Native, Private)
// Parameters:
// struct FAIRequestID            RequestID                      (Parm)
// TEnumAsByte<EPathFollowingResult> result                         (Parm, ZeroConstructor, IsPlainOldData)

void UAICharacterEvasionHandler::EscapeDestinationReached(const struct FAIRequestID& RequestID, TEnumAsByte<EPathFollowingResult> result)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.AICharacterEvasionHandler.EscapeDestinationReached");

	UAICharacterEvasionHandler_EscapeDestinationReached_Params params;
	params.RequestID = RequestID;
	params.result = result;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.AIMoveToInteractData.Init
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                  interactActor                  (Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<ECharacterMovementTypes> characterMovementTypes         (Parm, ZeroConstructor, IsPlainOldData)

void UAIMoveToInteractData::Init(class AActor* interactActor, TEnumAsByte<ECharacterMovementTypes> characterMovementTypes)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.AIMoveToInteractData.Init");

	UAIMoveToInteractData_Init_Params params;
	params.interactActor = interactActor;
	params.characterMovementTypes = characterMovementTypes;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.AIMoveToInteract.InteractionPointReached
// (Final, Native, Private)
// Parameters:
// struct FAIRequestID            RequestID                      (Parm)
// TEnumAsByte<EPathFollowingResult> result                         (Parm, ZeroConstructor, IsPlainOldData)

void UAIMoveToInteract::InteractionPointReached(const struct FAIRequestID& RequestID, TEnumAsByte<EPathFollowingResult> result)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.AIMoveToInteract.InteractionPointReached");

	UAIMoveToInteract_InteractionPointReached_Params params;
	params.RequestID = RequestID;
	params.result = result;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.AIMoveToInteract.Init
// (Native, Public)
// Parameters:
// class ADBDPlayer*              Character                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// class UAICharacterBehaviourData* behaviourData                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void UAIMoveToInteract::Init(class ADBDPlayer* Character, class UAICharacterBehaviourData* behaviourData)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.AIMoveToInteract.Init");

	UAIMoveToInteract_Init_Params params;
	params.Character = Character;
	params.behaviourData = behaviourData;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.AnalyticsFunctionLibrary.StartSurvivorTutorialSectionAnalytics
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<ESurvivorTutorialSections> tutorialSection                (Parm, ZeroConstructor, IsPlainOldData)

void UAnalyticsFunctionLibrary::STATIC_StartSurvivorTutorialSectionAnalytics(class UObject* WorldContextObject, TEnumAsByte<ESurvivorTutorialSections> tutorialSection)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.AnalyticsFunctionLibrary.StartSurvivorTutorialSectionAnalytics");

	UAnalyticsFunctionLibrary_StartSurvivorTutorialSectionAnalytics_Params params;
	params.WorldContextObject = WorldContextObject;
	params.tutorialSection = tutorialSection;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.AnalyticsFunctionLibrary.StartKillerTutorialSectionAnalytics
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<EKillerTutorialSections> tutorialSection                (Parm, ZeroConstructor, IsPlainOldData)

void UAnalyticsFunctionLibrary::STATIC_StartKillerTutorialSectionAnalytics(class UObject* WorldContextObject, TEnumAsByte<EKillerTutorialSections> tutorialSection)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.AnalyticsFunctionLibrary.StartKillerTutorialSectionAnalytics");

	UAnalyticsFunctionLibrary_StartKillerTutorialSectionAnalytics_Params params;
	params.WorldContextObject = WorldContextObject;
	params.tutorialSection = tutorialSection;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.AnalyticsFunctionLibrary.EndSurvivorTutorialSectionAnalytics
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<ESurvivorTutorialSections> tutorialSection                (Parm, ZeroConstructor, IsPlainOldData)

void UAnalyticsFunctionLibrary::STATIC_EndSurvivorTutorialSectionAnalytics(class UObject* WorldContextObject, TEnumAsByte<ESurvivorTutorialSections> tutorialSection)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.AnalyticsFunctionLibrary.EndSurvivorTutorialSectionAnalytics");

	UAnalyticsFunctionLibrary_EndSurvivorTutorialSectionAnalytics_Params params;
	params.WorldContextObject = WorldContextObject;
	params.tutorialSection = tutorialSection;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.AnalyticsFunctionLibrary.EndKillerTutorialSectionAnalytics
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<EKillerTutorialSections> tutorialSection                (Parm, ZeroConstructor, IsPlainOldData)

void UAnalyticsFunctionLibrary::STATIC_EndKillerTutorialSectionAnalytics(class UObject* WorldContextObject, TEnumAsByte<EKillerTutorialSections> tutorialSection)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.AnalyticsFunctionLibrary.EndKillerTutorialSectionAnalytics");

	UAnalyticsFunctionLibrary_EndKillerTutorialSectionAnalytics_Params params;
	params.WorldContextObject = WorldContextObject;
	params.tutorialSection = tutorialSection;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.AnimationMontageSlave.SetLeader
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UMontagePlayer*          leader                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UAnimationMontageSlave::SetLeader(class UMontagePlayer* leader)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.AnimationMontageSlave.SetLeader");

	UAnimationMontageSlave_SetLeader_Params params;
	params.leader = leader;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.AnimationMontageSlave.OnMontageStopped
// (Final, Native, Private)
// Parameters:
// struct FAnimationMontageDescriptor ID                             (ConstParm, Parm)

void UAnimationMontageSlave::OnMontageStopped(const struct FAnimationMontageDescriptor& ID)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.AnimationMontageSlave.OnMontageStopped");

	UAnimationMontageSlave_OnMontageStopped_Params params;
	params.ID = ID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.AnimationMontageSlave.OnMontageStarted
// (Final, Native, Private)
// Parameters:
// struct FAnimationMontageDescriptor ID                             (ConstParm, Parm)
// float                          rate                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void UAnimationMontageSlave::OnMontageStarted(const struct FAnimationMontageDescriptor& ID, float rate)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.AnimationMontageSlave.OnMontageStarted");

	UAnimationMontageSlave_OnMontageStarted_Params params;
	params.ID = ID;
	params.rate = rate;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.CameraHandlerComponent.SetSocketID
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<EDBDCameraSocketID> mode                           (Parm, ZeroConstructor, IsPlainOldData)

void UCameraHandlerComponent::SetSocketID(TEnumAsByte<EDBDCameraSocketID> mode)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CameraHandlerComponent.SetSocketID");

	UCameraHandlerComponent_SetSocketID_Params params;
	params.mode = mode;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.CameraHandlerComponent.PlayVFXOnCurrentCamera
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UParticleSystemComponent* Component                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UCameraHandlerComponent::PlayVFXOnCurrentCamera(class UParticleSystemComponent* Component)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CameraHandlerComponent.PlayVFXOnCurrentCamera");

	UCameraHandlerComponent_PlayVFXOnCurrentCamera_Params params;
	params.Component = Component;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.CameraHandlerComponent.GetSocketID
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<EDBDCameraSocketID> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

TEnumAsByte<EDBDCameraSocketID> UCameraHandlerComponent::GetSocketID()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CameraHandlerComponent.GetSocketID");

	UCameraHandlerComponent_GetSocketID_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.CameraHandlerComponent.GetCurrentCamera
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AActor* UCameraHandlerComponent::GetCurrentCamera()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CameraHandlerComponent.GetCurrentCamera");

	UCameraHandlerComponent_GetCurrentCamera_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.CameraHandlerComponent.AddCameraToSocket
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<EDBDCameraSocketID> mode                           (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  Camera                         (Parm, ZeroConstructor, IsPlainOldData)

void UCameraHandlerComponent::AddCameraToSocket(TEnumAsByte<EDBDCameraSocketID> mode, class AActor* Camera)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CameraHandlerComponent.AddCameraToSocket");

	UCameraHandlerComponent_AddCameraToSocket_Params params;
	params.mode = mode;
	params.Camera = Camera;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.MontagePlayer.Stop
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          BlendOutTime                   (Parm, ZeroConstructor, IsPlainOldData)

void UMontagePlayer::Stop(float BlendOutTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.MontagePlayer.Stop");

	UMontagePlayer_Stop_Params params;
	params.BlendOutTime = BlendOutTime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.MontagePlayer.SetPlayRate
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          PlayRate                       (Parm, ZeroConstructor, IsPlainOldData)

void UMontagePlayer::SetPlayRate(float PlayRate)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.MontagePlayer.SetPlayRate");

	UMontagePlayer_SetPlayRate_Params params;
	params.PlayRate = PlayRate;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.MontagePlayer.SetAnimInstance
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UAnimInstance*           AnimInstance                   (Parm, ZeroConstructor, IsPlainOldData)

void UMontagePlayer::SetAnimInstance(class UAnimInstance* AnimInstance)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.MontagePlayer.SetAnimInstance");

	UMontagePlayer_SetAnimInstance_Params params;
	params.AnimInstance = AnimInstance;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.MontagePlayer.PlayScaledForDuration
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FAnimationMontageDescriptor animMontageID                  (Parm)
// float                          duration                       (Parm, ZeroConstructor, IsPlainOldData)
// class UAnimMontage*            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UAnimMontage* UMontagePlayer::PlayScaledForDuration(const struct FAnimationMontageDescriptor& animMontageID, float duration)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.MontagePlayer.PlayScaledForDuration");

	UMontagePlayer_PlayScaledForDuration_Params params;
	params.animMontageID = animMontageID;
	params.duration = duration;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.MontagePlayer.PlayLoopForDuration
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FAnimationMontageDescriptor animMontageID                  (Parm)
// float                          duration                       (Parm, ZeroConstructor, IsPlainOldData)
// float                          PlayRate                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FName                   Out                            (Parm, ZeroConstructor, IsPlainOldData)
// class UAnimMontage*            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UAnimMontage* UMontagePlayer::PlayLoopForDuration(const struct FAnimationMontageDescriptor& animMontageID, float duration, float PlayRate, const struct FName& Out)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.MontagePlayer.PlayLoopForDuration");

	UMontagePlayer_PlayLoopForDuration_Params params;
	params.animMontageID = animMontageID;
	params.duration = duration;
	params.PlayRate = PlayRate;
	params.Out = Out;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.MontagePlayer.Play
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FAnimationMontageDescriptor animMontageID                  (Parm)
// float                          PlayRate                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           isFollower                     (Parm, ZeroConstructor, IsPlainOldData)
// class UAnimMontage*            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UAnimMontage* UMontagePlayer::Play(const struct FAnimationMontageDescriptor& animMontageID, float PlayRate, bool isFollower)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.MontagePlayer.Play");

	UMontagePlayer_Play_Params params;
	params.animMontageID = animMontageID;
	params.PlayRate = PlayRate;
	params.isFollower = isFollower;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.MontagePlayer.OnMontageEndedInternal
// (Final, Native, Private, HasDefaults)
// Parameters:
// struct FGuid                   Guid                           (Parm, ZeroConstructor, IsPlainOldData)
// class UAnimMontage*            Montage                        (Parm, ZeroConstructor, IsPlainOldData)
// bool                           interrupted                    (Parm, ZeroConstructor, IsPlainOldData)

void UMontagePlayer::OnMontageEndedInternal(const struct FGuid& Guid, class UAnimMontage* Montage, bool interrupted)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.MontagePlayer.OnMontageEndedInternal");

	UMontagePlayer_OnMontageEndedInternal_Params params;
	params.Guid = Guid;
	params.Montage = Montage;
	params.interrupted = interrupted;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.MontagePlayer.OnMontageBlendingOutInternal
// (Final, Native, Private, HasDefaults)
// Parameters:
// struct FGuid                   Guid                           (Parm, ZeroConstructor, IsPlainOldData)
// class UAnimMontage*            Montage                        (Parm, ZeroConstructor, IsPlainOldData)
// bool                           interrupted                    (Parm, ZeroConstructor, IsPlainOldData)

void UMontagePlayer::OnMontageBlendingOutInternal(const struct FGuid& Guid, class UAnimMontage* Montage, bool interrupted)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.MontagePlayer.OnMontageBlendingOutInternal");

	UMontagePlayer_OnMontageBlendingOutInternal_Params params;
	params.Guid = Guid;
	params.Montage = Montage;
	params.interrupted = interrupted;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.MontagePlayer.JumpToSectionEnd
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FName                   sectionName                    (Parm, ZeroConstructor, IsPlainOldData)

void UMontagePlayer::JumpToSectionEnd(const struct FName& sectionName)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.MontagePlayer.JumpToSectionEnd");

	UMontagePlayer_JumpToSectionEnd_Params params;
	params.sectionName = sectionName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.MontagePlayer.JumpToSection
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FName                   sectionName                    (Parm, ZeroConstructor, IsPlainOldData)

void UMontagePlayer::JumpToSection(const struct FName& sectionName)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.MontagePlayer.JumpToSection");

	UMontagePlayer_JumpToSection_Params params;
	params.sectionName = sectionName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.MontagePlayer.IsPlayingAnyMontage
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UMontagePlayer::IsPlayingAnyMontage()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.MontagePlayer.IsPlayingAnyMontage");

	UMontagePlayer_IsPlayingAnyMontage_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.MontagePlayer.IsPlaying
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FAnimationMontageDescriptor montageDescriptor              (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UMontagePlayer::IsPlaying(const struct FAnimationMontageDescriptor& montageDescriptor)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.MontagePlayer.IsPlaying");

	UMontagePlayer_IsPlaying_Params params;
	params.montageDescriptor = montageDescriptor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.MontagePlayer.GetAnimInstance
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UAnimInstance*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UAnimInstance* UMontagePlayer::GetAnimInstance()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.MontagePlayer.GetAnimInstance");

	UMontagePlayer_GetAnimInstance_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDPlayer.UseInventoryItem
// (Final, Native, Public, BlueprintCallable)

void ADBDPlayer::UseInventoryItem()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.UseInventoryItem");

	ADBDPlayer_UseInventoryItem_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.UpdateLoadoutFromInventory
// (Final, Native, Public)

void ADBDPlayer::UpdateLoadoutFromInventory()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.UpdateLoadoutFromInventory");

	ADBDPlayer_UpdateLoadoutFromInventory_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.TryInteractionType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<EInputInteractionType> interactionInputType           (Parm, ZeroConstructor, IsPlainOldData)
// class ADBDPlayer*              Requester                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           usingInputPersistence          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ADBDPlayer::TryInteractionType(TEnumAsByte<EInputInteractionType> interactionInputType, class ADBDPlayer* Requester, bool usingInputPersistence)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.TryInteractionType");

	ADBDPlayer_TryInteractionType_Params params;
	params.interactionInputType = interactionInputType;
	params.Requester = Requester;
	params.usingInputPersistence = usingInputPersistence;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDPlayer.TryInteraction
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UInteractionDefinition*  Interaction                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class ADBDPlayer*              Requester                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           Force                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           usingInputPersistence          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ADBDPlayer::TryInteraction(class UInteractionDefinition* Interaction, class ADBDPlayer* Requester, bool Force, bool usingInputPersistence)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.TryInteraction");

	ADBDPlayer_TryInteraction_Params params;
	params.Interaction = Interaction;
	params.Requester = Requester;
	params.Force = Force;
	params.usingInputPersistence = usingInputPersistence;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDPlayer.TryFireScoreEvent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<EDBDScoreTypes>    ScoreType                      (Parm, ZeroConstructor, IsPlainOldData)
// float                          PercentToAward                 (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ADBDPlayer::TryFireScoreEvent(TEnumAsByte<EDBDScoreTypes> ScoreType, float PercentToAward)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.TryFireScoreEvent");

	ADBDPlayer_TryFireScoreEvent_Params params;
	params.ScoreType = ScoreType;
	params.PercentToAward = PercentToAward;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDPlayer.TriggerTrapImmunity
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          duration                       (Parm, ZeroConstructor, IsPlainOldData)

void ADBDPlayer::TriggerTrapImmunity(float duration)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.TriggerTrapImmunity");

	ADBDPlayer_TriggerTrapImmunity_Params params;
	params.duration = duration;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.TriggerAnimNotify
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<EAnimNotifyType>   animNotifyType                 (Parm, ZeroConstructor, IsPlainOldData)

void ADBDPlayer::TriggerAnimNotify(TEnumAsByte<EAnimNotifyType> animNotifyType)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.TriggerAnimNotify");

	ADBDPlayer_TriggerAnimNotify_Params params;
	params.animNotifyType = animNotifyType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.ToggleGhost
// (Final, Native, Public, BlueprintCallable)

void ADBDPlayer::ToggleGhost()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.ToggleGhost");

	ADBDPlayer_ToggleGhost_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.TeleportToBP
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                 DestLocation                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// struct FRotator                DestRotation                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// bool                           bIsATest                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bNoCheck                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ADBDPlayer::TeleportToBP(const struct FVector& DestLocation, const struct FRotator& DestRotation, bool bIsATest, bool bNoCheck)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.TeleportToBP");

	ADBDPlayer_TeleportToBP_Params params;
	params.DestLocation = DestLocation;
	params.DestRotation = DestRotation;
	params.bIsATest = bIsATest;
	params.bNoCheck = bNoCheck;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDPlayer.StoreItem
// (Final, Native, Public, BlueprintCallable)

void ADBDPlayer::StoreItem()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.StoreItem");

	ADBDPlayer_StoreItem_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.StopSnap
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           snap                           (Parm, ZeroConstructor, IsPlainOldData)

void ADBDPlayer::StopSnap(bool snap)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.StopSnap");

	ADBDPlayer_StopSnap_Params params;
	params.snap = snap;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.StopMontage
// (Final, Native, Public, BlueprintCallable)

void ADBDPlayer::StopMontage()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.StopMontage");

	ADBDPlayer_StopMontage_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.StopAllMovement
// (Final, Native, Public, BlueprintCallable)

void ADBDPlayer::StopAllMovement()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.StopAllMovement");

	ADBDPlayer_StopAllMovement_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.StartDrop
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ACollectable*            Item                           (Parm, ZeroConstructor, IsPlainOldData)

void ADBDPlayer::StartDrop(class ACollectable* Item)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.StartDrop");

	ADBDPlayer_StartDrop_Params params;
	params.Item = Item;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.SpawnCollectedItem
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// struct FName                   ItemId                         (Parm, ZeroConstructor, IsPlainOldData)
// class ACollectable*            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ACollectable* ADBDPlayer::SpawnCollectedItem(const struct FName& ItemId)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.SpawnCollectedItem");

	ADBDPlayer_SpawnCollectedItem_Params params;
	params.ItemId = ItemId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDPlayer.SnapCharacter
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// bool                           snapPosition                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 Position                       (Parm, ZeroConstructor, IsPlainOldData)
// float                          stopSnapDistance               (Parm, ZeroConstructor, IsPlainOldData)
// bool                           snapRotation                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FRotator                Rotation                       (Parm, ZeroConstructor, IsPlainOldData)
// float                          Time                           (Parm, ZeroConstructor, IsPlainOldData)
// bool                           useZCoord                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           sweepOnFinalSnap               (Parm, ZeroConstructor, IsPlainOldData)

void ADBDPlayer::SnapCharacter(bool snapPosition, const struct FVector& Position, float stopSnapDistance, bool snapRotation, const struct FRotator& Rotation, float Time, bool useZCoord, bool sweepOnFinalSnap)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.SnapCharacter");

	ADBDPlayer_SnapCharacter_Params params;
	params.snapPosition = snapPosition;
	params.Position = Position;
	params.stopSnapDistance = stopSnapDistance;
	params.snapRotation = snapRotation;
	params.Rotation = Rotation;
	params.Time = Time;
	params.useZCoord = useZCoord;
	params.sweepOnFinalSnap = sweepOnFinalSnap;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.ShouldFall
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ADBDPlayer::ShouldFall()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.ShouldFall");

	ADBDPlayer_ShouldFall_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDPlayer.SetYawScale
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          yawScale                       (Parm, ZeroConstructor, IsPlainOldData)
// float                          adjustTime                     (Parm, ZeroConstructor, IsPlainOldData)

void ADBDPlayer::SetYawScale(float yawScale, float adjustTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.SetYawScale");

	ADBDPlayer_SetYawScale_Params params;
	params.yawScale = yawScale;
	params.adjustTime = adjustTime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.SetWorldCollisionResponse
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<ECollisionResponse> Response                       (Parm, ZeroConstructor, IsPlainOldData)

void ADBDPlayer::SetWorldCollisionResponse(TEnumAsByte<ECollisionResponse> Response)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.SetWorldCollisionResponse");

	ADBDPlayer_SetWorldCollisionResponse_Params params;
	params.Response = Response;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.SetRightFootAudioSurfaceName
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                  Name                           (Parm, ZeroConstructor)

void ADBDPlayer::SetRightFootAudioSurfaceName(const class FString& Name)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.SetRightFootAudioSurfaceName");

	ADBDPlayer_SetRightFootAudioSurfaceName_Params params;
	params.Name = Name;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.SetReverseMontage
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           Reverse                        (Parm, ZeroConstructor, IsPlainOldData)

void ADBDPlayer::SetReverseMontage(bool Reverse)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.SetReverseMontage");

	ADBDPlayer_SetReverseMontage_Params params;
	params.Reverse = Reverse;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.SetPlayerDirection
// (Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FRotator                Rotation                       (Parm, ZeroConstructor, IsPlainOldData)

void ADBDPlayer::SetPlayerDirection(const struct FRotator& Rotation)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.SetPlayerDirection");

	ADBDPlayer_SetPlayerDirection_Params params;
	params.Rotation = Rotation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.SetPitchScale
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          yawScale                       (Parm, ZeroConstructor, IsPlainOldData)
// float                          adjustTime                     (Parm, ZeroConstructor, IsPlainOldData)

void ADBDPlayer::SetPitchScale(float yawScale, float adjustTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.SetPitchScale");

	ADBDPlayer_SetPitchScale_Params params;
	params.yawScale = yawScale;
	params.adjustTime = adjustTime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.SetPawnAuthoritativeMovement
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           authoritative                  (Parm, ZeroConstructor, IsPlainOldData)

void ADBDPlayer::SetPawnAuthoritativeMovement(bool authoritative)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.SetPawnAuthoritativeMovement");

	ADBDPlayer_SetPawnAuthoritativeMovement_Params params;
	params.authoritative = authoritative;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.SetLeftFootAudioSurfaceName
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                  Name                           (Parm, ZeroConstructor)

void ADBDPlayer::SetLeftFootAudioSurfaceName(const class FString& Name)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.SetLeftFootAudioSurfaceName");

	ADBDPlayer_SetLeftFootAudioSurfaceName_Params params;
	params.Name = Name;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.SetIsCloaked
// (Native, Protected, BlueprintCallable)
// Parameters:
// bool                           IsCloaked                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           Forced                         (Parm, ZeroConstructor, IsPlainOldData)

void ADBDPlayer::SetIsCloaked(bool IsCloaked, bool Forced)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.SetIsCloaked");

	ADBDPlayer_SetIsCloaked_Params params;
	params.IsCloaked = IsCloaked;
	params.Forced = Forced;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.SetInStalkMode
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                           stalkMode                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           Forced                         (Parm, ZeroConstructor, IsPlainOldData)

void ADBDPlayer::SetInStalkMode(bool stalkMode, bool Forced)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.SetInStalkMode");

	ADBDPlayer_SetInStalkMode_Params params;
	params.stalkMode = stalkMode;
	params.Forced = Forced;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.SetInParadise
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                           inParadise                     (Parm, ZeroConstructor, IsPlainOldData)

void ADBDPlayer::SetInParadise(bool inParadise)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.SetInParadise");

	ADBDPlayer_SetInParadise_Params params;
	params.inParadise = inParadise;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.SetIgnoreActorCollision
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                  ActorToIgnore                  (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ignore                         (Parm, ZeroConstructor, IsPlainOldData)

void ADBDPlayer::SetIgnoreActorCollision(class AActor* ActorToIgnore, bool ignore)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.SetIgnoreActorCollision");

	ADBDPlayer_SetIgnoreActorCollision_Params params;
	params.ActorToIgnore = ActorToIgnore;
	params.ignore = ignore;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.SetGuidingPlayer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ADBDPlayer*              guidingPlayer                  (Parm, ZeroConstructor, IsPlainOldData)

void ADBDPlayer::SetGuidingPlayer(class ADBDPlayer* guidingPlayer)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.SetGuidingPlayer");

	ADBDPlayer_SetGuidingPlayer_Params params;
	params.guidingPlayer = guidingPlayer;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.SetForceDisableSkillChecks
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           IsEnabled                      (Parm, ZeroConstructor, IsPlainOldData)

void ADBDPlayer::SetForceDisableSkillChecks(bool IsEnabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.SetForceDisableSkillChecks");

	ADBDPlayer_SetForceDisableSkillChecks_Params params;
	params.IsEnabled = IsEnabled;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.SetFirstPersonVfxsVisibility
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           isFirstPerson                  (Parm, ZeroConstructor, IsPlainOldData)

void ADBDPlayer::SetFirstPersonVfxsVisibility(bool isFirstPerson)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.SetFirstPersonVfxsVisibility");

	ADBDPlayer_SetFirstPersonVfxsVisibility_Params params;
	params.isFirstPerson = isFirstPerson;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.SetFirstPersonModelEnabled
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           Enabled                        (Parm, ZeroConstructor, IsPlainOldData)
// bool                           Force                          (Parm, ZeroConstructor, IsPlainOldData)

void ADBDPlayer::SetFirstPersonModelEnabled(bool Enabled, bool Force)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.SetFirstPersonModelEnabled");

	ADBDPlayer_SetFirstPersonModelEnabled_Params params;
	params.Enabled = Enabled;
	params.Force = Force;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.SetFeetOnGround
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           feetOnGround                   (Parm, ZeroConstructor, IsPlainOldData)

void ADBDPlayer::SetFeetOnGround(bool feetOnGround)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.SetFeetOnGround");

	ADBDPlayer_SetFeetOnGround_Params params;
	params.feetOnGround = feetOnGround;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.SetEnableServerPositionUpdates
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           enable                         (Parm, ZeroConstructor, IsPlainOldData)

void ADBDPlayer::SetEnableServerPositionUpdates(bool enable)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.SetEnableServerPositionUpdates");

	ADBDPlayer_SetEnableServerPositionUpdates_Params params;
	params.enable = enable;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.SetDetectionZoneEnabled
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<EDetectionZone>    detectionZoneID                (Parm, ZeroConstructor, IsPlainOldData)
// bool                           Enabled                        (Parm, ZeroConstructor, IsPlainOldData)

void ADBDPlayer::SetDetectionZoneEnabled(TEnumAsByte<EDetectionZone> detectionZoneID, bool Enabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.SetDetectionZoneEnabled");

	ADBDPlayer_SetDetectionZoneEnabled_Params params;
	params.detectionZoneID = detectionZoneID;
	params.Enabled = Enabled;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.SetCurrentInteractionAnimation
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<EInteractionAnimation> Animation                      (Parm, ZeroConstructor, IsPlainOldData)

void ADBDPlayer::SetCurrentInteractionAnimation(TEnumAsByte<EInteractionAnimation> Animation)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.SetCurrentInteractionAnimation");

	ADBDPlayer_SetCurrentInteractionAnimation_Params params;
	params.Animation = Animation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.SetCharacterAudioSurfaceName
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                  Name                           (Parm, ZeroConstructor)

void ADBDPlayer::SetCharacterAudioSurfaceName(const class FString& Name)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.SetCharacterAudioSurfaceName");

	ADBDPlayer_SetCharacterAudioSurfaceName_Params params;
	params.Name = Name;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.SetAuthoritativeMovementFlag
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<EAuthoritativeMovementFlag> flagIndex                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           Enabled                        (Parm, ZeroConstructor, IsPlainOldData)

void ADBDPlayer::SetAuthoritativeMovementFlag(TEnumAsByte<EAuthoritativeMovementFlag> flagIndex, bool Enabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.SetAuthoritativeMovementFlag");

	ADBDPlayer_SetAuthoritativeMovementFlag_Params params;
	params.flagIndex = flagIndex;
	params.Enabled = Enabled;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.SetAnimationCrouchState
// (Event, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                           crouched                       (Parm, ZeroConstructor, IsPlainOldData)

void ADBDPlayer::SetAnimationCrouchState(bool crouched)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.SetAnimationCrouchState");

	ADBDPlayer_SetAnimationCrouchState_Params params;
	params.crouched = crouched;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.SetAllowNavigation
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           enable                         (Parm, ZeroConstructor, IsPlainOldData)

void ADBDPlayer::SetAllowNavigation(bool enable)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.SetAllowNavigation");

	ADBDPlayer_SetAllowNavigation_Params params;
	params.enable = enable;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.SetAllDetectionZonesEnabled
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           Enabled                        (Parm, ZeroConstructor, IsPlainOldData)

void ADBDPlayer::SetAllDetectionZonesEnabled(bool Enabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.SetAllDetectionZonesEnabled");

	ADBDPlayer_SetAllDetectionZonesEnabled_Params params;
	params.Enabled = Enabled;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.ServerResetMeshRelativeOffSet
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void ADBDPlayer::ServerResetMeshRelativeOffSet()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.ServerResetMeshRelativeOffSet");

	ADBDPlayer_ServerResetMeshRelativeOffSet_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.Server_UpdateScreenAspectRatio
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// float                          Value                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void ADBDPlayer::Server_UpdateScreenAspectRatio(float Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.Server_UpdateScreenAspectRatio");

	ADBDPlayer_Server_UpdateScreenAspectRatio_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.Server_TeleportTo
// (Net, NetReliable, Native, Event, Public, NetServer, HasDefaults, NetValidate)
// Parameters:
// struct FVector                 DestLocation                   (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// struct FRotator                DestRotation                   (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// bool                           bIsATest                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bNoCheck                       (Parm, ZeroConstructor, IsPlainOldData)

void ADBDPlayer::Server_TeleportTo(const struct FVector& DestLocation, const struct FRotator& DestRotation, bool bIsATest, bool bNoCheck)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.Server_TeleportTo");

	ADBDPlayer_Server_TeleportTo_Params params;
	params.DestLocation = DestLocation;
	params.DestRotation = DestRotation;
	params.bIsATest = bIsATest;
	params.bNoCheck = bNoCheck;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.Server_SpawnStatusEffect
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// struct FName                   statusEffectID                 (Parm, ZeroConstructor, IsPlainOldData)

void ADBDPlayer::Server_SpawnStatusEffect(const struct FName& statusEffectID)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.Server_SpawnStatusEffect");

	ADBDPlayer_Server_SpawnStatusEffect_Params params;
	params.statusEffectID = statusEffectID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.Server_SpawnPerk
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// struct FName                   PerkID                         (Parm, ZeroConstructor, IsPlainOldData)
// int                            PerkLevel                      (Parm, ZeroConstructor, IsPlainOldData)

void ADBDPlayer::Server_SpawnPerk(const struct FName& PerkID, int PerkLevel)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.Server_SpawnPerk");

	ADBDPlayer_Server_SpawnPerk_Params params;
	params.PerkID = PerkID;
	params.PerkLevel = PerkLevel;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.Server_SpawnItemAddon
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// struct FName                   AddonID                        (Parm, ZeroConstructor, IsPlainOldData)

void ADBDPlayer::Server_SpawnItemAddon(const struct FName& AddonID)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.Server_SpawnItemAddon");

	ADBDPlayer_Server_SpawnItemAddon_Params params;
	params.AddonID = AddonID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.Server_SpawnItem
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// struct FName                   ItemId                         (Parm, ZeroConstructor, IsPlainOldData)

void ADBDPlayer::Server_SpawnItem(const struct FName& ItemId)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.Server_SpawnItem");

	ADBDPlayer_Server_SpawnItem_Params params;
	params.ItemId = ItemId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.Server_SetWindowFreeCam
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// bool                           Enabled                        (Parm, ZeroConstructor, IsPlainOldData)

void ADBDPlayer::Server_SetWindowFreeCam(bool Enabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.Server_SetWindowFreeCam");

	ADBDPlayer_Server_SetWindowFreeCam_Params params;
	params.Enabled = Enabled;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.Server_SetSlasherAutoAttackOnCamperInteractFrameDelay
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// int                            frames                         (Parm, ZeroConstructor, IsPlainOldData)

void ADBDPlayer::Server_SetSlasherAutoAttackOnCamperInteractFrameDelay(int frames)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.Server_SetSlasherAutoAttackOnCamperInteractFrameDelay");

	ADBDPlayer_Server_SetSlasherAutoAttackOnCamperInteractFrameDelay_Params params;
	params.frames = frames;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.Server_SetRunVaultEnabled
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// bool                           Enabled                        (Parm, ZeroConstructor, IsPlainOldData)

void ADBDPlayer::Server_SetRunVaultEnabled(bool Enabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.Server_SetRunVaultEnabled");

	ADBDPlayer_Server_SetRunVaultEnabled_Params params;
	params.Enabled = Enabled;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.Server_SetReverseTraverseEnabled
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// bool                           Enabled                        (Parm, ZeroConstructor, IsPlainOldData)

void ADBDPlayer::Server_SetReverseTraverseEnabled(bool Enabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.Server_SetReverseTraverseEnabled");

	ADBDPlayer_Server_SetReverseTraverseEnabled_Params params;
	params.Enabled = Enabled;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.Server_SetMaxWalkSpeed
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// float                          MaxWalkSpeed                   (Parm, ZeroConstructor, IsPlainOldData)

void ADBDPlayer::Server_SetMaxWalkSpeed(float MaxWalkSpeed)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.Server_SetMaxWalkSpeed");

	ADBDPlayer_Server_SetMaxWalkSpeed_Params params;
	params.MaxWalkSpeed = MaxWalkSpeed;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.Server_SetForceAuthoritativeMovement
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// bool                           Value                          (Parm, ZeroConstructor, IsPlainOldData)

void ADBDPlayer::Server_SetForceAuthoritativeMovement(bool Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.Server_SetForceAuthoritativeMovement");

	ADBDPlayer_Server_SetForceAuthoritativeMovement_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.Server_SetEthereal
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// bool                           Enabled                        (Parm, ZeroConstructor, IsPlainOldData)

void ADBDPlayer::Server_SetEthereal(bool Enabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.Server_SetEthereal");

	ADBDPlayer_Server_SetEthereal_Params params;
	params.Enabled = Enabled;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.Server_SetEnableServerPositionUpdates
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// bool                           Enabled                        (Parm, ZeroConstructor, IsPlainOldData)

void ADBDPlayer::Server_SetEnableServerPositionUpdates(bool Enabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.Server_SetEnableServerPositionUpdates");

	ADBDPlayer_Server_SetEnableServerPositionUpdates_Params params;
	params.Enabled = Enabled;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.Server_SetEnableCapsuleDynamicResize
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// bool                           Enabled                        (Parm, ZeroConstructor, IsPlainOldData)

void ADBDPlayer::Server_SetEnableCapsuleDynamicResize(bool Enabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.Server_SetEnableCapsuleDynamicResize");

	ADBDPlayer_Server_SetEnableCapsuleDynamicResize_Params params;
	params.Enabled = Enabled;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.Server_SetDebugSnapPoint
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// bool                           Enabled                        (Parm, ZeroConstructor, IsPlainOldData)

void ADBDPlayer::Server_SetDebugSnapPoint(bool Enabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.Server_SetDebugSnapPoint");

	ADBDPlayer_Server_SetDebugSnapPoint_Params params;
	params.Enabled = Enabled;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.Server_SetDebugPrintAvailableInteractions
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// bool                           Enabled                        (Parm, ZeroConstructor, IsPlainOldData)

void ADBDPlayer::Server_SetDebugPrintAvailableInteractions(bool Enabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.Server_SetDebugPrintAvailableInteractions");

	ADBDPlayer_Server_SetDebugPrintAvailableInteractions_Params params;
	params.Enabled = Enabled;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.Server_SetDebugFailAllInteractions
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// bool                           Enabled                        (Parm, ZeroConstructor, IsPlainOldData)

void ADBDPlayer::Server_SetDebugFailAllInteractions(bool Enabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.Server_SetDebugFailAllInteractions");

	ADBDPlayer_Server_SetDebugFailAllInteractions_Params params;
	params.Enabled = Enabled;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.Server_SetDebugCarry
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// bool                           Enabled                        (Parm, ZeroConstructor, IsPlainOldData)

void ADBDPlayer::Server_SetDebugCarry(bool Enabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.Server_SetDebugCarry");

	ADBDPlayer_Server_SetDebugCarry_Params params;
	params.Enabled = Enabled;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.Server_SetCustomization
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// TArray<struct FName>           customizationParts             (ConstParm, Parm, ZeroConstructor, ReferenceParm)

void ADBDPlayer::Server_SetCustomization(TArray<struct FName> customizationParts)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.Server_SetCustomization");

	ADBDPlayer_Server_SetCustomization_Params params;
	params.customizationParts = customizationParts;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.Server_SetContinuousPrintDebug
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// bool                           Enabled                        (Parm, ZeroConstructor, IsPlainOldData)

void ADBDPlayer::Server_SetContinuousPrintDebug(bool Enabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.Server_SetContinuousPrintDebug");

	ADBDPlayer_Server_SetContinuousPrintDebug_Params params;
	params.Enabled = Enabled;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.Server_SetAuthoritativeMovement
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// bool                           Enabled                        (Parm, ZeroConstructor, IsPlainOldData)

void ADBDPlayer::Server_SetAuthoritativeMovement(bool Enabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.Server_SetAuthoritativeMovement");

	ADBDPlayer_Server_SetAuthoritativeMovement_Params params;
	params.Enabled = Enabled;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.Server_SendSecondaryActionPressed
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)

void ADBDPlayer::Server_SendSecondaryActionPressed()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.Server_SendSecondaryActionPressed");

	ADBDPlayer_Server_SendSecondaryActionPressed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.Server_SendItemUseInput
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// bool                           Pressed                        (Parm, ZeroConstructor, IsPlainOldData)

void ADBDPlayer::Server_SendItemUseInput(bool Pressed)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.Server_SendItemUseInput");

	ADBDPlayer_Server_SendItemUseInput_Params params;
	params.Pressed = Pressed;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.Server_SendItemUse
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// bool                           Use                            (Parm, ZeroConstructor, IsPlainOldData)

void ADBDPlayer::Server_SendItemUse(bool Use)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.Server_SendItemUse");

	ADBDPlayer_Server_SendItemUse_Params params;
	params.Use = Use;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.Server_SendItemDropInput
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// bool                           Pressed                        (Parm, ZeroConstructor, IsPlainOldData)

void ADBDPlayer::Server_SendItemDropInput(bool Pressed)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.Server_SendItemDropInput");

	ADBDPlayer_Server_SendItemDropInput_Params params;
	params.Pressed = Pressed;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.Server_SendInteractionInput
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// bool                           Pressed                        (Parm, ZeroConstructor, IsPlainOldData)

void ADBDPlayer::Server_SendInteractionInput(bool Pressed)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.Server_SendInteractionInput");

	ADBDPlayer_Server_SendInteractionInput_Params params;
	params.Pressed = Pressed;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.Server_SendFastInteractionInput
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// bool                           Pressed                        (Parm, ZeroConstructor, IsPlainOldData)

void ADBDPlayer::Server_SendFastInteractionInput(bool Pressed)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.Server_SendFastInteractionInput");

	ADBDPlayer_Server_SendFastInteractionInput_Params params;
	params.Pressed = Pressed;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.Server_RemoveStatusEffects
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void ADBDPlayer::Server_RemoveStatusEffects()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.Server_RemoveStatusEffects");

	ADBDPlayer_Server_RemoveStatusEffects_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.Server_RemoveStatusEffectByID
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// struct FName                   statusEffectID                 (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bRemoveAllWithID               (Parm, ZeroConstructor, IsPlainOldData)

void ADBDPlayer::Server_RemoveStatusEffectByID(const struct FName& statusEffectID, bool bRemoveAllWithID)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.Server_RemoveStatusEffectByID");

	ADBDPlayer_Server_RemoveStatusEffectByID_Params params;
	params.statusEffectID = statusEffectID;
	params.bRemoveAllWithID = bRemoveAllWithID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.Server_RemovePerks
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void ADBDPlayer::Server_RemovePerks()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.Server_RemovePerks");

	ADBDPlayer_Server_RemovePerks_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.Server_PlayerReady
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void ADBDPlayer::Server_PlayerReady()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.Server_PlayerReady");

	ADBDPlayer_Server_PlayerReady_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.Server_OnMovementInput
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class ADBDPlayer*              Player                         (Parm, ZeroConstructor, IsPlainOldData)

void ADBDPlayer::Server_OnMovementInput(class ADBDPlayer* Player)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.Server_OnMovementInput");

	ADBDPlayer_Server_OnMovementInput_Params params;
	params.Player = Player;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.Server_OnInsaneSkillCheck
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void ADBDPlayer::Server_OnInsaneSkillCheck()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.Server_OnInsaneSkillCheck");

	ADBDPlayer_Server_OnInsaneSkillCheck_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.Server_Ghost
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// bool                           Ghost                          (Parm, ZeroConstructor, IsPlainOldData)

void ADBDPlayer::Server_Ghost(bool Ghost)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.Server_Ghost");

	ADBDPlayer_Server_Ghost_Params params;
	params.Ghost = Ghost;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.Server_FailInterruption
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class ADBDPlayer*              interruptee                    (Parm, ZeroConstructor, IsPlainOldData)

void ADBDPlayer::Server_FailInterruption(class ADBDPlayer* interruptee)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.Server_FailInterruption");

	ADBDPlayer_Server_FailInterruption_Params params;
	params.interruptee = interruptee;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.Server_Drop
// (Net, NetReliable, Native, Event, Public, NetServer, HasDefaults, NetValidate)
// Parameters:
// class ACollectable*            Item                           (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 Location                       (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// struct FRotator                Rotation                       (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// bool                           onDeath                        (Parm, ZeroConstructor, IsPlainOldData)

void ADBDPlayer::Server_Drop(class ACollectable* Item, const struct FVector& Location, const struct FRotator& Rotation, bool onDeath)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.Server_Drop");

	ADBDPlayer_Server_Drop_Params params;
	params.Item = Item;
	params.Location = Location;
	params.Rotation = Rotation;
	params.onDeath = onDeath;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.Server_CheatDispatchOnPostItemAddonsCreation
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void ADBDPlayer::Server_CheatDispatchOnPostItemAddonsCreation()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.Server_CheatDispatchOnPostItemAddonsCreation");

	ADBDPlayer_Server_CheatDispatchOnPostItemAddonsCreation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.Server_Cheat
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void ADBDPlayer::Server_Cheat()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.Server_Cheat");

	ADBDPlayer_Server_Cheat_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.ResetYawScale
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          adjustTime                     (Parm, ZeroConstructor, IsPlainOldData)

void ADBDPlayer::ResetYawScale(float adjustTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.ResetYawScale");

	ADBDPlayer_ResetYawScale_Params params;
	params.adjustTime = adjustTime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.ResetPitchScale
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          adjustTime                     (Parm, ZeroConstructor, IsPlainOldData)

void ADBDPlayer::ResetPitchScale(float adjustTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.ResetPitchScale");

	ADBDPlayer_ResetPitchScale_Params params;
	params.adjustTime = adjustTime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.ResetMeshRelativeRotation
// (Final, Native, Public, BlueprintCallable)

void ADBDPlayer::ResetMeshRelativeRotation()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.ResetMeshRelativeRotation");

	ADBDPlayer_ResetMeshRelativeRotation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.ResetMeshRelativePosition
// (Final, Native, Public, BlueprintCallable)

void ADBDPlayer::ResetMeshRelativePosition()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.ResetMeshRelativePosition");

	ADBDPlayer_ResetMeshRelativePosition_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.ResetCamera
// (Native, Public, BlueprintCallable)

void ADBDPlayer::ResetCamera()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.ResetCamera");

	ADBDPlayer_ResetCamera_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.RemoveStatusEffect
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UStatusEffect*           StatusEffect                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void ADBDPlayer::RemoveStatusEffect(class UStatusEffect* StatusEffect)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.RemoveStatusEffect");

	ADBDPlayer_RemoveStatusEffect_Params params;
	params.StatusEffect = StatusEffect;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.RemoveFromInventory
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class ACollectable*            Item                           (Parm, ZeroConstructor, IsPlainOldData)

void ADBDPlayer::RemoveFromInventory(class ACollectable* Item)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.RemoveFromInventory");

	ADBDPlayer_RemoveFromInventory_Params params;
	params.Item = Item;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.RemoveAllStatusEffects
// (Final, Native, Public, BlueprintCallable)

void ADBDPlayer::RemoveAllStatusEffects()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.RemoveAllStatusEffects");

	ADBDPlayer_RemoveAllStatusEffects_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.PlayMontage
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FAnimationMontageDescriptor animMontageID                  (Parm)
// float                          PlayRate                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           isFollower                     (Parm, ZeroConstructor, IsPlainOldData)
// class UAnimMontage*            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UAnimMontage* ADBDPlayer::PlayMontage(const struct FAnimationMontageDescriptor& animMontageID, float PlayRate, bool isFollower)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.PlayMontage");

	ADBDPlayer_PlayMontage_Params params;
	params.animMontageID = animMontageID;
	params.PlayRate = PlayRate;
	params.isFollower = isFollower;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDPlayer.OnPickupStart
// (Native, Public, BlueprintCallable)
// Parameters:
// class ADBDPlayer*              Target                         (Parm, ZeroConstructor, IsPlainOldData)

void ADBDPlayer::OnPickupStart(class ADBDPlayer* Target)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.OnPickupStart");

	ADBDPlayer_OnPickupStart_Params params;
	params.Target = Target;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.OnPickupEnd
// (Native, Public, BlueprintCallable)
// Parameters:
// class ADBDPlayer*              Target                         (Parm, ZeroConstructor, IsPlainOldData)

void ADBDPlayer::OnPickupEnd(class ADBDPlayer* Target)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.OnPickupEnd");

	ADBDPlayer_OnPickupEnd_Params params;
	params.Target = Target;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.OnPawnDetectorOverlapExit
// (Final, Native, Protected)
// Parameters:
// class UPrimitiveComponent*     HitComponent                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// int                            OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData)

void ADBDPlayer::OnPawnDetectorOverlapExit(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.OnPawnDetectorOverlapExit");

	ADBDPlayer_OnPawnDetectorOverlapExit_Params params;
	params.HitComponent = HitComponent;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.OnPawnDetectorOverlapEnter
// (Final, Native, Protected, HasOutParms)
// Parameters:
// class UPrimitiveComponent*     HitComponent                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// int                            OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bFromSweep                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FHitResult              SweepResult                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void ADBDPlayer::OnPawnDetectorOverlapEnter(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.OnPawnDetectorOverlapEnter");

	ADBDPlayer_OnPawnDetectorOverlapEnter_Params params;
	params.HitComponent = HitComponent;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;
	params.bFromSweep = bFromSweep;
	params.SweepResult = SweepResult;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.OnLocallyObservedChanged
// (Native, Event, Protected, BlueprintEvent)

void ADBDPlayer::OnLocallyObservedChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.OnLocallyObservedChanged");

	ADBDPlayer_OnLocallyObservedChanged_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.OnLevelReadyToPlay
// (Native, Event, Public, BlueprintEvent)

void ADBDPlayer::OnLevelReadyToPlay()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.OnLevelReadyToPlay");

	ADBDPlayer_OnLevelReadyToPlay_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.OnInterruptedStart
// (Event, Protected, BlueprintEvent)

void ADBDPlayer::OnInterruptedStart()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.OnInterruptedStart");

	ADBDPlayer_OnInterruptedStart_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.OnInsaneSkillCheck
// (Event, Public, BlueprintEvent)

void ADBDPlayer::OnInsaneSkillCheck()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.OnInsaneSkillCheck");

	ADBDPlayer_OnInsaneSkillCheck_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.OnHeadHidden
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                           hidden                         (Parm, ZeroConstructor, IsPlainOldData)

void ADBDPlayer::OnHeadHidden(bool hidden)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.OnHeadHidden");

	ADBDPlayer_OnHeadHidden_Params params;
	params.hidden = hidden;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.OnEscapeDoorActivated
// (Event, Protected, BlueprintEvent)

void ADBDPlayer::OnEscapeDoorActivated()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.OnEscapeDoorActivated");

	ADBDPlayer_OnEscapeDoorActivated_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.OnCurrentMontageComplete
// (Final, Native, Private)
// Parameters:
// class UAnimMontage*            MontageAsset                   (Parm, ZeroConstructor, IsPlainOldData)
// bool                           interrupted                    (Parm, ZeroConstructor, IsPlainOldData)

void ADBDPlayer::OnCurrentMontageComplete(class UAnimMontage* MontageAsset, bool interrupted)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.OnCurrentMontageComplete");

	ADBDPlayer_OnCurrentMontageComplete_Params params;
	params.MontageAsset = MontageAsset;
	params.interrupted = interrupted;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.OnCurrentMontageBlendingOut
// (Final, Native, Private)
// Parameters:
// class UAnimMontage*            MontageAsset                   (Parm, ZeroConstructor, IsPlainOldData)
// bool                           interrupted                    (Parm, ZeroConstructor, IsPlainOldData)

void ADBDPlayer::OnCurrentMontageBlendingOut(class UAnimMontage* MontageAsset, bool interrupted)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.OnCurrentMontageBlendingOut");

	ADBDPlayer_OnCurrentMontageBlendingOut_Params params;
	params.MontageAsset = MontageAsset;
	params.interrupted = interrupted;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.OnClientRestart
// (Event, Public, BlueprintEvent)

void ADBDPlayer::OnClientRestart()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.OnClientRestart");

	ADBDPlayer_OnClientRestart_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.OnBlindChargeEmptied
// (Native, Protected)

void ADBDPlayer::OnBlindChargeEmptied()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.OnBlindChargeEmptied");

	ADBDPlayer_OnBlindChargeEmptied_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.OnAttackFinished
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// TEnumAsByte<EAttackType>       attackType                     (Parm, ZeroConstructor, IsPlainOldData)

void ADBDPlayer::OnAttackFinished(TEnumAsByte<EAttackType> attackType)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.OnAttackFinished");

	ADBDPlayer_OnAttackFinished_Params params;
	params.attackType = attackType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.OnAllPlayerLoaded
// (Final, Native, Public)

void ADBDPlayer::OnAllPlayerLoaded()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.OnAllPlayerLoaded");

	ADBDPlayer_OnAllPlayerLoaded_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.NotifyMoriUpdateStart
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ADBDPlayer::NotifyMoriUpdateStart()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.NotifyMoriUpdateStart");

	ADBDPlayer_NotifyMoriUpdateStart_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.NotifyMoriFinished
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ADBDPlayer::NotifyMoriFinished()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.NotifyMoriFinished");

	ADBDPlayer_NotifyMoriFinished_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.Multicast_TriggerSprintWithParams
// (Net, NetReliable, Native, Event, NetMulticast, Public, NetValidate)
// Parameters:
// float                          duration                       (Parm, ZeroConstructor, IsPlainOldData)
// class UCurveFloat*             Curve                          (Parm, ZeroConstructor, IsPlainOldData)
// struct FName                   effector                       (Parm, ZeroConstructor, IsPlainOldData)

void ADBDPlayer::Multicast_TriggerSprintWithParams(float duration, class UCurveFloat* Curve, const struct FName& effector)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.Multicast_TriggerSprintWithParams");

	ADBDPlayer_Multicast_TriggerSprintWithParams_Params params;
	params.duration = duration;
	params.Curve = Curve;
	params.effector = effector;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.Multicast_TriggerSprint
// (Net, NetReliable, Native, Event, NetMulticast, Public, NetValidate)

void ADBDPlayer::Multicast_TriggerSprint()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.Multicast_TriggerSprint");

	ADBDPlayer_Multicast_TriggerSprint_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.Multicast_SetWindowFreeCam
// (Net, NetReliable, Native, Event, NetMulticast, Public, NetValidate)
// Parameters:
// bool                           Enabled                        (Parm, ZeroConstructor, IsPlainOldData)

void ADBDPlayer::Multicast_SetWindowFreeCam(bool Enabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.Multicast_SetWindowFreeCam");

	ADBDPlayer_Multicast_SetWindowFreeCam_Params params;
	params.Enabled = Enabled;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.Multicast_SetRunVaultEnabled
// (Net, NetReliable, Native, Event, NetMulticast, Public, NetValidate)
// Parameters:
// bool                           Enabled                        (Parm, ZeroConstructor, IsPlainOldData)

void ADBDPlayer::Multicast_SetRunVaultEnabled(bool Enabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.Multicast_SetRunVaultEnabled");

	ADBDPlayer_Multicast_SetRunVaultEnabled_Params params;
	params.Enabled = Enabled;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.Multicast_SetReverseTraverseEnabled
// (Net, NetReliable, Native, Event, NetMulticast, Public, NetValidate)
// Parameters:
// bool                           Enabled                        (Parm, ZeroConstructor, IsPlainOldData)

void ADBDPlayer::Multicast_SetReverseTraverseEnabled(bool Enabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.Multicast_SetReverseTraverseEnabled");

	ADBDPlayer_Multicast_SetReverseTraverseEnabled_Params params;
	params.Enabled = Enabled;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.Multicast_SetMaxWalkSpeed
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private, NetValidate)
// Parameters:
// float                          MaxWalkSpeed                   (Parm, ZeroConstructor, IsPlainOldData)

void ADBDPlayer::Multicast_SetMaxWalkSpeed(float MaxWalkSpeed)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.Multicast_SetMaxWalkSpeed");

	ADBDPlayer_Multicast_SetMaxWalkSpeed_Params params;
	params.MaxWalkSpeed = MaxWalkSpeed;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.Multicast_SetInteractingPlayer
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// class ADBDPlayer*              interactingPlayer              (Parm, ZeroConstructor, IsPlainOldData)

void ADBDPlayer::Multicast_SetInteractingPlayer(class ADBDPlayer* interactingPlayer)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.Multicast_SetInteractingPlayer");

	ADBDPlayer_Multicast_SetInteractingPlayer_Params params;
	params.interactingPlayer = interactingPlayer;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.Multicast_SetForceAuthoritativeMovement
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private, NetValidate)
// Parameters:
// bool                           Value                          (Parm, ZeroConstructor, IsPlainOldData)

void ADBDPlayer::Multicast_SetForceAuthoritativeMovement(bool Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.Multicast_SetForceAuthoritativeMovement");

	ADBDPlayer_Multicast_SetForceAuthoritativeMovement_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.Multicast_SetEthereal
// (Net, NetReliable, Native, Event, NetMulticast, Public, NetValidate)
// Parameters:
// bool                           Enabled                        (Parm, ZeroConstructor, IsPlainOldData)

void ADBDPlayer::Multicast_SetEthereal(bool Enabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.Multicast_SetEthereal");

	ADBDPlayer_Multicast_SetEthereal_Params params;
	params.Enabled = Enabled;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.Multicast_SetEnableServerPositionUpdates
// (Net, NetReliable, Native, Event, NetMulticast, Public, NetValidate)
// Parameters:
// bool                           Enabled                        (Parm, ZeroConstructor, IsPlainOldData)

void ADBDPlayer::Multicast_SetEnableServerPositionUpdates(bool Enabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.Multicast_SetEnableServerPositionUpdates");

	ADBDPlayer_Multicast_SetEnableServerPositionUpdates_Params params;
	params.Enabled = Enabled;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.Multicast_SetEnableCapsuleDynamicResize
// (Net, NetReliable, Native, Event, NetMulticast, Public, NetValidate)
// Parameters:
// bool                           Enabled                        (Parm, ZeroConstructor, IsPlainOldData)

void ADBDPlayer::Multicast_SetEnableCapsuleDynamicResize(bool Enabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.Multicast_SetEnableCapsuleDynamicResize");

	ADBDPlayer_Multicast_SetEnableCapsuleDynamicResize_Params params;
	params.Enabled = Enabled;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.Multicast_SetDebugSnapPoint
// (Net, NetReliable, Native, Event, NetMulticast, Public, NetValidate)
// Parameters:
// bool                           Enabled                        (Parm, ZeroConstructor, IsPlainOldData)

void ADBDPlayer::Multicast_SetDebugSnapPoint(bool Enabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.Multicast_SetDebugSnapPoint");

	ADBDPlayer_Multicast_SetDebugSnapPoint_Params params;
	params.Enabled = Enabled;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.Multicast_SetDebugPrintAvailableInteractions
// (Net, NetReliable, Native, Event, NetMulticast, Public, NetValidate)
// Parameters:
// bool                           Enabled                        (Parm, ZeroConstructor, IsPlainOldData)

void ADBDPlayer::Multicast_SetDebugPrintAvailableInteractions(bool Enabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.Multicast_SetDebugPrintAvailableInteractions");

	ADBDPlayer_Multicast_SetDebugPrintAvailableInteractions_Params params;
	params.Enabled = Enabled;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.Multicast_SetDebugCarry
// (Net, NetReliable, Native, Event, NetMulticast, Public, NetValidate)
// Parameters:
// bool                           Enabled                        (Parm, ZeroConstructor, IsPlainOldData)

void ADBDPlayer::Multicast_SetDebugCarry(bool Enabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.Multicast_SetDebugCarry");

	ADBDPlayer_Multicast_SetDebugCarry_Params params;
	params.Enabled = Enabled;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.Multicast_SetCustomization
// (Net, NetReliable, Native, Event, NetMulticast, Protected, NetValidate)
// Parameters:
// TArray<struct FName>           customizationParts             (ConstParm, Parm, ZeroConstructor, ReferenceParm)

void ADBDPlayer::Multicast_SetCustomization(TArray<struct FName> customizationParts)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.Multicast_SetCustomization");

	ADBDPlayer_Multicast_SetCustomization_Params params;
	params.customizationParts = customizationParts;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.Multicast_SetContinuousPrintDebug
// (Net, NetReliable, Native, Event, NetMulticast, Public, NetValidate)
// Parameters:
// bool                           Enabled                        (Parm, ZeroConstructor, IsPlainOldData)

void ADBDPlayer::Multicast_SetContinuousPrintDebug(bool Enabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.Multicast_SetContinuousPrintDebug");

	ADBDPlayer_Multicast_SetContinuousPrintDebug_Params params;
	params.Enabled = Enabled;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.Multicast_SetAuthoritativeMovement
// (Net, NetReliable, Native, Event, NetMulticast, Public, NetValidate)
// Parameters:
// bool                           Enabled                        (Parm, ZeroConstructor, IsPlainOldData)

void ADBDPlayer::Multicast_SetAuthoritativeMovement(bool Enabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.Multicast_SetAuthoritativeMovement");

	ADBDPlayer_Multicast_SetAuthoritativeMovement_Params params;
	params.Enabled = Enabled;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.Multicast_ServerResetMeshRelativeOffSet
// (Net, NetReliable, Native, Event, NetMulticast, Public, NetValidate)

void ADBDPlayer::Multicast_ServerResetMeshRelativeOffSet()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.Multicast_ServerResetMeshRelativeOffSet");

	ADBDPlayer_Multicast_ServerResetMeshRelativeOffSet_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.Multicast_RemoveFromInventory
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// class ACollectable*            Item                           (Parm, ZeroConstructor, IsPlainOldData)

void ADBDPlayer::Multicast_RemoveFromInventory(class ACollectable* Item)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.Multicast_RemoveFromInventory");

	ADBDPlayer_Multicast_RemoveFromInventory_Params params;
	params.Item = Item;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.Multicast_PlayMontage
// (Net, NetReliable, Native, Event, NetMulticast, Public, NetValidate)
// Parameters:
// struct FAnimationMontageDescriptor animMontageID                  (Parm)
// float                          PlayRate                       (Parm, ZeroConstructor, IsPlainOldData)

void ADBDPlayer::Multicast_PlayMontage(const struct FAnimationMontageDescriptor& animMontageID, float PlayRate)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.Multicast_PlayMontage");

	ADBDPlayer_Multicast_PlayMontage_Params params;
	params.animMontageID = animMontageID;
	params.PlayRate = PlayRate;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.Multicast_OnInsaneSkillCheck
// (Net, NetReliable, Native, Event, NetMulticast, Public, NetValidate)

void ADBDPlayer::Multicast_OnInsaneSkillCheck()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.Multicast_OnInsaneSkillCheck");

	ADBDPlayer_Multicast_OnInsaneSkillCheck_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.Multicast_LockOnTarget
// (Net, NetReliable, Native, Event, NetMulticast, Public, NetValidate)
// Parameters:
// class ADBDPlayer*              Target                         (Parm, ZeroConstructor, IsPlainOldData)

void ADBDPlayer::Multicast_LockOnTarget(class ADBDPlayer* Target)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.Multicast_LockOnTarget");

	ADBDPlayer_Multicast_LockOnTarget_Params params;
	params.Target = Target;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.Multicast_LeaveGame
// (Net, NetReliable, Native, Event, NetMulticast, Public, HasDefaults, NetValidate)
// Parameters:
// struct FGuid                   uniqueLeavingPlayerId          (Parm, ZeroConstructor, IsPlainOldData)

void ADBDPlayer::Multicast_LeaveGame(const struct FGuid& uniqueLeavingPlayerId)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.Multicast_LeaveGame");

	ADBDPlayer_Multicast_LeaveGame_Params params;
	params.uniqueLeavingPlayerId = uniqueLeavingPlayerId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.Multicast_InteractionRollResult
// (Net, NetReliable, Native, Event, NetMulticast, Public, BlueprintCallable, NetValidate)
// Parameters:
// bool                           rollResult                     (Parm, ZeroConstructor, IsPlainOldData)

void ADBDPlayer::Multicast_InteractionRollResult(bool rollResult)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.Multicast_InteractionRollResult");

	ADBDPlayer_Multicast_InteractionRollResult_Params params;
	params.rollResult = rollResult;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.Multicast_Ghost
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private, NetValidate)
// Parameters:
// bool                           Ghost                          (Parm, ZeroConstructor, IsPlainOldData)

void ADBDPlayer::Multicast_Ghost(bool Ghost)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.Multicast_Ghost");

	ADBDPlayer_Multicast_Ghost_Params params;
	params.Ghost = Ghost;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.Multicast_DamageTarget
// (Net, NetReliable, Native, Event, NetMulticast, Public, NetValidate)
// Parameters:
// class ADBDPlayer*              Target                         (Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<EAttackType>       attackType                     (Parm, ZeroConstructor, IsPlainOldData)

void ADBDPlayer::Multicast_DamageTarget(class ADBDPlayer* Target, TEnumAsByte<EAttackType> attackType)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.Multicast_DamageTarget");

	ADBDPlayer_Multicast_DamageTarget_Params params;
	params.Target = Target;
	params.attackType = attackType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.Multicast_ConfirmItemDrop
// (Net, NetReliable, Native, Event, NetMulticast, Protected, NetValidate)
// Parameters:
// bool                           Pressed                        (Parm, ZeroConstructor, IsPlainOldData)

void ADBDPlayer::Multicast_ConfirmItemDrop(bool Pressed)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.Multicast_ConfirmItemDrop");

	ADBDPlayer_Multicast_ConfirmItemDrop_Params params;
	params.Pressed = Pressed;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.Multicast_ClearAndDestroyInventory
// (Net, NetReliable, Native, Event, NetMulticast, Public)

void ADBDPlayer::Multicast_ClearAndDestroyInventory()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.Multicast_ClearAndDestroyInventory");

	ADBDPlayer_Multicast_ClearAndDestroyInventory_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.Multicast_AttackSubstate
// (Net, NetReliable, Native, Event, NetMulticast, Public, NetValidate)
// Parameters:
// TEnumAsByte<EAttackSubstate>   attackSubstate                 (Parm, ZeroConstructor, IsPlainOldData)

void ADBDPlayer::Multicast_AttackSubstate(TEnumAsByte<EAttackSubstate> attackSubstate)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.Multicast_AttackSubstate");

	ADBDPlayer_Multicast_AttackSubstate_Params params;
	params.attackSubstate = attackSubstate;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.Multicast_AttackBegin
// (Net, NetReliable, Native, Event, NetMulticast, Public, NetValidate)
// Parameters:
// TEnumAsByte<EAttackType>       attackType                     (Parm, ZeroConstructor, IsPlainOldData)

void ADBDPlayer::Multicast_AttackBegin(TEnumAsByte<EAttackType> attackType)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.Multicast_AttackBegin");

	ADBDPlayer_Multicast_AttackBegin_Params params;
	params.attackType = attackType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.Multicast_AddToInventory
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
// Parameters:
// class ACollectable*            Item                           (Parm, ZeroConstructor, IsPlainOldData)

void ADBDPlayer::Multicast_AddToInventory(class ACollectable* Item)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.Multicast_AddToInventory");

	ADBDPlayer_Multicast_AddToInventory_Params params;
	params.Item = Item;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.Local_RequestBlink
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FTransform              Destination                    (Parm, IsPlainOldData)

void ADBDPlayer::Local_RequestBlink(const struct FTransform& Destination)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.Local_RequestBlink");

	ADBDPlayer_Local_RequestBlink_Params params;
	params.Destination = Destination;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.Local_NotifyMatchEnded
// (Native, Event, Public, BlueprintEvent)

void ADBDPlayer::Local_NotifyMatchEnded()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.Local_NotifyMatchEnded");

	ADBDPlayer_Local_NotifyMatchEnded_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.LineTraceSingleForFootIK
// (Final, Native, Protected, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                 Start                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 End                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// bool                           traceComplex                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FHitResult              OutHit                         (Parm, OutParm, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ADBDPlayer::LineTraceSingleForFootIK(const struct FVector& Start, const struct FVector& End, bool traceComplex, struct FHitResult* OutHit)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.LineTraceSingleForFootIK");

	ADBDPlayer_LineTraceSingleForFootIK_Params params;
	params.Start = Start;
	params.End = End;
	params.traceComplex = traceComplex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutHit != nullptr)
		*OutHit = params.OutHit;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDPlayer.K2_SetActorLocationByBottomCapsule
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                 NewLocation                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bSweep                         (Parm, ZeroConstructor, IsPlainOldData)
// struct FHitResult              SweepHitResult                 (Parm, OutParm, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ADBDPlayer::K2_SetActorLocationByBottomCapsule(const struct FVector& NewLocation, bool bSweep, struct FHitResult* SweepHitResult)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.K2_SetActorLocationByBottomCapsule");

	ADBDPlayer_K2_SetActorLocationByBottomCapsule_Params params;
	params.NewLocation = NewLocation;
	params.bSweep = bSweep;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (SweepHitResult != nullptr)
		*SweepHitResult = params.SweepHitResult;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDPlayer.IsUsingAimItem
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ADBDPlayer::IsUsingAimItem()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.IsUsingAimItem");

	ADBDPlayer_IsUsingAimItem_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDPlayer.IsUnintentionallyIncapacitated
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ADBDPlayer::IsUnintentionallyIncapacitated()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.IsUnintentionallyIncapacitated");

	ADBDPlayer_IsUnintentionallyIncapacitated_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDPlayer.IsStrafing
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ADBDPlayer::IsStrafing()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.IsStrafing");

	ADBDPlayer_IsStrafing_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDPlayer.IsSprinting
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ADBDPlayer::IsSprinting()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.IsSprinting");

	ADBDPlayer_IsSprinting_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDPlayer.IsSnappingRotation
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ADBDPlayer::IsSnappingRotation()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.IsSnappingRotation");

	ADBDPlayer_IsSnappingRotation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDPlayer.IsSnappingPosition
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ADBDPlayer::IsSnappingPosition()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.IsSnappingPosition");

	ADBDPlayer_IsSnappingPosition_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDPlayer.IsSnapping
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ADBDPlayer::IsSnapping()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.IsSnapping");

	ADBDPlayer_IsSnapping_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDPlayer.IsRunningAndMoving
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ADBDPlayer::IsRunningAndMoving()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.IsRunningAndMoving");

	ADBDPlayer_IsRunningAndMoving_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDPlayer.IsRunning
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ADBDPlayer::IsRunning()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.IsRunning");

	ADBDPlayer_IsRunning_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDPlayer.IsPlayingMontage
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FAnimationMontageDescriptor animMontageID                  (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ADBDPlayer::IsPlayingMontage(const struct FAnimationMontageDescriptor& animMontageID)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.IsPlayingMontage");

	ADBDPlayer_IsPlayingMontage_Params params;
	params.animMontageID = animMontageID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDPlayer.IsPlayingAnyMontage
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ADBDPlayer::IsPlayingAnyMontage()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.IsPlayingAnyMontage");

	ADBDPlayer_IsPlayingAnyMontage_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDPlayer.IsLocationClear
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                 targetPosition                 (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ADBDPlayer::IsLocationClear(const struct FVector& targetPosition)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.IsLocationClear");

	ADBDPlayer_IsLocationClear_Params params;
	params.targetPosition = targetPosition;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDPlayer.IsLocallyObserved
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ADBDPlayer::IsLocallyObserved()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.IsLocallyObserved");

	ADBDPlayer_IsLocallyObserved_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDPlayer.IsInTerrorRadius
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ADBDPlayer::IsInTerrorRadius()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.IsInTerrorRadius");

	ADBDPlayer_IsInTerrorRadius_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDPlayer.IsInteractionInputPressed
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TEnumAsByte<EInputInteractionType> InteractionType                (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ADBDPlayer::IsInteractionInputPressed(TEnumAsByte<EInputInteractionType> InteractionType)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.IsInteractionInputPressed");

	ADBDPlayer_IsInteractionInputPressed_Params params;
	params.InteractionType = InteractionType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDPlayer.IsInStalkMode
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ADBDPlayer::IsInStalkMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.IsInStalkMode");

	ADBDPlayer_IsInStalkMode_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDPlayer.IsInsideCloset
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ADBDPlayer::IsInsideCloset()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.IsInsideCloset");

	ADBDPlayer_IsInsideCloset_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDPlayer.IsInParadise
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ADBDPlayer::IsInParadise()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.IsInParadise");

	ADBDPlayer_IsInParadise_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDPlayer.IsInMeathookZone
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ADBDPlayer::IsInMeathookZone()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.IsInMeathookZone");

	ADBDPlayer_IsInMeathookZone_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDPlayer.IsInDreamworld
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ADBDPlayer::IsInDreamworld()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.IsInDreamworld");

	ADBDPlayer_IsInDreamworld_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDPlayer.IsInChaseCooldown
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ADBDPlayer::IsInChaseCooldown()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.IsInChaseCooldown");

	ADBDPlayer_IsInChaseCooldown_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDPlayer.IsInChase
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ADBDPlayer::IsInChase()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.IsInChase");

	ADBDPlayer_IsInChase_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDPlayer.IsIncapacitated
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ADBDPlayer::IsIncapacitated()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.IsIncapacitated");

	ADBDPlayer_IsIncapacitated_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDPlayer.IsHeadHidden
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ADBDPlayer::IsHeadHidden()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.IsHeadHidden");

	ADBDPlayer_IsHeadHidden_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDPlayer.IsFacing
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                 Direction                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ADBDPlayer::IsFacing(const struct FVector& Direction)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.IsFacing");

	ADBDPlayer_IsFacing_Params params;
	params.Direction = Direction;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDPlayer.IsExhausted
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ADBDPlayer::IsExhausted()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.IsExhausted");

	ADBDPlayer_IsExhausted_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDPlayer.IsCrouching
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ADBDPlayer::IsCrouching()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.IsCrouching");

	ADBDPlayer_IsCrouching_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDPlayer.IsCloaked
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ADBDPlayer::IsCloaked()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.IsCloaked");

	ADBDPlayer_IsCloaked_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDPlayer.IsBlinded
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ADBDPlayer::IsBlinded()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.IsBlinded");

	ADBDPlayer_IsBlinded_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDPlayer.IsBeingInterrupted
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ADBDPlayer::IsBeingInterrupted()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.IsBeingInterrupted");

	ADBDPlayer_IsBeingInterrupted_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDPlayer.IsAllowedNavigation
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ADBDPlayer::IsAllowedNavigation()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.IsAllowedNavigation");

	ADBDPlayer_IsAllowedNavigation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDPlayer.HideHead
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           hide                           (Parm, ZeroConstructor, IsPlainOldData)

void ADBDPlayer::HideHead(bool hide)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.HideHead");

	ADBDPlayer_HideHead_Params params;
	params.hide = hide;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.HasTrapImmunity
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ADBDPlayer::HasTrapImmunity()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.HasTrapImmunity");

	ADBDPlayer_HasTrapImmunity_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDPlayer.HasMoveInput
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ADBDPlayer::HasMoveInput()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.HasMoveInput");

	ADBDPlayer_HasMoveInput_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDPlayer.HasMaximumItemCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ACollectable*            Item                           (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ADBDPlayer::HasMaximumItemCount(class ACollectable* Item)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.HasMaximumItemCount");

	ADBDPlayer_HasMaximumItemCount_Params params;
	params.Item = Item;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDPlayer.HasItem
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ADBDPlayer::HasItem()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.HasItem");

	ADBDPlayer_HasItem_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDPlayer.HasInInventory
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UClass*                  Item                           (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ADBDPlayer::HasInInventory(class UClass* Item)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.HasInInventory");

	ADBDPlayer_HasInInventory_Params params;
	params.Item = Item;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDPlayer.HasEquippedItem
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ADBDPlayer::HasEquippedItem()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.HasEquippedItem");

	ADBDPlayer_HasEquippedItem_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDPlayer.HasDamageImmunity
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ADBDPlayer::HasDamageImmunity()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.HasDamageImmunity");

	ADBDPlayer_HasDamageImmunity_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDPlayer.HasClearPathToTargetWithIgnore
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                 targetPosition                 (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class AActor*>          ignoreActors                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ADBDPlayer::HasClearPathToTargetWithIgnore(const struct FVector& targetPosition, TArray<class AActor*> ignoreActors)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.HasClearPathToTargetWithIgnore");

	ADBDPlayer_HasClearPathToTargetWithIgnore_Params params;
	params.targetPosition = targetPosition;
	params.ignoreActors = ignoreActors;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDPlayer.HasClearPathToTarget
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                 targetPosition                 (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ADBDPlayer::HasClearPathToTarget(const struct FVector& targetPosition)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.HasClearPathToTarget");

	ADBDPlayer_HasClearPathToTarget_Params params;
	params.targetPosition = targetPosition;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDPlayer.HasClearPathToItemDropOffPosition
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ADBDPlayer::HasClearPathToItemDropOffPosition()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.HasClearPathToItemDropOffPosition");

	ADBDPlayer_HasClearPathToItemDropOffPosition_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDPlayer.HasAnimMontageEnded
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ADBDPlayer::HasAnimMontageEnded()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.HasAnimMontageEnded");

	ADBDPlayer_HasAnimMontageEnded_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDPlayer.GetWindowFreeCam
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ADBDPlayer::GetWindowFreeCam()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.GetWindowFreeCam");

	ADBDPlayer_GetWindowFreeCam_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDPlayer.GetTunableValue
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FName                   Key                            (Parm, ZeroConstructor, IsPlainOldData)
// float                          DefaultValue                   (Parm, ZeroConstructor, IsPlainOldData)
// bool                           warnIfRowMissing               (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ADBDPlayer::GetTunableValue(const struct FName& Key, float DefaultValue, bool warnIfRowMissing)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.GetTunableValue");

	ADBDPlayer_GetTunableValue_Params params;
	params.Key = Key;
	params.DefaultValue = DefaultValue;
	params.warnIfRowMissing = warnIfRowMissing;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDPlayer.GetStamina
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ADBDPlayer::GetStamina()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.GetStamina");

	ADBDPlayer_GetStamina_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDPlayer.GetSprintEffector
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FName                   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FName ADBDPlayer::GetSprintEffector()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.GetSprintEffector");

	ADBDPlayer_GetSprintEffector_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDPlayer.GetSprintDurationTimerPercentage
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ADBDPlayer::GetSprintDurationTimerPercentage()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.GetSprintDurationTimerPercentage");

	ADBDPlayer_GetSprintDurationTimerPercentage_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDPlayer.GetRunVaultEnabled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ADBDPlayer::GetRunVaultEnabled()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.GetRunVaultEnabled");

	ADBDPlayer_GetRunVaultEnabled_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDPlayer.GetRightFootAudioSurfaceName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

class FString ADBDPlayer::GetRightFootAudioSurfaceName()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.GetRightFootAudioSurfaceName");

	ADBDPlayer_GetRightFootAudioSurfaceName_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDPlayer.GetReverseTraverseEnabled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ADBDPlayer::GetReverseTraverseEnabled()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.GetReverseTraverseEnabled");

	ADBDPlayer_GetReverseTraverseEnabled_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDPlayer.GetRepControlRotation
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FRotator                ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FRotator ADBDPlayer::GetRepControlRotation()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.GetRepControlRotation");

	ADBDPlayer_GetRepControlRotation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDPlayer.GetRemainingTrapImmunityDuration
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ADBDPlayer::GetRemainingTrapImmunityDuration()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.GetRemainingTrapImmunityDuration");

	ADBDPlayer_GetRemainingTrapImmunityDuration_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDPlayer.GetProgressToEscapeCarry
// (Native, Public, BlueprintCallable)
// Parameters:
// class ADBDPlayer*              Player                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ADBDPlayer::GetProgressToEscapeCarry(class ADBDPlayer* Player)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.GetProgressToEscapeCarry");

	ADBDPlayer_GetProgressToEscapeCarry_Params params;
	params.Player = Player;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDPlayer.GetPlayerRole
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TEnumAsByte<EPlayerRole>       ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

TEnumAsByte<EPlayerRole> ADBDPlayer::GetPlayerRole()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.GetPlayerRole");

	ADBDPlayer_GetPlayerRole_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDPlayer.GetPlayerInteractionHandler
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UPlayerInteractionHandler* ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UPlayerInteractionHandler* ADBDPlayer::GetPlayerInteractionHandler()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.GetPlayerInteractionHandler");

	ADBDPlayer_GetPlayerInteractionHandler_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDPlayer.GetPlayerDirection
// (Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FRotator                ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FRotator ADBDPlayer::GetPlayerDirection()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.GetPlayerDirection");

	ADBDPlayer_GetPlayerDirection_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDPlayer.GetPlayerController
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ADBDPlayerController*    ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ADBDPlayerController* ADBDPlayer::GetPlayerController()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.GetPlayerController");

	ADBDPlayer_GetPlayerController_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDPlayer.GetPlayerCamera
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UCameraComponent*        ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UCameraComponent* ADBDPlayer::GetPlayerCamera()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.GetPlayerCamera");

	ADBDPlayer_GetPlayerCamera_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDPlayer.GetPerkManager
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UPerkManager*            ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UPerkManager* ADBDPlayer::GetPerkManager()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.GetPerkManager");

	ADBDPlayer_GetPerkManager_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDPlayer.GetPercentMovementSpeed
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ADBDPlayer::GetPercentMovementSpeed()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.GetPercentMovementSpeed");

	ADBDPlayer_GetPercentMovementSpeed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDPlayer.GetPercentBlinded
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ADBDPlayer::GetPercentBlinded()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.GetPercentBlinded");

	ADBDPlayer_GetPercentBlinded_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDPlayer.GetNearbyGroundLocation
// (Final, Native, Protected, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                 groundLocation                 (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ADBDPlayer::GetNearbyGroundLocation(struct FVector* groundLocation)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.GetNearbyGroundLocation");

	ADBDPlayer_GetNearbyGroundLocation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (groundLocation != nullptr)
		*groundLocation = params.groundLocation;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDPlayer.GetNameDebugString
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

class FString ADBDPlayer::GetNameDebugString()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.GetNameDebugString");

	ADBDPlayer_GetNameDebugString_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDPlayer.GetMontagePlayer
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UMontagePlayer*          ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UMontagePlayer* ADBDPlayer::GetMontagePlayer()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.GetMontagePlayer");

	ADBDPlayer_GetMontagePlayer_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDPlayer.GetMontageLength
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FAnimationMontageDescriptor animMontageID                  (Parm)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ADBDPlayer::GetMontageLength(const struct FAnimationMontageDescriptor& animMontageID)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.GetMontageLength");

	ADBDPlayer_GetMontageLength_Params params;
	params.animMontageID = animMontageID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDPlayer.GetMontage
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FAnimationMontageDescriptor animMontageID                  (Parm)
// class UAnimMontage*            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UAnimMontage* ADBDPlayer::GetMontage(const struct FAnimationMontageDescriptor& animMontageID)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.GetMontage");

	ADBDPlayer_GetMontage_Params params;
	params.animMontageID = animMontageID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDPlayer.GetMeshFeetPosition
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FVector ADBDPlayer::GetMeshFeetPosition()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.GetMeshFeetPosition");

	ADBDPlayer_GetMeshFeetPosition_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDPlayer.GetMaxSpeed
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ADBDPlayer::GetMaxSpeed()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.GetMaxSpeed");

	ADBDPlayer_GetMaxSpeed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDPlayer.GetLuck
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ADBDPlayer::GetLuck()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.GetLuck");

	ADBDPlayer_GetLuck_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDPlayer.GetLeftFootAudioSurfaceName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

class FString ADBDPlayer::GetLeftFootAudioSurfaceName()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.GetLeftFootAudioSurfaceName");

	ADBDPlayer_GetLeftFootAudioSurfaceName_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDPlayer.GetLastSafeLocation
// (Final, Native, Protected, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FVector ADBDPlayer::GetLastSafeLocation()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.GetLastSafeLocation");

	ADBDPlayer_GetLastSafeLocation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDPlayer.GetItemModifiers
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class UItemModifier*>   ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<class UItemModifier*> ADBDPlayer::GetItemModifiers()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.GetItemModifiers");

	ADBDPlayer_GetItemModifiers_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDPlayer.GetItemID
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FName                   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FName ADBDPlayer::GetItemID()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.GetItemID");

	ADBDPlayer_GetItemID_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDPlayer.GetItemDropOffTransform
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USceneComponent*         ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class USceneComponent* ADBDPlayer::GetItemDropOffTransform()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.GetItemDropOffTransform");

	ADBDPlayer_GetItemDropOffTransform_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDPlayer.GetItemCountByID
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FName                   ItemId                         (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int ADBDPlayer::GetItemCountByID(const struct FName& ItemId)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.GetItemCountByID");

	ADBDPlayer_GetItemCountByID_Params params;
	params.ItemId = ItemId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDPlayer.GetItemCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int ADBDPlayer::GetItemCount()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.GetItemCount");

	ADBDPlayer_GetItemCount_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDPlayer.GetItemAddons
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class UItemAddon*>      ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<class UItemAddon*> ADBDPlayer::GetItemAddons()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.GetItemAddons");

	ADBDPlayer_GetItemAddons_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDPlayer.GetItem
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ACollectable*            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ACollectable* ADBDPlayer::GetItem()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.GetItem");

	ADBDPlayer_GetItem_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDPlayer.GetIsInterrupting
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ADBDPlayer::GetIsInterrupting()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.GetIsInterrupting");

	ADBDPlayer_GetIsInterrupting_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDPlayer.GetIsInteracting
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ADBDPlayer::GetIsInteracting()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.GetIsInteracting");

	ADBDPlayer_GetIsInteracting_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDPlayer.GetIsBeyondCrouchWalkSpeed
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ADBDPlayer::GetIsBeyondCrouchWalkSpeed()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.GetIsBeyondCrouchWalkSpeed");

	ADBDPlayer_GetIsBeyondCrouchWalkSpeed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDPlayer.GetInteractionRollResult
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ADBDPlayer::GetInteractionRollResult()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.GetInteractionRollResult");

	ADBDPlayer_GetInteractionRollResult_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDPlayer.GetInteractionPlayerProperties
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FInteractionPlayerProperties ReturnValue                    (Parm, OutParm, ReturnParm)

struct FInteractionPlayerProperties ADBDPlayer::GetInteractionPlayerProperties()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.GetInteractionPlayerProperties");

	ADBDPlayer_GetInteractionPlayerProperties_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDPlayer.GetInteractingMaxSpeedPercent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ADBDPlayer::GetInteractingMaxSpeedPercent()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.GetInteractingMaxSpeedPercent");

	ADBDPlayer_GetInteractingMaxSpeedPercent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDPlayer.GetInteractable
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AInteractable*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AInteractable* ADBDPlayer::GetInteractable()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.GetInteractable");

	ADBDPlayer_GetInteractable_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDPlayer.GetGuidingPlayer
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ADBDPlayer*              ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ADBDPlayer* ADBDPlayer::GetGuidingPlayer()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.GetGuidingPlayer");

	ADBDPlayer_GetGuidingPlayer_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDPlayer.GetForceDisableSkillChecks
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ADBDPlayer::GetForceDisableSkillChecks()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.GetForceDisableSkillChecks");

	ADBDPlayer_GetForceDisableSkillChecks_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDPlayer.GetFirstComponentByClass
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UClass*                  ComponentClass                 (Parm, ZeroConstructor, IsPlainOldData)
// class UActorComponent*         ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UActorComponent* ADBDPlayer::GetFirstComponentByClass(class UClass* ComponentClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.GetFirstComponentByClass");

	ADBDPlayer_GetFirstComponentByClass_Params params;
	params.ComponentClass = ComponentClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDPlayer.GetFeetPositionAtTargetLocation
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                 Location                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FVector ADBDPlayer::GetFeetPositionAtTargetLocation(const struct FVector& Location)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.GetFeetPositionAtTargetLocation");

	ADBDPlayer_GetFeetPositionAtTargetLocation_Params params;
	params.Location = Location;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDPlayer.GetFeetPosition
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FVector ADBDPlayer::GetFeetPosition()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.GetFeetPosition");

	ADBDPlayer_GetFeetPosition_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDPlayer.GetFeetOnGround
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ADBDPlayer::GetFeetOnGround()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.GetFeetOnGround");

	ADBDPlayer_GetFeetOnGround_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDPlayer.GetEnableServerPositionUpdates
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ADBDPlayer::GetEnableServerPositionUpdates()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.GetEnableServerPositionUpdates");

	ADBDPlayer_GetEnableServerPositionUpdates_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDPlayer.GetDreamworldComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UCharacterDreamworldComponent* ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UCharacterDreamworldComponent* ADBDPlayer::GetDreamworldComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.GetDreamworldComponent");

	ADBDPlayer_GetDreamworldComponent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDPlayer.GetDetectionZone
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TEnumAsByte<EDetectionZone>    detectionZoneID                (Parm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent*     ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UPrimitiveComponent* ADBDPlayer::GetDetectionZone(TEnumAsByte<EDetectionZone> detectionZoneID)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.GetDetectionZone");

	ADBDPlayer_GetDetectionZone_Params params;
	params.detectionZoneID = detectionZoneID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDPlayer.GetDebugPrintAvailableInteractions
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ADBDPlayer::GetDebugPrintAvailableInteractions()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.GetDebugPrintAvailableInteractions");

	ADBDPlayer_GetDebugPrintAvailableInteractions_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDPlayer.GetDebugFailAllInteractions
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ADBDPlayer::GetDebugFailAllInteractions()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.GetDebugFailAllInteractions");

	ADBDPlayer_GetDebugFailAllInteractions_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDPlayer.GetDBDPlayerState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ADBDPlayerState*         ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ADBDPlayerState* ADBDPlayer::GetDBDPlayerState()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.GetDBDPlayerState");

	ADBDPlayer_GetDBDPlayerState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDPlayer.GetCustomizedSkeletalMesh
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class UCustomizedSkeletalMesh* ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UCustomizedSkeletalMesh* ADBDPlayer::GetCustomizedSkeletalMesh()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.GetCustomizedSkeletalMesh");

	ADBDPlayer_GetCustomizedSkeletalMesh_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDPlayer.GetCurrentInteractionAnimation
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TEnumAsByte<EInteractionAnimation> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

TEnumAsByte<EInteractionAnimation> ADBDPlayer::GetCurrentInteractionAnimation()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.GetCurrentInteractionAnimation");

	ADBDPlayer_GetCurrentInteractionAnimation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDPlayer.GetCurrentInteraction
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UInteractionDefinition*  ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UInteractionDefinition* ADBDPlayer::GetCurrentInteraction()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.GetCurrentInteraction");

	ADBDPlayer_GetCurrentInteraction_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDPlayer.GetCurrentAttackType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TEnumAsByte<EAttackType>       ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

TEnumAsByte<EAttackType> ADBDPlayer::GetCurrentAttackType()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.GetCurrentAttackType");

	ADBDPlayer_GetCurrentAttackType_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDPlayer.GetControlRotation
// (Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FRotator                ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FRotator ADBDPlayer::GetControlRotation()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.GetControlRotation");

	ADBDPlayer_GetControlRotation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDPlayer.GetContinuousPrintDebug
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ADBDPlayer::GetContinuousPrintDebug()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.GetContinuousPrintDebug");

	ADBDPlayer_GetContinuousPrintDebug_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDPlayer.GetChaseCooldownTimeElapsed
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ADBDPlayer::GetChaseCooldownTimeElapsed()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.GetChaseCooldownTimeElapsed");

	ADBDPlayer_GetChaseCooldownTimeElapsed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDPlayer.GetChaseCooldownDuration
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ADBDPlayer::GetChaseCooldownDuration()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.GetChaseCooldownDuration");

	ADBDPlayer_GetChaseCooldownDuration_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDPlayer.GetCharacterSnappingComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UCharacterSnappingComponent* ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UCharacterSnappingComponent* ADBDPlayer::GetCharacterSnappingComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.GetCharacterSnappingComponent");

	ADBDPlayer_GetCharacterSnappingComponent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDPlayer.GetCharacterNameAnimTag
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// class FString                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

class FString ADBDPlayer::GetCharacterNameAnimTag()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.GetCharacterNameAnimTag");

	ADBDPlayer_GetCharacterNameAnimTag_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDPlayer.GetCharacterAudioSurfaceName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

class FString ADBDPlayer::GetCharacterAudioSurfaceName()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.GetCharacterAudioSurfaceName");

	ADBDPlayer_GetCharacterAudioSurfaceName_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDPlayer.GetCapsuleTopPosition
// (Final, Native, Public, HasDefaults, Const)
// Parameters:
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FVector ADBDPlayer::GetCapsuleTopPosition()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.GetCapsuleTopPosition");

	ADBDPlayer_GetCapsuleTopPosition_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDPlayer.GetCapsuleBottomPosition
// (Final, Native, Public, HasDefaults, Const)
// Parameters:
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FVector ADBDPlayer::GetCapsuleBottomPosition()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.GetCapsuleBottomPosition");

	ADBDPlayer_GetCapsuleBottomPosition_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDPlayer.GetCameraManager
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ADBDPlayerCameraManager* ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ADBDPlayerCameraManager* ADBDPlayer::GetCameraManager()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.GetCameraManager");

	ADBDPlayer_GetCameraManager_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDPlayer.GetCameraLocation
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FVector ADBDPlayer::GetCameraLocation()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.GetCameraLocation");

	ADBDPlayer_GetCameraLocation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDPlayer.GetCameraAnchorLocation
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FVector ADBDPlayer::GetCameraAnchorLocation()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.GetCameraAnchorLocation");

	ADBDPlayer_GetCameraAnchorLocation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDPlayer.GetBoneRelativeLocation
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FName                   TargetBone                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FName                   relativeBone                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FVector ADBDPlayer::GetBoneRelativeLocation(const struct FName& TargetBone, const struct FName& relativeBone)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.GetBoneRelativeLocation");

	ADBDPlayer_GetBoneRelativeLocation_Params params;
	params.TargetBone = TargetBone;
	params.relativeBone = relativeBone;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDPlayer.GetBoneLocation
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FName                   Name                           (Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<EBoneSpaces>       space                          (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FVector ADBDPlayer::GetBoneLocation(const struct FName& Name, TEnumAsByte<EBoneSpaces> space)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.GetBoneLocation");

	ADBDPlayer_GetBoneLocation_Params params;
	params.Name = Name;
	params.space = space;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDPlayer.GetBlinkTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ADBDPlayer::GetBlinkTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.GetBlinkTime");

	ADBDPlayer_GetBlinkTime_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDPlayer.GetBaseFOV
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ADBDPlayer::GetBaseFOV()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.GetBaseFOV");

	ADBDPlayer_GetBaseFOV_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDPlayer.GetAverageVelocity
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FVector ADBDPlayer::GetAverageVelocity()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.GetAverageVelocity");

	ADBDPlayer_GetAverageVelocity_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDPlayer.GetAuthoritativeMovementComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UAuthoritativeMovementComponent* ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UAuthoritativeMovementComponent* ADBDPlayer::GetAuthoritativeMovementComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.GetAuthoritativeMovementComponent");

	ADBDPlayer_GetAuthoritativeMovementComponent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDPlayer.GetAudioComponent
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class UAkComponent*            ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UAkComponent* ADBDPlayer::GetAudioComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.GetAudioComponent");

	ADBDPlayer_GetAudioComponent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDPlayer.GetAttackMontageEvent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TEnumAsByte<EAttackType>       ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

TEnumAsByte<EAttackType> ADBDPlayer::GetAttackMontageEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.GetAttackMontageEvent");

	ADBDPlayer_GetAttackMontageEvent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDPlayer.GetAttachPoint
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FName                   attachPointName                (Parm, ZeroConstructor, IsPlainOldData)
// class USceneComponent*         ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class USceneComponent* ADBDPlayer::GetAttachPoint(const struct FName& attachPointName)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.GetAttachPoint");

	ADBDPlayer_GetAttachPoint_Params params;
	params.attachPointName = attachPointName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDPlayer.GetAnimTags
// (Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<struct FName>           outTags                        (Parm, OutParm, ZeroConstructor)

void ADBDPlayer::GetAnimTags(TArray<struct FName>* outTags)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.GetAnimTags");

	ADBDPlayer_GetAnimTags_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (outTags != nullptr)
		*outTags = params.outTags;
}


// Function DeadByDaylight.DBDPlayer.GetAnimInstanceConst
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UAnimInstance*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UAnimInstance* ADBDPlayer::GetAnimInstanceConst()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.GetAnimInstanceConst");

	ADBDPlayer_GetAnimInstanceConst_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDPlayer.GetAnimInstance
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UAnimInstance*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UAnimInstance* ADBDPlayer::GetAnimInstance()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.GetAnimInstance");

	ADBDPlayer_GetAnimInstance_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDPlayer.GetAnimData
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FAnimData               ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FAnimData ADBDPlayer::GetAnimData()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.GetAnimData");

	ADBDPlayer_GetAnimData_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDPlayer.GetAlmostCurrentVelocity
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FVector ADBDPlayer::GetAlmostCurrentVelocity()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.GetAlmostCurrentVelocity");

	ADBDPlayer_GetAlmostCurrentVelocity_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDPlayer.GetActorLocationFromFeetLocation
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                 FeetLocation                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FVector ADBDPlayer::GetActorLocationFromFeetLocation(const struct FVector& FeetLocation)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.GetActorLocationFromFeetLocation");

	ADBDPlayer_GetActorLocationFromFeetLocation_Params params;
	params.FeetLocation = FeetLocation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDPlayer.FindFurthestClearLocationBetweenPoints
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                 StartPosition                  (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 targetPosition                 (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FVector ADBDPlayer::FindFurthestClearLocationBetweenPoints(const struct FVector& StartPosition, const struct FVector& targetPosition)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.FindFurthestClearLocationBetweenPoints");

	ADBDPlayer_FindFurthestClearLocationBetweenPoints_Params params;
	params.StartPosition = StartPosition;
	params.targetPosition = targetPosition;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDPlayer.EquipItem
// (Final, Native, Public, BlueprintCallable)

void ADBDPlayer::EquipItem()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.EquipItem");

	ADBDPlayer_EquipItem_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.Drop
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// class ACollectable*            Item                           (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 Location                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// struct FRotator                Rotation                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// bool                           onDeath                        (Parm, ZeroConstructor, IsPlainOldData)
// bool                           adjustToGround                 (Parm, ZeroConstructor, IsPlainOldData)

void ADBDPlayer::Drop(class ACollectable* Item, const struct FVector& Location, const struct FRotator& Rotation, bool onDeath, bool adjustToGround)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.Drop");

	ADBDPlayer_Drop_Params params;
	params.Item = Item;
	params.Location = Location;
	params.Rotation = Rotation;
	params.onDeath = onDeath;
	params.adjustToGround = adjustToGround;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.Dissolve
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                           Dissolve                       (Parm, ZeroConstructor, IsPlainOldData)

void ADBDPlayer::Dissolve(bool Dissolve)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.Dissolve");

	ADBDPlayer_Dissolve_Params params;
	params.Dissolve = Dissolve;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.DetachInteractor
// (Final, Native, Public, BlueprintCallable)

void ADBDPlayer::DetachInteractor()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.DetachInteractor");

	ADBDPlayer_DetachInteractor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.DebugPrint
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:
// class FString                  inString                       (Parm, ZeroConstructor)

void ADBDPlayer::DebugPrint(const class FString& inString)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.DebugPrint");

	ADBDPlayer_DebugPrint_Params params;
	params.inString = inString;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.DeactivateSkillChecks
// (Final, Native, Public, BlueprintCallable)

void ADBDPlayer::DeactivateSkillChecks()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.DeactivateSkillChecks");

	ADBDPlayer_DeactivateSkillChecks_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.DBDUnCrouch
// (Native, Public, BlueprintCallable)

void ADBDPlayer::DBDUnCrouch()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.DBDUnCrouch");

	ADBDPlayer_DBDUnCrouch_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.DBDLog
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                  LogText                        (Parm, ZeroConstructor)

void ADBDPlayer::DBDLog(const class FString& LogText)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.DBDLog");

	ADBDPlayer_DBDLog_Params params;
	params.LogText = LogText;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.DBDCrouch
// (Native, Public, BlueprintCallable)

void ADBDPlayer::DBDCrouch()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.DBDCrouch");

	ADBDPlayer_DBDCrouch_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.DBD_TogglePrintServerPositionUpdateEnabled
// (Final, Exec, Native, Private)

void ADBDPlayer::DBD_TogglePrintServerPositionUpdateEnabled()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.DBD_TogglePrintServerPositionUpdateEnabled");

	ADBDPlayer_DBD_TogglePrintServerPositionUpdateEnabled_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.DBD_ToggleForceAuthoritativeMovement
// (Final, Exec, Native, Private)

void ADBDPlayer::DBD_ToggleForceAuthoritativeMovement()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.DBD_ToggleForceAuthoritativeMovement");

	ADBDPlayer_DBD_ToggleForceAuthoritativeMovement_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.DBD_ToggleDebugInteractionInZone
// (Final, Exec, Native, Public)

void ADBDPlayer::DBD_ToggleDebugInteractionInZone()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.DBD_ToggleDebugInteractionInZone");

	ADBDPlayer_DBD_ToggleDebugInteractionInZone_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.DBD_SetMouseTurnSpeedMultiplier
// (Final, Exec, Native, Protected)
// Parameters:
// float                          Value                          (Parm, ZeroConstructor, IsPlainOldData)

void ADBDPlayer::DBD_SetMouseTurnSpeedMultiplier(float Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.DBD_SetMouseTurnSpeedMultiplier");

	ADBDPlayer_DBD_SetMouseTurnSpeedMultiplier_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.DBD_SetMouseLookUpSpeedMultiplier
// (Final, Exec, Native, Protected)
// Parameters:
// float                          Value                          (Parm, ZeroConstructor, IsPlainOldData)

void ADBDPlayer::DBD_SetMouseLookUpSpeedMultiplier(float Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.DBD_SetMouseLookUpSpeedMultiplier");

	ADBDPlayer_DBD_SetMouseLookUpSpeedMultiplier_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.DBD_SetGamePadTurnRate
// (Final, Exec, Native, Protected)
// Parameters:
// float                          Value                          (Parm, ZeroConstructor, IsPlainOldData)

void ADBDPlayer::DBD_SetGamePadTurnRate(float Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.DBD_SetGamePadTurnRate");

	ADBDPlayer_DBD_SetGamePadTurnRate_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.DBD_SetGamePadLookUpRate
// (Final, Exec, Native, Protected)
// Parameters:
// float                          Value                          (Parm, ZeroConstructor, IsPlainOldData)

void ADBDPlayer::DBD_SetGamePadLookUpRate(float Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.DBD_SetGamePadLookUpRate");

	ADBDPlayer_DBD_SetGamePadLookUpRate_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.DBD_DebugStartInteraction
// (Final, Exec, Native, Public)

void ADBDPlayer::DBD_DebugStartInteraction()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.DBD_DebugStartInteraction");

	ADBDPlayer_DBD_DebugStartInteraction_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.ConsumeStamina
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          Stamina                        (Parm, ZeroConstructor, IsPlainOldData)

void ADBDPlayer::ConsumeStamina(float Stamina)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.ConsumeStamina");

	ADBDPlayer_ConsumeStamina_Params params;
	params.Stamina = Stamina;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.Collect
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ACollectable*            Item                           (Parm, ZeroConstructor, IsPlainOldData)

void ADBDPlayer::Collect(class ACollectable* Item)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.Collect");

	ADBDPlayer_Collect_Params params;
	params.Item = Item;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.Client_TryInteractionType
// (Net, NetReliable, Native, Event, Public, NetClient, BlueprintCallable, NetValidate)
// Parameters:
// TEnumAsByte<EInputInteractionType> InteractionType                (Parm, ZeroConstructor, IsPlainOldData)
// class ADBDPlayer*              Requester                      (Parm, ZeroConstructor, IsPlainOldData)

void ADBDPlayer::Client_TryInteractionType(TEnumAsByte<EInputInteractionType> InteractionType, class ADBDPlayer* Requester)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.Client_TryInteractionType");

	ADBDPlayer_Client_TryInteractionType_Params params;
	params.InteractionType = InteractionType;
	params.Requester = Requester;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.Client_SendCancelInteraction
// (Net, NetReliable, Native, Event, Public, NetClient, BlueprintCallable, NetValidate)

void ADBDPlayer::Client_SendCancelInteraction()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.Client_SendCancelInteraction");

	ADBDPlayer_Client_SendCancelInteraction_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.Client_QueueInteraction
// (Net, NetReliable, Native, Event, Public, NetClient, BlueprintCallable, NetValidate)
// Parameters:
// TEnumAsByte<EInputInteractionType> InteractionType                (Parm, ZeroConstructor, IsPlainOldData)
// class ADBDPlayer*              Requester                      (Parm, ZeroConstructor, IsPlainOldData)
// float                          queuedTimer                    (Parm, ZeroConstructor, IsPlainOldData)

void ADBDPlayer::Client_QueueInteraction(TEnumAsByte<EInputInteractionType> InteractionType, class ADBDPlayer* Requester, float queuedTimer)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.Client_QueueInteraction");

	ADBDPlayer_Client_QueueInteraction_Params params;
	params.InteractionType = InteractionType;
	params.Requester = Requester;
	params.queuedTimer = queuedTimer;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.Client_DebugAutoInteract
// (Net, NetReliable, Native, Event, Public, NetClient, BlueprintCallable, NetValidate)
// Parameters:
// bool                           Enabled                        (Parm, ZeroConstructor, IsPlainOldData)

void ADBDPlayer::Client_DebugAutoInteract(bool Enabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.Client_DebugAutoInteract");

	ADBDPlayer_Client_DebugAutoInteract_Params params;
	params.Enabled = Enabled;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.Client_ClearInteractionQueue
// (Net, NetReliable, Native, Event, Public, NetClient, BlueprintCallable, NetValidate)

void ADBDPlayer::Client_ClearInteractionQueue()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.Client_ClearInteractionQueue");

	ADBDPlayer_Client_ClearInteractionQueue_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.ClearAndDestroyInventory
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)

void ADBDPlayer::ClearAndDestroyInventory()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.ClearAndDestroyInventory");

	ADBDPlayer_ClearAndDestroyInventory_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.CanSprint
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ADBDPlayer::CanSprint()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.CanSprint");

	ADBDPlayer_CanSprint_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDPlayer.CanInterrupt_BP
// (Native, Event, Protected, BlueprintEvent, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ADBDPlayer::CanInterrupt_BP()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.CanInterrupt_BP");

	ADBDPlayer_CanInterrupt_BP_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDPlayer.CanInteractWithItems
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ADBDPlayer::CanInteractWithItems()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.CanInteractWithItems");

	ADBDPlayer_CanInteractWithItems_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDPlayer.CanInteract
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ADBDPlayer::CanInteract()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.CanInteract");

	ADBDPlayer_CanInteract_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDPlayer.CanAttack_BP
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ADBDPlayer::CanAttack_BP()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.CanAttack_BP");

	ADBDPlayer_CanAttack_BP_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDPlayer.CanAttack
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ADBDPlayer::CanAttack()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.CanAttack");

	ADBDPlayer_CanAttack_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDPlayer.CameraUpdated
// (Native, Public, BlueprintCallable)

void ADBDPlayer::CameraUpdated()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.CameraUpdated");

	ADBDPlayer_CameraUpdated_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.Broadcast_PlayMontage_Server
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// struct FAnimationMontageDescriptor animMontageID                  (Parm)
// float                          PlayRate                       (Parm, ZeroConstructor, IsPlainOldData)

void ADBDPlayer::Broadcast_PlayMontage_Server(const struct FAnimationMontageDescriptor& animMontageID, float PlayRate)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.Broadcast_PlayMontage_Server");

	ADBDPlayer_Broadcast_PlayMontage_Server_Params params;
	params.animMontageID = animMontageID;
	params.PlayRate = PlayRate;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.Broadcast_PlayMontage_Multicast
// (Net, NetReliable, Native, Event, NetMulticast, Protected, NetValidate)
// Parameters:
// struct FAnimationMontageDescriptor animMontageID                  (Parm)
// float                          PlayRate                       (Parm, ZeroConstructor, IsPlainOldData)

void ADBDPlayer::Broadcast_PlayMontage_Multicast(const struct FAnimationMontageDescriptor& animMontageID, float PlayRate)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.Broadcast_PlayMontage_Multicast");

	ADBDPlayer_Broadcast_PlayMontage_Multicast_Params params;
	params.animMontageID = animMontageID;
	params.PlayRate = PlayRate;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.Broadcast_Multicast_BlinkDestination
// (Net, NetReliable, Native, Event, NetMulticast, Protected, HasDefaults, NetValidate)
// Parameters:
// struct FVector                 Position                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FRotator                Rotation                       (Parm, ZeroConstructor, IsPlainOldData)

void ADBDPlayer::Broadcast_Multicast_BlinkDestination(const struct FVector& Position, const struct FRotator& Rotation)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.Broadcast_Multicast_BlinkDestination");

	ADBDPlayer_Broadcast_Multicast_BlinkDestination_Params params;
	params.Position = Position;
	params.Rotation = Rotation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.Broadcast_LockOnTarget_Server
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// class ADBDPlayer*              Target                         (Parm, ZeroConstructor, IsPlainOldData)

void ADBDPlayer::Broadcast_LockOnTarget_Server(class ADBDPlayer* Target)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.Broadcast_LockOnTarget_Server");

	ADBDPlayer_Broadcast_LockOnTarget_Server_Params params;
	params.Target = Target;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.Broadcast_LockOnTarget_Multicast
// (Net, NetReliable, Native, Event, NetMulticast, Protected, NetValidate)
// Parameters:
// class ADBDPlayer*              Target                         (Parm, ZeroConstructor, IsPlainOldData)

void ADBDPlayer::Broadcast_LockOnTarget_Multicast(class ADBDPlayer* Target)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.Broadcast_LockOnTarget_Multicast");

	ADBDPlayer_Broadcast_LockOnTarget_Multicast_Params params;
	params.Target = Target;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.Broadcast_DamageTarget_Server
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// class ADBDPlayer*              Target                         (Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<EAttackType>       attackType                     (Parm, ZeroConstructor, IsPlainOldData)

void ADBDPlayer::Broadcast_DamageTarget_Server(class ADBDPlayer* Target, TEnumAsByte<EAttackType> attackType)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.Broadcast_DamageTarget_Server");

	ADBDPlayer_Broadcast_DamageTarget_Server_Params params;
	params.Target = Target;
	params.attackType = attackType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.Broadcast_DamageTarget_Multicast
// (Net, NetReliable, Native, Event, NetMulticast, Protected, NetValidate)
// Parameters:
// class ADBDPlayer*              Target                         (Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<EAttackType>       attackType                     (Parm, ZeroConstructor, IsPlainOldData)

void ADBDPlayer::Broadcast_DamageTarget_Multicast(class ADBDPlayer* Target, TEnumAsByte<EAttackType> attackType)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.Broadcast_DamageTarget_Multicast");

	ADBDPlayer_Broadcast_DamageTarget_Multicast_Params params;
	params.Target = Target;
	params.attackType = attackType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.Broadcast_BlinkDestination
// (Net, NetReliable, Native, Event, Protected, NetServer, HasDefaults, NetValidate)
// Parameters:
// struct FVector                 Position                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FRotator                Rotation                       (Parm, ZeroConstructor, IsPlainOldData)

void ADBDPlayer::Broadcast_BlinkDestination(const struct FVector& Position, const struct FRotator& Rotation)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.Broadcast_BlinkDestination");

	ADBDPlayer_Broadcast_BlinkDestination_Params params;
	params.Position = Position;
	params.Rotation = Rotation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.Broadcast_AttackSubstate_Server
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// TEnumAsByte<EAttackSubstate>   attackSubstate                 (Parm, ZeroConstructor, IsPlainOldData)

void ADBDPlayer::Broadcast_AttackSubstate_Server(TEnumAsByte<EAttackSubstate> attackSubstate)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.Broadcast_AttackSubstate_Server");

	ADBDPlayer_Broadcast_AttackSubstate_Server_Params params;
	params.attackSubstate = attackSubstate;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.Broadcast_AttackSubstate_Multicast
// (Net, NetReliable, Native, Event, NetMulticast, Protected, NetValidate)
// Parameters:
// TEnumAsByte<EAttackSubstate>   attackSubstate                 (Parm, ZeroConstructor, IsPlainOldData)

void ADBDPlayer::Broadcast_AttackSubstate_Multicast(TEnumAsByte<EAttackSubstate> attackSubstate)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.Broadcast_AttackSubstate_Multicast");

	ADBDPlayer_Broadcast_AttackSubstate_Multicast_Params params;
	params.attackSubstate = attackSubstate;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.AuthorityTriggerSprintWithParams
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// float                          duration                       (Parm, ZeroConstructor, IsPlainOldData)
// float                          coolDown                       (Parm, ZeroConstructor, IsPlainOldData)
// class UCurveFloat*             Curve                          (Parm, ZeroConstructor, IsPlainOldData)
// struct FName                   effector                       (Parm, ZeroConstructor, IsPlainOldData)

void ADBDPlayer::AuthorityTriggerSprintWithParams(float duration, float coolDown, class UCurveFloat* Curve, const struct FName& effector)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.AuthorityTriggerSprintWithParams");

	ADBDPlayer_AuthorityTriggerSprintWithParams_Params params;
	params.duration = duration;
	params.coolDown = coolDown;
	params.Curve = Curve;
	params.effector = effector;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.AuthorityTriggerSprint
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)

void ADBDPlayer::AuthorityTriggerSprint()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.AuthorityTriggerSprint");

	ADBDPlayer_AuthorityTriggerSprint_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.Authority_TryForceEndOngoingScoreEvent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<EDBDScoreTypes>    ScoreType                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ADBDPlayer::Authority_TryForceEndOngoingScoreEvent(TEnumAsByte<EDBDScoreTypes> ScoreType)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.Authority_TryForceEndOngoingScoreEvent");

	ADBDPlayer_Authority_TryForceEndOngoingScoreEvent_Params params;
	params.ScoreType = ScoreType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDPlayer.Authority_TryForceCancelOngoingScoreEvent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<EDBDScoreTypes>    ScoreType                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ADBDPlayer::Authority_TryForceCancelOngoingScoreEvent(TEnumAsByte<EDBDScoreTypes> ScoreType)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.Authority_TryForceCancelOngoingScoreEvent");

	ADBDPlayer_Authority_TryForceCancelOngoingScoreEvent_Params params;
	params.ScoreType = ScoreType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDPlayer.Authority_RequestStun
// (BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<EStunType>         stunType                       (Parm, ZeroConstructor, IsPlainOldData)
// class ADBDPlayer*              stunner                        (Parm, ZeroConstructor, IsPlainOldData)

void ADBDPlayer::Authority_RequestStun(TEnumAsByte<EStunType> stunType, class ADBDPlayer* stunner)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.Authority_RequestStun");

	ADBDPlayer_Authority_RequestStun_Params params;
	params.stunType = stunType;
	params.stunner = stunner;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.Authority_RemoveStatusEffectByID
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// struct FName                   statusEffectID                 (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bRemoveAllWithID               (Parm, ZeroConstructor, IsPlainOldData)

void ADBDPlayer::Authority_RemoveStatusEffectByID(const struct FName& statusEffectID, bool bRemoveAllWithID)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.Authority_RemoveStatusEffectByID");

	ADBDPlayer_Authority_RemoveStatusEffectByID_Params params;
	params.statusEffectID = statusEffectID;
	params.bRemoveAllWithID = bRemoveAllWithID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.Authority_ImposeUniqueStatusEffect
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// struct FName                   statusEffectID                 (Parm, ZeroConstructor, IsPlainOldData)
// class ADBDPlayer*              originatingPlayer              (Parm, ZeroConstructor, IsPlainOldData)
// float                          customParam                    (Parm, ZeroConstructor, IsPlainOldData)
// class UGameplayModifierContainer* originatingEffect              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class UStatusEffect*           ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UStatusEffect* ADBDPlayer::Authority_ImposeUniqueStatusEffect(const struct FName& statusEffectID, class ADBDPlayer* originatingPlayer, float customParam, class UGameplayModifierContainer* originatingEffect)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.Authority_ImposeUniqueStatusEffect");

	ADBDPlayer_Authority_ImposeUniqueStatusEffect_Params params;
	params.statusEffectID = statusEffectID;
	params.originatingPlayer = originatingPlayer;
	params.customParam = customParam;
	params.originatingEffect = originatingEffect;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDPlayer.Authority_ImposeStatusEffect
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// struct FName                   statusEffectID                 (Parm, ZeroConstructor, IsPlainOldData)
// class ADBDPlayer*              originatingPlayer              (Parm, ZeroConstructor, IsPlainOldData)
// float                          customParam                    (Parm, ZeroConstructor, IsPlainOldData)
// class UGameplayModifierContainer* originatingEffect              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class UStatusEffect*           ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UStatusEffect* ADBDPlayer::Authority_ImposeStatusEffect(const struct FName& statusEffectID, class ADBDPlayer* originatingPlayer, float customParam, class UGameplayModifierContainer* originatingEffect)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.Authority_ImposeStatusEffect");

	ADBDPlayer_Authority_ImposeStatusEffect_Params params;
	params.statusEffectID = statusEffectID;
	params.originatingPlayer = originatingPlayer;
	params.customParam = customParam;
	params.originatingEffect = originatingEffect;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDPlayer.Authority_ImposeDynamicStatusEffect
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// struct FName                   statusEffectID                 (Parm, ZeroConstructor, IsPlainOldData)
// class ADBDPlayer*              originatingPlayer              (Parm, ZeroConstructor, IsPlainOldData)
// float                          customParam                    (Parm, ZeroConstructor, IsPlainOldData)
// class UGameplayModifierContainer* originatingEffect              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class UStatusEffect*           ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UStatusEffect* ADBDPlayer::Authority_ImposeDynamicStatusEffect(const struct FName& statusEffectID, class ADBDPlayer* originatingPlayer, float customParam, class UGameplayModifierContainer* originatingEffect)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.Authority_ImposeDynamicStatusEffect");

	ADBDPlayer_Authority_ImposeDynamicStatusEffect_Params params;
	params.statusEffectID = statusEffectID;
	params.originatingPlayer = originatingPlayer;
	params.customParam = customParam;
	params.originatingEffect = originatingEffect;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDPlayer.Authority_Flashlighted
// (BlueprintAuthorityOnly, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// TArray<class AActor*>          instigators                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)

void ADBDPlayer::Authority_Flashlighted(TArray<class AActor*> instigators)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.Authority_Flashlighted");

	ADBDPlayer_Authority_Flashlighted_Params params;
	params.instigators = instigators;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.Authority_Blinded
// (Native, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<EBlindType>        blindType                      (Parm, ZeroConstructor, IsPlainOldData)
// float                          coolDown                       (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  effector                       (Parm, ZeroConstructor, IsPlainOldData)

void ADBDPlayer::Authority_Blinded(TEnumAsByte<EBlindType> blindType, float coolDown, class AActor* effector)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.Authority_Blinded");

	ADBDPlayer_Authority_Blinded_Params params;
	params.blindType = blindType;
	params.coolDown = coolDown;
	params.effector = effector;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.Authority_AttemptEscapeCarry
// (BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class ACamperPlayer*           Player                         (Parm, ZeroConstructor, IsPlainOldData)

void ADBDPlayer::Authority_AttemptEscapeCarry(class ACamperPlayer* Player)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.Authority_AttemptEscapeCarry");

	ADBDPlayer_Authority_AttemptEscapeCarry_Params params;
	params.Player = Player;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.Authority_ActivateAuthoritativeMovementOnDropped
// (Native, Public, BlueprintCallable)

void ADBDPlayer::Authority_ActivateAuthoritativeMovementOnDropped()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.Authority_ActivateAuthoritativeMovementOnDropped");

	ADBDPlayer_Authority_ActivateAuthoritativeMovementOnDropped_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.AttachInteractor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UInteractor*             Interactor                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void ADBDPlayer::AttachInteractor(class UInteractor* Interactor)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.AttachInteractor");

	ADBDPlayer_AttachInteractor_Params params;
	params.Interactor = Interactor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.AddToInventory
// (Final, BlueprintAuthorityOnly, Native, Private, BlueprintCallable)
// Parameters:
// class ACollectable*            Item                           (Parm, ZeroConstructor, IsPlainOldData)

void ADBDPlayer::AddToInventory(class ACollectable* Item)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.AddToInventory");

	ADBDPlayer_AddToInventory_Params params;
	params.Item = Item;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.AddStatusEffect
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UStatusEffect*           StatusEffect                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void ADBDPlayer::AddStatusEffect(class UStatusEffect* StatusEffect)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.AddStatusEffect");

	ADBDPlayer_AddStatusEffect_Params params;
	params.StatusEffect = StatusEffect;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.AddPerk
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UPerk*                   Perk                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void ADBDPlayer::AddPerk(class UPerk* Perk)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.AddPerk");

	ADBDPlayer_AddPerk_Params params;
	params.Perk = Perk;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayer.AddDetectionZone
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<EDetectionZone>    detectionZoneID                (Parm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent*     zone                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void ADBDPlayer::AddDetectionZone(TEnumAsByte<EDetectionZone> detectionZoneID, class UPrimitiveComponent* zone)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayer.AddDetectionZone");

	ADBDPlayer_AddDetectionZone_Params params;
	params.detectionZoneID = detectionZoneID;
	params.zone = zone;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.AuthoritativeMovementComponent.SetPawnDetector
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UCapsuleComponent*       pawnDetector                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UAuthoritativeMovementComponent::SetPawnDetector(class UCapsuleComponent* pawnDetector)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.AuthoritativeMovementComponent.SetPawnDetector");

	UAuthoritativeMovementComponent_SetPawnDetector_Params params;
	params.pawnDetector = pawnDetector;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.AuthoritativeMovementComponent.OnPawnDetectorOverlapExit
// (Final, Native, Protected)
// Parameters:
// class UPrimitiveComponent*     HitComponent                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// int                            OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData)

void UAuthoritativeMovementComponent::OnPawnDetectorOverlapExit(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.AuthoritativeMovementComponent.OnPawnDetectorOverlapExit");

	UAuthoritativeMovementComponent_OnPawnDetectorOverlapExit_Params params;
	params.HitComponent = HitComponent;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.AuthoritativeMovementComponent.OnPawnDetectorOverlapEnter
// (Final, Native, Protected, HasOutParms)
// Parameters:
// class UPrimitiveComponent*     HitComponent                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// int                            OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bFromSweep                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FHitResult              SweepResult                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void UAuthoritativeMovementComponent::OnPawnDetectorOverlapEnter(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.AuthoritativeMovementComponent.OnPawnDetectorOverlapEnter");

	UAuthoritativeMovementComponent_OnPawnDetectorOverlapEnter_Params params;
	params.HitComponent = HitComponent;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;
	params.bFromSweep = bFromSweep;
	params.SweepResult = SweepResult;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.AuthoritativeMovementComponent.OnOverlapExit
// (Final, Native, Protected)
// Parameters:
// class UPrimitiveComponent*     HitComponent                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// int                            OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData)

void UAuthoritativeMovementComponent::OnOverlapExit(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.AuthoritativeMovementComponent.OnOverlapExit");

	UAuthoritativeMovementComponent_OnOverlapExit_Params params;
	params.HitComponent = HitComponent;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.AuthoritativeMovementComponent.OnOverlapEnter
// (Final, Native, Protected, HasOutParms)
// Parameters:
// class UPrimitiveComponent*     HitComponent                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// int                            OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bFromSweep                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FHitResult              SweepResult                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void UAuthoritativeMovementComponent::OnOverlapEnter(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.AuthoritativeMovementComponent.OnOverlapEnter");

	UAuthoritativeMovementComponent_OnOverlapEnter_Params params;
	params.HitComponent = HitComponent;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;
	params.bFromSweep = bFromSweep;
	params.SweepResult = SweepResult;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.AxisFlickMasher.OnAxisFlicked2
// (Final, Native, Private)

void UAxisFlickMasher::OnAxisFlicked2()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.AxisFlickMasher.OnAxisFlicked2");

	UAxisFlickMasher_OnAxisFlicked2_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.AxisFlickMasher.OnAxisFlicked1
// (Final, Native, Private)

void UAxisFlickMasher::OnAxisFlicked1()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.AxisFlickMasher.OnAxisFlicked1");

	UAxisFlickMasher_OnAxisFlicked1_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.BaseProjectileLauncher.SetProjectileVar
// (Event, Public, BlueprintEvent)
// Parameters:
// struct FName                   VarName                        (Parm, ZeroConstructor, IsPlainOldData)
// float                          Value                          (Parm, ZeroConstructor, IsPlainOldData)

void UBaseProjectileLauncher::SetProjectileVar(const struct FName& VarName, float Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.BaseProjectileLauncher.SetProjectileVar");

	UBaseProjectileLauncher_SetProjectileVar_Params params;
	params.VarName = VarName;
	params.Value = Value;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.BaseProjectileLauncher.OnReload
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// int                            ammo                           (Parm, ZeroConstructor, IsPlainOldData)

void UBaseProjectileLauncher::OnReload(int ammo)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.BaseProjectileLauncher.OnReload");

	UBaseProjectileLauncher_OnReload_Params params;
	params.ammo = ammo;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.BaseProjectileLauncher.OnLaunch
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// struct FLaunchInfo             LaunchInfo                     (Parm)

void UBaseProjectileLauncher::OnLaunch(const struct FLaunchInfo& LaunchInfo)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.BaseProjectileLauncher.OnLaunch");

	UBaseProjectileLauncher_OnLaunch_Params params;
	params.LaunchInfo = LaunchInfo;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.BaseProjectileLauncher.Local_SetMaxAmmo
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            newMaxAmmo                     (Parm, ZeroConstructor, IsPlainOldData)

void UBaseProjectileLauncher::Local_SetMaxAmmo(int newMaxAmmo)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.BaseProjectileLauncher.Local_SetMaxAmmo");

	UBaseProjectileLauncher_Local_SetMaxAmmo_Params params;
	params.newMaxAmmo = newMaxAmmo;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.BaseProjectileLauncher.Local_Reload
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            ammoToAdd                      (Parm, ZeroConstructor, IsPlainOldData)

void UBaseProjectileLauncher::Local_Reload(int ammoToAdd)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.BaseProjectileLauncher.Local_Reload");

	UBaseProjectileLauncher_Local_Reload_Params params;
	params.ammoToAdd = ammoToAdd;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.BaseProjectileLauncher.Local_Launch
// (Final, Native, Public, BlueprintCallable)

void UBaseProjectileLauncher::Local_Launch()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.BaseProjectileLauncher.Local_Launch");

	UBaseProjectileLauncher_Local_Launch_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.BaseProjectileLauncher.IsLocallyControlled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UBaseProjectileLauncher::IsLocallyControlled()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.BaseProjectileLauncher.IsLocallyControlled");

	UBaseProjectileLauncher_IsLocallyControlled_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.BaseProjectileLauncher.HasProjectile
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UBaseProjectileLauncher::HasProjectile()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.BaseProjectileLauncher.HasProjectile");

	UBaseProjectileLauncher_HasProjectile_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.BaseProjectileLauncher.HasAuthority
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UBaseProjectileLauncher::HasAuthority()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.BaseProjectileLauncher.HasAuthority");

	UBaseProjectileLauncher_HasAuthority_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.BaseProjectileLauncher.GetProjectileToLaunch
// (Native, Event, Protected, BlueprintEvent, Const)
// Parameters:
// class ABaseProjectile*         ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ABaseProjectile* UBaseProjectileLauncher::GetProjectileToLaunch()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.BaseProjectileLauncher.GetProjectileToLaunch");

	UBaseProjectileLauncher_GetProjectileToLaunch_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.BaseProjectileLauncher.GetPlayerOwner
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class ADBDPlayer*              ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ADBDPlayer* UBaseProjectileLauncher::GetPlayerOwner()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.BaseProjectileLauncher.GetPlayerOwner");

	UBaseProjectileLauncher_GetPlayerOwner_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.BaseProjectileLauncher.GetOldestProjectile
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ABaseProjectile*         ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ABaseProjectile* UBaseProjectileLauncher::GetOldestProjectile()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.BaseProjectileLauncher.GetOldestProjectile");

	UBaseProjectileLauncher_GetOldestProjectile_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.BaseProjectileLauncher.GetMaxAmmo
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UBaseProjectileLauncher::GetMaxAmmo()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.BaseProjectileLauncher.GetMaxAmmo");

	UBaseProjectileLauncher_GetMaxAmmo_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.BaseProjectileLauncher.GetLaunchSpeed
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UBaseProjectileLauncher::GetLaunchSpeed()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.BaseProjectileLauncher.GetLaunchSpeed");

	UBaseProjectileLauncher_GetLaunchSpeed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.BaseProjectileLauncher.GetLaunchPosition
// (Native, Event, Protected, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FVector UBaseProjectileLauncher::GetLaunchPosition()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.BaseProjectileLauncher.GetLaunchPosition");

	UBaseProjectileLauncher_GetLaunchPosition_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.BaseProjectileLauncher.GetLaunchDirection
// (Native, Event, Protected, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FVector UBaseProjectileLauncher::GetLaunchDirection()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.BaseProjectileLauncher.GetLaunchDirection");

	UBaseProjectileLauncher_GetLaunchDirection_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.BaseProjectileLauncher.GetFirstAvailableProjectile
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ABaseProjectile*         ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ABaseProjectile* UBaseProjectileLauncher::GetFirstAvailableProjectile()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.BaseProjectileLauncher.GetFirstAvailableProjectile");

	UBaseProjectileLauncher_GetFirstAvailableProjectile_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.BaseProjectileLauncher.GetAmmo
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UBaseProjectileLauncher::GetAmmo()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.BaseProjectileLauncher.GetAmmo");

	UBaseProjectileLauncher_GetAmmo_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.BaseProjectileLauncher.Broadcast_SetMaxAmmo_Server
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// int8_t                         newMaxAmmo                     (Parm, ZeroConstructor, IsPlainOldData)

void UBaseProjectileLauncher::Broadcast_SetMaxAmmo_Server(int8_t newMaxAmmo)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.BaseProjectileLauncher.Broadcast_SetMaxAmmo_Server");

	UBaseProjectileLauncher_Broadcast_SetMaxAmmo_Server_Params params;
	params.newMaxAmmo = newMaxAmmo;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.BaseProjectileLauncher.Broadcast_SetMaxAmmo_Multicast
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
// Parameters:
// int8_t                         newMaxAmmo                     (Parm, ZeroConstructor, IsPlainOldData)

void UBaseProjectileLauncher::Broadcast_SetMaxAmmo_Multicast(int8_t newMaxAmmo)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.BaseProjectileLauncher.Broadcast_SetMaxAmmo_Multicast");

	UBaseProjectileLauncher_Broadcast_SetMaxAmmo_Multicast_Params params;
	params.newMaxAmmo = newMaxAmmo;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.BaseProjectileLauncher.Broadcast_Reload_Server
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// int8_t                         ammoToAdd                      (Parm, ZeroConstructor, IsPlainOldData)

void UBaseProjectileLauncher::Broadcast_Reload_Server(int8_t ammoToAdd)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.BaseProjectileLauncher.Broadcast_Reload_Server");

	UBaseProjectileLauncher_Broadcast_Reload_Server_Params params;
	params.ammoToAdd = ammoToAdd;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.BaseProjectileLauncher.Broadcast_Reload_Multicast
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private, NetValidate)
// Parameters:
// int8_t                         ammoToAdd                      (Parm, ZeroConstructor, IsPlainOldData)

void UBaseProjectileLauncher::Broadcast_Reload_Multicast(int8_t ammoToAdd)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.BaseProjectileLauncher.Broadcast_Reload_Multicast");

	UBaseProjectileLauncher_Broadcast_Reload_Multicast_Params params;
	params.ammoToAdd = ammoToAdd;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.BaseProjectileLauncher.Broadcast_Launch_Server
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// struct FLaunchInfo             LaunchInfo                     (Parm)

void UBaseProjectileLauncher::Broadcast_Launch_Server(const struct FLaunchInfo& LaunchInfo)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.BaseProjectileLauncher.Broadcast_Launch_Server");

	UBaseProjectileLauncher_Broadcast_Launch_Server_Params params;
	params.LaunchInfo = LaunchInfo;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.BaseProjectileLauncher.Broadcast_Launch_Multicast
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private, NetValidate)
// Parameters:
// struct FLaunchInfo             LaunchInfo                     (Parm)

void UBaseProjectileLauncher::Broadcast_Launch_Multicast(const struct FLaunchInfo& LaunchInfo)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.BaseProjectileLauncher.Broadcast_Launch_Multicast");

	UBaseProjectileLauncher_Broadcast_Launch_Multicast_Params params;
	params.LaunchInfo = LaunchInfo;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.BaseProjectileLauncher.Authority_OnProjectileDestroyed
// (Final, Native, Private)
// Parameters:
// class AActor*                  DestroyedActor                 (Parm, ZeroConstructor, IsPlainOldData)

void UBaseProjectileLauncher::Authority_OnProjectileDestroyed(class AActor* DestroyedActor)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.BaseProjectileLauncher.Authority_OnProjectileDestroyed");

	UBaseProjectileLauncher_Authority_OnProjectileDestroyed_Params params;
	params.DestroyedActor = DestroyedActor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.BaseProjectileLauncher.Authority_CleanProjectilePool
// (Final, Native, Private)
// Parameters:
// class AActor*                  DestroyedActor                 (Parm, ZeroConstructor, IsPlainOldData)

void UBaseProjectileLauncher::Authority_CleanProjectilePool(class AActor* DestroyedActor)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.BaseProjectileLauncher.Authority_CleanProjectilePool");

	UBaseProjectileLauncher_Authority_CleanProjectilePool_Params params;
	params.DestroyedActor = DestroyedActor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.BaseProjectile.SphereTraceSingle
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                 Start                          (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 End                            (Parm, ZeroConstructor, IsPlainOldData)
// class USphereComponent*        Sphere                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// struct FHitResult              outHitResult                   (Parm, OutParm, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ABaseProjectile::SphereTraceSingle(const struct FVector& Start, const struct FVector& End, class USphereComponent* Sphere, struct FHitResult* outHitResult)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.BaseProjectile.SphereTraceSingle");

	ABaseProjectile_SphereTraceSingle_Params params;
	params.Start = Start;
	params.End = End;
	params.Sphere = Sphere;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (outHitResult != nullptr)
		*outHitResult = params.outHitResult;

	return params.ReturnValue;
}


// Function DeadByDaylight.BaseProjectile.SetActive
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           Active                         (Parm, ZeroConstructor, IsPlainOldData)

void ABaseProjectile::SetActive(bool Active)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.BaseProjectile.SetActive");

	ABaseProjectile_SetActive_Params params;
	params.Active = Active;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.BaseProjectile.OnSetActive
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// bool                           Active                         (Parm, ZeroConstructor, IsPlainOldData)

void ABaseProjectile::OnSetActive(bool Active)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.BaseProjectile.OnSetActive");

	ABaseProjectile_OnSetActive_Params params;
	params.Active = Active;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.BaseProjectile.OnRep_ProjectileLauncher
// (Final, Native, Private)

void ABaseProjectile::OnRep_ProjectileLauncher()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.BaseProjectile.OnRep_ProjectileLauncher");

	ABaseProjectile_OnRep_ProjectileLauncher_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.BaseProjectile.OnLaunch
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// struct FLaunchInfo             LaunchInfo                     (Parm)

void ABaseProjectile::OnLaunch(const struct FLaunchInfo& LaunchInfo)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.BaseProjectile.OnLaunch");

	ABaseProjectile_OnLaunch_Params params;
	params.LaunchInfo = LaunchInfo;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.BaseProjectile.OnInitialize
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// class UBaseProjectileLauncher* projectileLauncher             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void ABaseProjectile::OnInitialize(class UBaseProjectileLauncher* projectileLauncher)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.BaseProjectile.OnInitialize");

	ABaseProjectile_OnInitialize_Params params;
	params.projectileLauncher = projectileLauncher;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.BaseProjectile.OnDetectPlayer
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// struct FImpactInfo             ImpactInfo                     (Parm)

void ABaseProjectile::OnDetectPlayer(const struct FImpactInfo& ImpactInfo)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.BaseProjectile.OnDetectPlayer");

	ABaseProjectile_OnDetectPlayer_Params params;
	params.ImpactInfo = ImpactInfo;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.BaseProjectile.OnDetectCollision
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// struct FImpactInfo             ImpactInfo                     (Parm)

void ABaseProjectile::OnDetectCollision(const struct FImpactInfo& ImpactInfo)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.BaseProjectile.OnDetectCollision");

	ABaseProjectile_OnDetectCollision_Params params;
	params.ImpactInfo = ImpactInfo;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.BaseProjectile.Multicast_Launch
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private, NetValidate)
// Parameters:
// struct FLaunchInfo             LaunchInfo                     (Parm)

void ABaseProjectile::Multicast_Launch(const struct FLaunchInfo& LaunchInfo)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.BaseProjectile.Multicast_Launch");

	ABaseProjectile_Multicast_Launch_Params params;
	params.LaunchInfo = LaunchInfo;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.BaseProjectile.Multicast_DetectPlayer
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private, NetValidate)
// Parameters:
// struct FImpactInfo             ImpactInfo                     (Parm)

void ABaseProjectile::Multicast_DetectPlayer(const struct FImpactInfo& ImpactInfo)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.BaseProjectile.Multicast_DetectPlayer");

	ABaseProjectile_Multicast_DetectPlayer_Params params;
	params.ImpactInfo = ImpactInfo;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.BaseProjectile.Multicast_DetectImpact
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private, NetValidate)
// Parameters:
// struct FImpactInfo             ImpactInfo                     (Parm)

void ABaseProjectile::Multicast_DetectImpact(const struct FImpactInfo& ImpactInfo)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.BaseProjectile.Multicast_DetectImpact");

	ABaseProjectile_Multicast_DetectImpact_Params params;
	params.ImpactInfo = ImpactInfo;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.BaseProjectile.LineTraceSingle
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                 Start                          (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 End                            (Parm, ZeroConstructor, IsPlainOldData)
// struct FHitResult              outHitResult                   (Parm, OutParm, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ABaseProjectile::LineTraceSingle(const struct FVector& Start, const struct FVector& End, struct FHitResult* outHitResult)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.BaseProjectile.LineTraceSingle");

	ABaseProjectile_LineTraceSingle_Params params;
	params.Start = Start;
	params.End = End;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (outHitResult != nullptr)
		*outHitResult = params.outHitResult;

	return params.ReturnValue;
}


// Function DeadByDaylight.BaseProjectile.IsValidPlayerDetection
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// struct FImpactInfo             ImpactInfo                     (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ABaseProjectile::IsValidPlayerDetection(const struct FImpactInfo& ImpactInfo)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.BaseProjectile.IsValidPlayerDetection");

	ABaseProjectile_IsValidPlayerDetection_Params params;
	params.ImpactInfo = ImpactInfo;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.BaseProjectile.IsValidImpactDetection
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// struct FImpactInfo             ImpactInfo                     (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ABaseProjectile::IsValidImpactDetection(const struct FImpactInfo& ImpactInfo)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.BaseProjectile.IsValidImpactDetection");

	ABaseProjectile_IsValidImpactDetection_Params params;
	params.ImpactInfo = ImpactInfo;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.BaseProjectile.IsAvailable
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ABaseProjectile::IsAvailable()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.BaseProjectile.IsAvailable");

	ABaseProjectile_IsAvailable_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.BaseProjectile.IsActive
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ABaseProjectile::IsActive()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.BaseProjectile.IsActive");

	ABaseProjectile_IsActive_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.BaseProjectile.GetProjectileLauncher
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UBaseProjectileLauncher* ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UBaseProjectileLauncher* ABaseProjectile::GetProjectileLauncher()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.BaseProjectile.GetProjectileLauncher");

	ABaseProjectile_GetProjectileLauncher_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.BaseProjectile.GetImpactPrimitiveComponent
// (Native, Event, Protected, BlueprintEvent, Const)
// Parameters:
// class UPrimitiveComponent*     ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UPrimitiveComponent* ABaseProjectile::GetImpactPrimitiveComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.BaseProjectile.GetImpactPrimitiveComponent");

	ABaseProjectile_GetImpactPrimitiveComponent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.BaseProjectile.GetImpactCollisionResponseContainer
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// struct FCollisionResponseContainer ReturnValue                    (Parm, OutParm, ReturnParm)

struct FCollisionResponseContainer ABaseProjectile::GetImpactCollisionResponseContainer()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.BaseProjectile.GetImpactCollisionResponseContainer");

	ABaseProjectile_GetImpactCollisionResponseContainer_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.BaseProjectile.GetImpactCollisionObjectType
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// TEnumAsByte<ECollisionChannel> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

TEnumAsByte<ECollisionChannel> ABaseProjectile::GetImpactCollisionObjectType()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.BaseProjectile.GetImpactCollisionObjectType");

	ABaseProjectile_GetImpactCollisionObjectType_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.BaseProjectile.Authority_TryDetectPlayer
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// struct FImpactInfo             ImpactInfo                     (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ABaseProjectile::Authority_TryDetectPlayer(const struct FImpactInfo& ImpactInfo)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.BaseProjectile.Authority_TryDetectPlayer");

	ABaseProjectile_Authority_TryDetectPlayer_Params params;
	params.ImpactInfo = ImpactInfo;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.BaseProjectile.Authority_TryDetectCollision
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// struct FImpactInfo             ImpactInfo                     (Parm)
// bool                           Force                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ABaseProjectile::Authority_TryDetectCollision(const struct FImpactInfo& ImpactInfo, bool Force)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.BaseProjectile.Authority_TryDetectCollision");

	ABaseProjectile_Authority_TryDetectCollision_Params params;
	params.ImpactInfo = ImpactInfo;
	params.Force = Force;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.BaseProjectile.Authority_Launch
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// struct FLaunchInfo             LaunchInfo                     (Parm)

void ABaseProjectile::Authority_Launch(const struct FLaunchInfo& LaunchInfo)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.BaseProjectile.Authority_Launch");

	ABaseProjectile_Authority_Launch_Params params;
	params.LaunchInfo = LaunchInfo;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.Fadeable.OnFadeEnd
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                  Other                          (Parm, ZeroConstructor, IsPlainOldData)

void UFadeable::OnFadeEnd(class AActor* Other)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.Fadeable.OnFadeEnd");

	UFadeable_OnFadeEnd_Params params;
	params.Other = Other;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.Fadeable.OnFadeBegin
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                  Other                          (Parm, ZeroConstructor, IsPlainOldData)

void UFadeable::OnFadeBegin(class AActor* Other)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.Fadeable.OnFadeBegin");

	UFadeable_OnFadeBegin_Params params;
	params.Other = Other;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.Fadeable.OnAlphaChanged
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                          newAlpha                       (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  Other                          (Parm, ZeroConstructor, IsPlainOldData)

void UFadeable::OnAlphaChanged(float newAlpha, class AActor* Other)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.Fadeable.OnAlphaChanged");

	UFadeable_OnAlphaChanged_Params params;
	params.newAlpha = newAlpha;
	params.Other = Other;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.BaseSky.SetCullDistance
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// float                          NewCullDistance                (Parm, ZeroConstructor, IsPlainOldData)

void ABaseSky::SetCullDistance(float NewCullDistance)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.BaseSky.SetCullDistance");

	ABaseSky_SetCullDistance_Params params;
	params.NewCullDistance = NewCullDistance;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.BaseSky.OnFadeEnd
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                  Other                          (Parm, ZeroConstructor, IsPlainOldData)

void ABaseSky::OnFadeEnd(class AActor* Other)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.BaseSky.OnFadeEnd");

	ABaseSky_OnFadeEnd_Params params;
	params.Other = Other;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.BaseSky.OnFadeBegin
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                  Other                          (Parm, ZeroConstructor, IsPlainOldData)

void ABaseSky::OnFadeBegin(class AActor* Other)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.BaseSky.OnFadeBegin");

	ABaseSky_OnFadeBegin_Params params;
	params.Other = Other;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.BaseSky.OnAlphaChanged
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                          newAlpha                       (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  Other                          (Parm, ZeroConstructor, IsPlainOldData)

void ABaseSky::OnAlphaChanged(float newAlpha, class AActor* Other)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.BaseSky.OnAlphaChanged");

	ABaseSky_OnAlphaChanged_Params params;
	params.newAlpha = newAlpha;
	params.Other = Other;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.BaseSky.GetPostprocessComponent
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPostProcessComponent*   ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UPostProcessComponent* ABaseSky::GetPostprocessComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.BaseSky.GetPostprocessComponent");

	ABaseSky_GetPostprocessComponent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.BlinkerComponent.UpdateTargetLocation
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// class ADBDPlayer*              Player                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          blinkDistance                  (Parm, ZeroConstructor, IsPlainOldData)
// TArray<float>                  scanPercentLocations           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FVector UBlinkerComponent::UpdateTargetLocation(class ADBDPlayer* Player, float blinkDistance, TArray<float> scanPercentLocations)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.BlinkerComponent.UpdateTargetLocation");

	UBlinkerComponent_UpdateTargetLocation_Params params;
	params.Player = Player;
	params.blinkDistance = blinkDistance;
	params.scanPercentLocations = scanPercentLocations;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.BlinkerComponent.SetBlinkerState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<EBlinkerState>     blinkerState                   (Parm, ZeroConstructor, IsPlainOldData)

void UBlinkerComponent::SetBlinkerState(TEnumAsByte<EBlinkerState> blinkerState)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.BlinkerComponent.SetBlinkerState");

	UBlinkerComponent_SetBlinkerState_Params params;
	params.blinkerState = blinkerState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.BlinkerComponent.LocalAddRandomToTargetLocation
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class ADBDPlayer*              Player                         (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 TargetLocation                 (Parm, ZeroConstructor, IsPlainOldData)
// float                          Distance                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FVector UBlinkerComponent::LocalAddRandomToTargetLocation(class ADBDPlayer* Player, const struct FVector& TargetLocation, float Distance)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.BlinkerComponent.LocalAddRandomToTargetLocation");

	UBlinkerComponent_LocalAddRandomToTargetLocation_Params params;
	params.Player = Player;
	params.TargetLocation = TargetLocation;
	params.Distance = Distance;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.BlinkerComponent.IsReady
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UBlinkerComponent::IsReady()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.BlinkerComponent.IsReady");

	UBlinkerComponent_IsReady_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.BlinkerComponent.GetBlinkerState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TEnumAsByte<EBlinkerState>     ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

TEnumAsByte<EBlinkerState> UBlinkerComponent::GetBlinkerState()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.BlinkerComponent.GetBlinkerState");

	UBlinkerComponent_GetBlinkerState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.BlinkerComponent.GetAutomaticBlinkDelay
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            chainBlinkCount                (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UBlinkerComponent::GetAutomaticBlinkDelay(int chainBlinkCount)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.BlinkerComponent.GetAutomaticBlinkDelay");

	UBlinkerComponent_GetAutomaticBlinkDelay_Params params;
	params.chainBlinkCount = chainBlinkCount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.BloodwebManager.Init
// (Final, Native, Public)
// Parameters:
// class UDBDGameInstance*        GameInstance                   (Parm, ZeroConstructor, IsPlainOldData)
// class UDBDDesignTunables*      Tunables                       (Parm, ZeroConstructor, IsPlainOldData)

void UBloodwebManager::Init(class UDBDGameInstance* GameInstance, class UDBDDesignTunables* Tunables)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.BloodwebManager.Init");

	UBloodwebManager_Init_Params params;
	params.GameInstance = GameInstance;
	params.Tunables = Tunables;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayerData.SetLoadoutSpawned
// (Final, Native, Public)

void UDBDPlayerData::SetLoadoutSpawned()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayerData.SetLoadoutSpawned");

	UDBDPlayerData_SetLoadoutSpawned_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayerData.SetLightSpawned
// (Final, Native, Public)

void UDBDPlayerData::SetLightSpawned()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayerData.SetLightSpawned");

	UDBDPlayerData_SetLightSpawned_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayerData.SetIntroCompleted
// (Final, Native, Public)

void UDBDPlayerData::SetIntroCompleted()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayerData.SetIntroCompleted");

	UDBDPlayerData_SetIntroCompleted_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayerData.Server_SetIntroCompleted
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)

void UDBDPlayerData::Server_SetIntroCompleted()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayerData.Server_SetIntroCompleted");

	UDBDPlayerData_Server_SetIntroCompleted_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayerData.Server_SetControlRotation
// (Net, Native, Event, Public, NetServer, HasDefaults, NetValidate)
// Parameters:
// struct FRotator                Rotation                       (Parm, ZeroConstructor, IsPlainOldData)

void UDBDPlayerData::Server_SetControlRotation(const struct FRotator& Rotation)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayerData.Server_SetControlRotation");

	UDBDPlayerData_Server_SetControlRotation_Params params;
	params.Rotation = Rotation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayerData.Server_LoadoutSpawned
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)

void UDBDPlayerData::Server_LoadoutSpawned()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayerData.Server_LoadoutSpawned");

	UDBDPlayerData_Server_LoadoutSpawned_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayerData.Server_LightSpawned
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)

void UDBDPlayerData::Server_LightSpawned()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayerData.Server_LightSpawned");

	UDBDPlayerData_Server_LightSpawned_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayerData.IsLoadoutSpawned
// (Final, Native, Public, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UDBDPlayerData::IsLoadoutSpawned()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayerData.IsLoadoutSpawned");

	UDBDPlayerData_IsLoadoutSpawned_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDPlayerData.IsLightSpawned
// (Final, Native, Public, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UDBDPlayerData::IsLightSpawned()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayerData.IsLightSpawned");

	UDBDPlayerData_IsLightSpawned_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDPlayerData.IsIntroCompleted
// (Final, Native, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UDBDPlayerData::IsIntroCompleted()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayerData.IsIntroCompleted");

	UDBDPlayerData_IsIntroCompleted_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDPlayerData.GetUseInputPressed
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UDBDPlayerData::GetUseInputPressed()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayerData.GetUseInputPressed");

	UDBDPlayerData_GetUseInputPressed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDPlayerData.GetLeftRightInputMashed
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UDBDPlayerData::GetLeftRightInputMashed()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayerData.GetLeftRightInputMashed");

	UDBDPlayerData_GetLeftRightInputMashed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDPlayerData.GetInteractionInputMashed
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UDBDPlayerData::GetInteractionInputMashed()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayerData.GetInteractionInputMashed");

	UDBDPlayerData_GetInteractionInputMashed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDPlayerData.GetControlRotation
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FRotator                ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FRotator UDBDPlayerData::GetControlRotation()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayerData.GetControlRotation");

	UDBDPlayerData_GetControlRotation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDCamperData.GetDamageState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TEnumAsByte<ECamperDamageState> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

TEnumAsByte<ECamperDamageState> UDBDCamperData::GetDamageState()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCamperData.GetDamageState");

	UDBDCamperData_GetDamageState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDCamperData.DamageStateChanged
// (Final, Native, Private)

void UDBDCamperData::DamageStateChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCamperData.DamageStateChanged");

	UDBDCamperData_DamageStateChanged_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.CamperAnimInstance.NativeAudioSurvivorFootstepRight
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class UAkAudioEvent*           akEvent                        (Parm, ZeroConstructor, IsPlainOldData)
// class UAkAudioEvent*           akEventNoise                   (Parm, ZeroConstructor, IsPlainOldData)

void UCamperAnimInstance::NativeAudioSurvivorFootstepRight(class UAkAudioEvent* akEvent, class UAkAudioEvent* akEventNoise)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperAnimInstance.NativeAudioSurvivorFootstepRight");

	UCamperAnimInstance_NativeAudioSurvivorFootstepRight_Params params;
	params.akEvent = akEvent;
	params.akEventNoise = akEventNoise;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.CamperAnimInstance.NativeAudioSurvivorFootstepLeft
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class UAkAudioEvent*           akEvent                        (Parm, ZeroConstructor, IsPlainOldData)
// class UAkAudioEvent*           akEventNoise                   (Parm, ZeroConstructor, IsPlainOldData)

void UCamperAnimInstance::NativeAudioSurvivorFootstepLeft(class UAkAudioEvent* akEvent, class UAkAudioEvent* akEventNoise)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperAnimInstance.NativeAudioSurvivorFootstepLeft");

	UCamperAnimInstance_NativeAudioSurvivorFootstepLeft_Params params;
	params.akEvent = akEvent;
	params.akEventNoise = akEventNoise;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.CamperAnimInstance.IsUsingDeadHard
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UCamperAnimInstance::IsUsingDeadHard()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperAnimInstance.IsUsingDeadHard");

	UCamperAnimInstance_IsUsingDeadHard_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.CamperExposerInstance.StartSpawnSequence
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void ACamperExposerInstance::StartSpawnSequence()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperExposerInstance.StartSpawnSequence");

	ACamperExposerInstance_StartSpawnSequence_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.CamperExposerInstance.StartExitSequence
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void ACamperExposerInstance::StartExitSequence()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperExposerInstance.StartExitSequence");

	ACamperExposerInstance_StartExitSequence_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.CamperExposerInstance.SetIsInteriorBP
// (Event, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                           interior                       (Parm, ZeroConstructor, IsPlainOldData)

void ACamperExposerInstance::SetIsInteriorBP(bool interior)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperExposerInstance.SetIsInteriorBP");

	ACamperExposerInstance_SetIsInteriorBP_Params params;
	params.interior = interior;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.CamperExposerInstance.ExitSequenceComplete
// (Final, Native, Public, BlueprintCallable)

void ACamperExposerInstance::ExitSequenceComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperExposerInstance.ExitSequenceComplete");

	ACamperExposerInstance_ExitSequenceComplete_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.CharacterDreamworldComponent.UpdateCharacterCollision
// (Final, Native, Private)

void UCharacterDreamworldComponent::UpdateCharacterCollision()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CharacterDreamworldComponent.UpdateCharacterCollision");

	UCharacterDreamworldComponent_UpdateCharacterCollision_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.CharacterDreamworldComponent.ShouldShowVignette
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UCharacterDreamworldComponent::ShouldShowVignette()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CharacterDreamworldComponent.ShouldShowVignette");

	UCharacterDreamworldComponent_ShouldShowVignette_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.CharacterDreamworldComponent.ShouldShowKillerGlimpse
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UCharacterDreamworldComponent::ShouldShowKillerGlimpse()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CharacterDreamworldComponent.ShouldShowKillerGlimpse");

	UCharacterDreamworldComponent_ShouldShowKillerGlimpse_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.CharacterDreamworldComponent.ShouldLookSleepyToLocalPlayer
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UCharacterDreamworldComponent::ShouldLookSleepyToLocalPlayer()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CharacterDreamworldComponent.ShouldLookSleepyToLocalPlayer");

	UCharacterDreamworldComponent_ShouldLookSleepyToLocalPlayer_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.CharacterDreamworldComponent.Server_WakeUp
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void UCharacterDreamworldComponent::Server_WakeUp()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CharacterDreamworldComponent.Server_WakeUp");

	UCharacterDreamworldComponent_Server_WakeUp_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.CharacterDreamworldComponent.Server_PutToSleep
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void UCharacterDreamworldComponent::Server_PutToSleep()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CharacterDreamworldComponent.Server_PutToSleep");

	UCharacterDreamworldComponent_Server_PutToSleep_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.CharacterDreamworldComponent.OnSlasherSet
// (Final, Native, Private)

void UCharacterDreamworldComponent::OnSlasherSet()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CharacterDreamworldComponent.OnSlasherSet");

	UCharacterDreamworldComponent_OnSlasherSet_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.CharacterDreamworldComponent.OnRep_IsInDreamworld
// (Final, Native, Private)
// Parameters:
// bool                           Previous                       (Parm, ZeroConstructor, IsPlainOldData)

void UCharacterDreamworldComponent::OnRep_IsInDreamworld(bool Previous)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CharacterDreamworldComponent.OnRep_IsInDreamworld");

	UCharacterDreamworldComponent_OnRep_IsInDreamworld_Params params;
	params.Previous = Previous;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.CharacterDreamworldComponent.OnKillerDreamStateChanged
// (Final, Native, Private)
// Parameters:
// bool                           locallyObservedChanged         (Parm, ZeroConstructor, IsPlainOldData)

void UCharacterDreamworldComponent::OnKillerDreamStateChanged(bool locallyObservedChanged)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CharacterDreamworldComponent.OnKillerDreamStateChanged");

	UCharacterDreamworldComponent_OnKillerDreamStateChanged_Params params;
	params.locallyObservedChanged = locallyObservedChanged;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.CharacterDreamworldComponent.IsInDreamworld
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UCharacterDreamworldComponent::IsInDreamworld()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CharacterDreamworldComponent.IsInDreamworld");

	UCharacterDreamworldComponent_IsInDreamworld_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.CharacterDreamworldComponent.IsInBetweenWorlds
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UCharacterDreamworldComponent::IsInBetweenWorlds()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CharacterDreamworldComponent.IsInBetweenWorlds");

	UCharacterDreamworldComponent_IsInBetweenWorlds_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.CharacterDreamworldComponent.GetLocallyObservedOrLocalCharacter
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// class ADBDPlayer*              ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ADBDPlayer* UCharacterDreamworldComponent::STATIC_GetLocallyObservedOrLocalCharacter(class UObject* WorldContextObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CharacterDreamworldComponent.GetLocallyObservedOrLocalCharacter");

	UCharacterDreamworldComponent_GetLocallyObservedOrLocalCharacter_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.CharacterDreamworldComponent.GetInBetweenWorldsPercentTimeElapsed
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UCharacterDreamworldComponent::GetInBetweenWorldsPercentTimeElapsed()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CharacterDreamworldComponent.GetInBetweenWorldsPercentTimeElapsed");

	UCharacterDreamworldComponent_GetInBetweenWorldsPercentTimeElapsed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.CharacterDreamworldComponent.FireWakeUpScoreEvent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ADBDPlayer*              Instigator                     (Parm, ZeroConstructor, IsPlainOldData)

void UCharacterDreamworldComponent::FireWakeUpScoreEvent(class ADBDPlayer* Instigator)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CharacterDreamworldComponent.FireWakeUpScoreEvent");

	UCharacterDreamworldComponent_FireWakeUpScoreEvent_Params params;
	params.Instigator = Instigator;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.CharacterDreamworldComponent.Authority_WakeUpOrCancelTransition
// (Final, Native, Public)
// Parameters:
// class ADBDPlayer*              Instigator                     (Parm, ZeroConstructor, IsPlainOldData)

void UCharacterDreamworldComponent::Authority_WakeUpOrCancelTransition(class ADBDPlayer* Instigator)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CharacterDreamworldComponent.Authority_WakeUpOrCancelTransition");

	UCharacterDreamworldComponent_Authority_WakeUpOrCancelTransition_Params params;
	params.Instigator = Instigator;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.CharacterDreamworldComponent.Authority_SpawnInBetweenWorldsEffect
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)

void UCharacterDreamworldComponent::Authority_SpawnInBetweenWorldsEffect()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CharacterDreamworldComponent.Authority_SpawnInBetweenWorldsEffect");

	UCharacterDreamworldComponent_Authority_SpawnInBetweenWorldsEffect_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.CharacterDreamworldComponent.Authority_SpawnDreamworldStatusEffect
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)

void UCharacterDreamworldComponent::Authority_SpawnDreamworldStatusEffect()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CharacterDreamworldComponent.Authority_SpawnDreamworldStatusEffect");

	UCharacterDreamworldComponent_Authority_SpawnDreamworldStatusEffect_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.CharacterDreamworldComponent.Authority_SetIsInDreamworld
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// bool                           NewValue                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           isScripted                     (Parm, ZeroConstructor, IsPlainOldData)

void UCharacterDreamworldComponent::Authority_SetIsInDreamworld(bool NewValue, bool isScripted)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CharacterDreamworldComponent.Authority_SetIsInDreamworld");

	UCharacterDreamworldComponent_Authority_SetIsInDreamworld_Params params;
	params.NewValue = NewValue;
	params.isScripted = isScripted;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.CharacterDreamworldComponent.Authority_OnAttacked
// (Final, Native, Private)

void UCharacterDreamworldComponent::Authority_OnAttacked()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CharacterDreamworldComponent.Authority_OnAttacked");

	UCharacterDreamworldComponent_Authority_OnAttacked_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.CharacterDreamworldComponent.Authority_HandleSkillCheckFailure
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// bool                           wakeUpEveryoneInteracting      (Parm, ZeroConstructor, IsPlainOldData)
// class ADBDPlayer*              Instigator                     (Parm, ZeroConstructor, IsPlainOldData)

void UCharacterDreamworldComponent::Authority_HandleSkillCheckFailure(bool wakeUpEveryoneInteracting, class ADBDPlayer* Instigator)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CharacterDreamworldComponent.Authority_HandleSkillCheckFailure");

	UCharacterDreamworldComponent_Authority_HandleSkillCheckFailure_Params params;
	params.wakeUpEveryoneInteracting = wakeUpEveryoneInteracting;
	params.Instigator = Instigator;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.CharacterDreamworldComponent.Authority_GetWakeUpBySkillCheckCount
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UCharacterDreamworldComponent::Authority_GetWakeUpBySkillCheckCount()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CharacterDreamworldComponent.Authority_GetWakeUpBySkillCheckCount");

	UCharacterDreamworldComponent_Authority_GetWakeUpBySkillCheckCount_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.CharacterDreamworldComponent.Authority_GetFellAsleepCount
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UCharacterDreamworldComponent::Authority_GetFellAsleepCount()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CharacterDreamworldComponent.Authority_GetFellAsleepCount");

	UCharacterDreamworldComponent_Authority_GetFellAsleepCount_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.CharacterStatsHandlerComponent.ReceiveGameEvent
// (Final, Native, Public)
// Parameters:
// TEnumAsByte<EDBDScoreTypes>    ScoreType                      (Parm, ZeroConstructor, IsPlainOldData)
// float                          amount                         (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  Instigator                     (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  Target                         (Parm, ZeroConstructor, IsPlainOldData)

void UCharacterStatsHandlerComponent::ReceiveGameEvent(TEnumAsByte<EDBDScoreTypes> ScoreType, float amount, class AActor* Instigator, class AActor* Target)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CharacterStatsHandlerComponent.ReceiveGameEvent");

	UCharacterStatsHandlerComponent_ReceiveGameEvent_Params params;
	params.ScoreType = ScoreType;
	params.amount = amount;
	params.Instigator = Instigator;
	params.Target = Target;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.CharacterStatsHandlerComponent.InitializePreMatchStats
// (Final, Native, Private)

void UCharacterStatsHandlerComponent::InitializePreMatchStats()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CharacterStatsHandlerComponent.InitializePreMatchStats");

	UCharacterStatsHandlerComponent_InitializePreMatchStats_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.CharacterStatsHandlerComponent.GetStatValue
// (Final, Native, Static, Public)
// Parameters:
// struct FName                   StatName                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           isCharacterSpecific            (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UCharacterStatsHandlerComponent::STATIC_GetStatValue(const struct FName& StatName, bool isCharacterSpecific)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CharacterStatsHandlerComponent.GetStatValue");

	UCharacterStatsHandlerComponent_GetStatValue_Params params;
	params.StatName = StatName;
	params.isCharacterSpecific = isCharacterSpecific;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.ChargeableComponent.SetSecondsToCharge
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          SecondsToCharge                (Parm, ZeroConstructor, IsPlainOldData)

void UChargeableComponent::SetSecondsToCharge(float SecondsToCharge)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.ChargeableComponent.SetSecondsToCharge");

	UChargeableComponent_SetSecondsToCharge_Params params;
	params.SecondsToCharge = SecondsToCharge;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.ChargeableComponent.Reset
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)

void UChargeableComponent::Reset()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.ChargeableComponent.Reset");

	UChargeableComponent_Reset_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.ChargeableComponent.Multicast_UpdateChargeAndSpeed
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
// Parameters:
// float                          charge                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          Speed                          (Parm, ZeroConstructor, IsPlainOldData)

void UChargeableComponent::Multicast_UpdateChargeAndSpeed(float charge, float Speed)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.ChargeableComponent.Multicast_UpdateChargeAndSpeed");

	UChargeableComponent_Multicast_UpdateChargeAndSpeed_Params params;
	params.charge = charge;
	params.Speed = Speed;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.ChargeableComponent.Multicast_OnEmptied
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private, Const)

void UChargeableComponent::Multicast_OnEmptied()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.ChargeableComponent.Multicast_OnEmptied");

	UChargeableComponent_Multicast_OnEmptied_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.ChargeableComponent.Multicast_OnCompleteChanged
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private, Const)
// Parameters:
// bool                           COMPLETED                      (Parm, ZeroConstructor, IsPlainOldData)

void UChargeableComponent::Multicast_OnCompleteChanged(bool COMPLETED)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.ChargeableComponent.Multicast_OnCompleteChanged");

	UChargeableComponent_Multicast_OnCompleteChanged_Params params;
	params.COMPLETED = COMPLETED;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.ChargeableComponent.IsSkillCheckTimePenaltyActive
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UChargeableComponent::IsSkillCheckTimePenaltyActive()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.ChargeableComponent.IsSkillCheckTimePenaltyActive");

	UChargeableComponent_IsSkillCheckTimePenaltyActive_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.ChargeableComponent.HasPlayerDoneSkillCheck
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            PlayerId                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UChargeableComponent::HasPlayerDoneSkillCheck(int PlayerId)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.ChargeableComponent.HasPlayerDoneSkillCheck");

	UChargeableComponent_HasPlayerDoneSkillCheck_Params params;
	params.PlayerId = PlayerId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.ChargeableComponent.GetTunableValue
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FName                   TunableValueID                 (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UChargeableComponent::GetTunableValue(const struct FName& TunableValueID)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.ChargeableComponent.GetTunableValue");

	UChargeableComponent_GetTunableValue_Params params;
	params.TunableValueID = TunableValueID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.ChargeableComponent.GetPercentComplete
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UChargeableComponent::GetPercentComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.ChargeableComponent.GetPercentComplete");

	UChargeableComponent_GetPercentComplete_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.ChargeableComponent.GetMaxCharge
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UChargeableComponent::GetMaxCharge()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.ChargeableComponent.GetMaxCharge");

	UChargeableComponent_GetMaxCharge_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.ChargeableComponent.GetCurrentCharge
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UChargeableComponent::GetCurrentCharge()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.ChargeableComponent.GetCurrentCharge");

	UChargeableComponent_GetCurrentCharge_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.ChargeableComponent.GetComplete
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UChargeableComponent::GetComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.ChargeableComponent.GetComplete");

	UChargeableComponent_GetComplete_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.ChargeableComponent.GetChargeRemaining
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UChargeableComponent::GetChargeRemaining()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.ChargeableComponent.GetChargeRemaining");

	UChargeableComponent_GetChargeRemaining_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.ChargeableComponent.AddChargePercent
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// float                          ChargePercent                  (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  Instigator                     (Parm, ZeroConstructor, IsPlainOldData)

void UChargeableComponent::AddChargePercent(float ChargePercent, class AActor* Instigator)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.ChargeableComponent.AddChargePercent");

	UChargeableComponent_AddChargePercent_Params params;
	params.ChargePercent = ChargePercent;
	params.Instigator = Instigator;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.ChargeableComponent.AddCharge
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// float                          ChargeAmount                   (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  Instigator                     (Parm, ZeroConstructor, IsPlainOldData)

void UChargeableComponent::AddCharge(float ChargeAmount, class AActor* Instigator)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.ChargeableComponent.AddCharge");

	UChargeableComponent_AddCharge_Params params;
	params.ChargeAmount = ChargeAmount;
	params.Instigator = Instigator;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.ChargerComponent.UseEnergy
// (BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// float                          seconds                        (Parm, ZeroConstructor, IsPlainOldData)
// float                          energyUseModifier              (Parm, ZeroConstructor, IsPlainOldData)

void UChargerComponent::UseEnergy(float seconds, float energyUseModifier)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.ChargerComponent.UseEnergy");

	UChargerComponent_UseEnergy_Params params;
	params.seconds = seconds;
	params.energyUseModifier = energyUseModifier;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.ChargerComponent.SetNormalizedEnergyLevel
// (Native, Public, BlueprintCallable)
// Parameters:
// float                          energyLevel                    (Parm, ZeroConstructor, IsPlainOldData)

void UChargerComponent::SetNormalizedEnergyLevel(float energyLevel)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.ChargerComponent.SetNormalizedEnergyLevel");

	UChargerComponent_SetNormalizedEnergyLevel_Params params;
	params.energyLevel = energyLevel;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.ChargerComponent.SetMaxEnergyLevel
// (Native, Public, BlueprintCallable)
// Parameters:
// float                          energyLevel                    (Parm, ZeroConstructor, IsPlainOldData)

void UChargerComponent::SetMaxEnergyLevel(float energyLevel)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.ChargerComponent.SetMaxEnergyLevel");

	UChargerComponent_SetMaxEnergyLevel_Params params;
	params.energyLevel = energyLevel;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.ChargerComponent.SetEnergyLevel
// (Native, Public, BlueprintCallable)
// Parameters:
// float                          energyLevel                    (Parm, ZeroConstructor, IsPlainOldData)

void UChargerComponent::SetEnergyLevel(float energyLevel)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.ChargerComponent.SetEnergyLevel");

	UChargerComponent_SetEnergyLevel_Params params;
	params.energyLevel = energyLevel;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.ChargerComponent.Reset
// (Final, Native, Public, BlueprintCallable)

void UChargerComponent::Reset()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.ChargerComponent.Reset");

	UChargerComponent_Reset_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.ChargerComponent.OnRep_EnergyLevel
// (Final, Native, Private)
// Parameters:
// float                          previousEnergyLevel            (Parm, ZeroConstructor, IsPlainOldData)

void UChargerComponent::OnRep_EnergyLevel(float previousEnergyLevel)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.ChargerComponent.OnRep_EnergyLevel");

	UChargerComponent_OnRep_EnergyLevel_Params params;
	params.previousEnergyLevel = previousEnergyLevel;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.ChargerComponent.HasCharge
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UChargerComponent::HasCharge()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.ChargerComponent.HasCharge");

	UChargerComponent_HasCharge_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.ChargerComponent.GetNormalizedEnergyLevel
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UChargerComponent::GetNormalizedEnergyLevel()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.ChargerComponent.GetNormalizedEnergyLevel");

	UChargerComponent_GetNormalizedEnergyLevel_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.ChargerComponent.GetMaxEnergyLevel
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UChargerComponent::GetMaxEnergyLevel()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.ChargerComponent.GetMaxEnergyLevel");

	UChargerComponent_GetMaxEnergyLevel_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.ChargerComponent.GetEnergyLevel
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UChargerComponent::GetEnergyLevel()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.ChargerComponent.GetEnergyLevel");

	UChargerComponent_GetEnergyLevel_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.ChatManager.Multicast_DisplayMessage
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// int                            playerIndex                    (Parm, ZeroConstructor, IsPlainOldData)
// class FString                  PlayerName                     (Parm, ZeroConstructor)
// class FString                  msg                            (Parm, ZeroConstructor)

void AChatManager::Multicast_DisplayMessage(int playerIndex, const class FString& PlayerName, const class FString& msg)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.ChatManager.Multicast_DisplayMessage");

	AChatManager_Multicast_DisplayMessage_Params params;
	params.playerIndex = playerIndex;
	params.PlayerName = PlayerName;
	params.msg = msg;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDClipRegionComponent.NotifyShouldClipComponent
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UMeshComponent*          InMeshComponent                (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UDBDClipRegionComponent::NotifyShouldClipComponent(class UMeshComponent* InMeshComponent)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDClipRegionComponent.NotifyShouldClipComponent");

	UDBDClipRegionComponent_NotifyShouldClipComponent_Params params;
	params.InMeshComponent = InMeshComponent;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDClipRegionComponent.ClipDistance
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UMeshComponent*          InMeshComponent                (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UDBDClipRegionComponent::ClipDistance(class UMeshComponent* InMeshComponent)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDClipRegionComponent.ClipDistance");

	UDBDClipRegionComponent_ClipDistance_Params params;
	params.InMeshComponent = InMeshComponent;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDClipRegionComponent.ApplyClipToDynamicMaterial
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UMaterialInstanceDynamic* dynamicInstanceToClip          (Parm, ZeroConstructor, IsPlainOldData)
// int                            InRegionID                     (Parm, ZeroConstructor, IsPlainOldData)

void UDBDClipRegionComponent::ApplyClipToDynamicMaterial(class UMaterialInstanceDynamic* dynamicInstanceToClip, int InRegionID)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDClipRegionComponent.ApplyClipToDynamicMaterial");

	UDBDClipRegionComponent_ApplyClipToDynamicMaterial_Params params;
	params.dynamicInstanceToClip = dynamicInstanceToClip;
	params.InRegionID = InRegionID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDClipRegionComponent.ApplyClip
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UMaterialInstanceDynamic* InMaterial2clip                (Parm, ZeroConstructor, IsPlainOldData)
// int                            InRegionID                     (Parm, ZeroConstructor, IsPlainOldData)

void UDBDClipRegionComponent::ApplyClip(class UMaterialInstanceDynamic* InMaterial2clip, int InRegionID)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDClipRegionComponent.ApplyClip");

	UDBDClipRegionComponent_ApplyClip_Params params;
	params.InMaterial2clip = InMaterial2clip;
	params.InRegionID = InRegionID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDClipRegionComponent.ApplyArrayOfClipsToDynamicMaterial
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TArray<class UDBDClipRegionComponent*> InRegions                      (Parm, ZeroConstructor)
// class UMaterialInstanceDynamic* dynamicInstanceToClip          (Parm, ZeroConstructor, IsPlainOldData)

void UDBDClipRegionComponent::STATIC_ApplyArrayOfClipsToDynamicMaterial(TArray<class UDBDClipRegionComponent*> InRegions, class UMaterialInstanceDynamic* dynamicInstanceToClip)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDClipRegionComponent.ApplyArrayOfClipsToDynamicMaterial");

	UDBDClipRegionComponent_ApplyArrayOfClipsToDynamicMaterial_Params params;
	params.InRegions = InRegions;
	params.dynamicInstanceToClip = dynamicInstanceToClip;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.ClipManager.SphericalDissolveAt
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                 Location                       (Parm, ZeroConstructor, IsPlainOldData)
// float                          Radius                         (Parm, ZeroConstructor, IsPlainOldData)

void AClipManager::SphericalDissolveAt(const struct FVector& Location, float Radius)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.ClipManager.SphericalDissolveAt");

	AClipManager_SphericalDissolveAt_Params params;
	params.Location = Location;
	params.Radius = Radius;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.ClipManager.RemoveDissolveMaterials
// (Final, Native, Public, BlueprintCallable)

void AClipManager::RemoveDissolveMaterials()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.ClipManager.RemoveDissolveMaterials");

	AClipManager_RemoveDissolveMaterials_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.ClosetAnalytics.RecordClosetSearchSuccess
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class ASlasherPlayer*          killer                         (Parm, ZeroConstructor, IsPlainOldData)

void UClosetAnalytics::STATIC_RecordClosetSearchSuccess(class ASlasherPlayer* killer)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.ClosetAnalytics.RecordClosetSearchSuccess");

	UClosetAnalytics_RecordClosetSearchSuccess_Params params;
	params.killer = killer;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.ClosetAnalytics.RecordClosetSearchFail
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class ASlasherPlayer*          killer                         (Parm, ZeroConstructor, IsPlainOldData)

void UClosetAnalytics::STATIC_RecordClosetSearchFail(class ASlasherPlayer* killer)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.ClosetAnalytics.RecordClosetSearchFail");

	UClosetAnalytics_RecordClosetSearchFail_Params params;
	params.killer = killer;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.ClosetAnalytics.IncrementClosetEnter
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class ACamperPlayer*           survivor                       (Parm, ZeroConstructor, IsPlainOldData)

void UClosetAnalytics::STATIC_IncrementClosetEnter(class ACamperPlayer* survivor)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.ClosetAnalytics.IncrementClosetEnter");

	UClosetAnalytics_IncrementClosetEnter_Params params;
	params.survivor = survivor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.CustomizedSkeletalMesh.SetVfxsVisibility
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<ECustomizationCategory> Category                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           Visible                        (Parm, ZeroConstructor, IsPlainOldData)

void UCustomizedSkeletalMesh::SetVfxsVisibility(TEnumAsByte<ECustomizationCategory> Category, bool Visible)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CustomizedSkeletalMesh.SetVfxsVisibility");

	UCustomizedSkeletalMesh_SetVfxsVisibility_Params params;
	params.Category = Category;
	params.Visible = Visible;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.CustomizedSkeletalMesh.SetMeshOwner
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class USkeletalMeshComponent*  Mesh                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UCustomizedSkeletalMesh::SetMeshOwner(class USkeletalMeshComponent* Mesh)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CustomizedSkeletalMesh.SetMeshOwner");

	UCustomizedSkeletalMesh_SetMeshOwner_Params params;
	params.Mesh = Mesh;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.CustomizedSkeletalMesh.SetAllVfxsVisibility
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           Visible                        (Parm, ZeroConstructor, IsPlainOldData)

void UCustomizedSkeletalMesh::SetAllVfxsVisibility(bool Visible)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CustomizedSkeletalMesh.SetAllVfxsVisibility");

	UCustomizedSkeletalMesh_SetAllVfxsVisibility_Params params;
	params.Visible = Visible;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.CustomizedSkeletalMesh.GetSkeletalMesh
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TEnumAsByte<ECustomizationCategory> Category                       (Parm, ZeroConstructor, IsPlainOldData)
// class USkeletalMeshComponent*  ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class USkeletalMeshComponent* UCustomizedSkeletalMesh::GetSkeletalMesh(TEnumAsByte<ECustomizationCategory> Category)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CustomizedSkeletalMesh.GetSkeletalMesh");

	UCustomizedSkeletalMesh_GetSkeletalMesh_Params params;
	params.Category = Category;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.CustomizedSkeletalMesh.GetMeshOwner
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class USkeletalMeshComponent*  ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class USkeletalMeshComponent* UCustomizedSkeletalMesh::GetMeshOwner()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CustomizedSkeletalMesh.GetMeshOwner");

	UCustomizedSkeletalMesh_GetMeshOwner_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.CustomizedSkeletalMesh.GetComponents
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class USkeletalMeshComponent*> ReturnValue                    (ConstParm, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

TArray<class USkeletalMeshComponent*> UCustomizedSkeletalMesh::GetComponents()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CustomizedSkeletalMesh.GetComponents");

	UCustomizedSkeletalMesh_GetComponents_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.CustomizedSkeletalMesh.CopyCustomization
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UCustomizedSkeletalMesh* copyFrom                       (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UCustomizedSkeletalMesh::CopyCustomization(class UCustomizedSkeletalMesh* copyFrom)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CustomizedSkeletalMesh.CopyCustomization");

	UCustomizedSkeletalMesh_CopyCustomization_Params params;
	params.copyFrom = copyFrom;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.CustomizedSkeletalMesh.ClearAllVfxs
// (Final, Native, Public, BlueprintCallable)

void UCustomizedSkeletalMesh::ClearAllVfxs()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CustomizedSkeletalMesh.ClearAllVfxs");

	UCustomizedSkeletalMesh_ClearAllVfxs_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBD_CrossDissolver.MakeClone
// (Final, Native, Public, BlueprintCallable)

void UDBD_CrossDissolver::MakeClone()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBD_CrossDissolver.MakeClone");

	UDBD_CrossDissolver_MakeClone_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBD_CrossDissolver.KillClone
// (Final, Native, Public, BlueprintCallable)

void UDBD_CrossDissolver::KillClone()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBD_CrossDissolver.KillClone");

	UDBD_CrossDissolver_KillClone_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBD_SoundClipUtil.OnGotMeshToTriggerSound
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UStaticMeshComponent*    usm                            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UDBD_SoundClipUtil::OnGotMeshToTriggerSound(class UStaticMeshComponent* usm)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBD_SoundClipUtil.OnGotMeshToTriggerSound");

	UDBD_SoundClipUtil_OnGotMeshToTriggerSound_Params params;
	params.usm = usm;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBD_SoundClipUtil.OnCharacterEnterSoundRegion
// (Final, Native, Protected, HasOutParms)
// Parameters:
// class UPrimitiveComponent*     HitComponent                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// int                            OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bFromSweep                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FHitResult              SweepResult                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void UDBD_SoundClipUtil::OnCharacterEnterSoundRegion(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBD_SoundClipUtil.OnCharacterEnterSoundRegion");

	UDBD_SoundClipUtil_OnCharacterEnterSoundRegion_Params params;
	params.HitComponent = HitComponent;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;
	params.bFromSweep = bFromSweep;
	params.SweepResult = SweepResult;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBD_SoundClipUtil.GetAudioEventForMesh
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class UStaticMeshComponent*    usm                            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class UAkAudioEvent*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UAkAudioEvent* UDBD_SoundClipUtil::GetAudioEventForMesh(class UStaticMeshComponent* usm)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBD_SoundClipUtil.GetAudioEventForMesh");

	UDBD_SoundClipUtil_GetAudioEventForMesh_Params params;
	params.usm = usm;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBD_SoundEventSpawner.OnSoundTriggered
// (Final, Native, Protected, HasDefaults)
// Parameters:
// class AActor*                  originator                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 Location                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           shouldTrack                    (Parm, ZeroConstructor, IsPlainOldData)
// float                          audibleRange                   (Parm, ZeroConstructor, IsPlainOldData)

void ADBD_SoundEventSpawner::OnSoundTriggered(class AActor* originator, const struct FVector& Location, bool shouldTrack, float audibleRange)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBD_SoundEventSpawner.OnSoundTriggered");

	ADBD_SoundEventSpawner_OnSoundTriggered_Params params;
	params.originator = originator;
	params.Location = Location;
	params.shouldTrack = shouldTrack;
	params.audibleRange = audibleRange;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBD_SoundEventSpawner.AssetsLoaded
// (Final, Native, Protected)

void ADBD_SoundEventSpawner::AssetsLoaded()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBD_SoundEventSpawner.AssetsLoaded");

	ADBD_SoundEventSpawner_AssetsLoaded_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBD_SpiderThing.RebuildLines
// (Final, Native, Protected, BlueprintCallable)

void ADBD_SpiderThing::RebuildLines()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBD_SpiderThing.RebuildLines");

	ADBD_SpiderThing_RebuildLines_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBD_SpiderThing.RandomTrace
// (Final, Native, Protected, HasOutParms, BlueprintCallable)
// Parameters:
// struct FHitResult              out_result                     (Parm, OutParm, IsPlainOldData)

void ADBD_SpiderThing::RandomTrace(struct FHitResult* out_result)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBD_SpiderThing.RandomTrace");

	ADBD_SpiderThing_RandomTrace_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (out_result != nullptr)
		*out_result = params.out_result;
}


// Function DeadByDaylight.DBD_SpiderThing.CreateLine
// (Final, Native, Protected, BlueprintCallable)

void ADBD_SpiderThing::CreateLine()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBD_SpiderThing.CreateLine");

	ADBD_SpiderThing_CreateLine_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBD_SpiderThingComponent.RebuildLines
// (Final, Native, Public, BlueprintCallable)

void UDBD_SpiderThingComponent::RebuildLines()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBD_SpiderThingComponent.RebuildLines");

	UDBD_SpiderThingComponent_RebuildLines_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBD_SpiderThingComponent.RandomTrace
// (Final, Native, Protected, HasOutParms, BlueprintCallable)
// Parameters:
// struct FHitResult              out_result                     (Parm, OutParm, IsPlainOldData)

void UDBD_SpiderThingComponent::RandomTrace(struct FHitResult* out_result)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBD_SpiderThingComponent.RandomTrace");

	UDBD_SpiderThingComponent_RandomTrace_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (out_result != nullptr)
		*out_result = params.out_result;
}


// Function DeadByDaylight.DBD_SpiderThingComponent.CreateLine
// (Final, Native, Protected, BlueprintCallable)

void UDBD_SpiderThingComponent::CreateLine()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBD_SpiderThingComponent.CreateLine");

	UDBD_SpiderThingComponent_CreateLine_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDAIPlayerController.StartCharacterBehaviour
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UClass*                  behaviourClass                 (Parm, ZeroConstructor, IsPlainOldData)
// class UAICharacterBehaviourData* characterBehaviourData         (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void ADBDAIPlayerController::StartCharacterBehaviour(class UClass* behaviourClass, class UAICharacterBehaviourData* characterBehaviourData)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDAIPlayerController.StartCharacterBehaviour");

	ADBDAIPlayerController_StartCharacterBehaviour_Params params;
	params.behaviourClass = behaviourClass;
	params.characterBehaviourData = characterBehaviourData;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDAIPlayerController.SetCharacterMovement
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<ECharacterMovementTypes> movementTypes                  (Parm, ZeroConstructor, IsPlainOldData)

void ADBDAIPlayerController::SetCharacterMovement(TEnumAsByte<ECharacterMovementTypes> movementTypes)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDAIPlayerController.SetCharacterMovement");

	ADBDAIPlayerController_SetCharacterMovement_Params params;
	params.movementTypes = movementTypes;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDAIPlayerController.PauseCharacterBehaviour
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UClass*                  behaviourClass                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void ADBDAIPlayerController::PauseCharacterBehaviour(class UClass* behaviourClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDAIPlayerController.PauseCharacterBehaviour");

	ADBDAIPlayerController_PauseCharacterBehaviour_Params params;
	params.behaviourClass = behaviourClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDAIPlayerController.InteractRequest
// (Final, Native, Public, BlueprintCallable)

void ADBDAIPlayerController::InteractRequest()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDAIPlayerController.InteractRequest");

	ADBDAIPlayerController_InteractRequest_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDAIPlayerController.FastInteractRequest
// (Final, Native, Public, BlueprintCallable)

void ADBDAIPlayerController::FastInteractRequest()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDAIPlayerController.FastInteractRequest");

	ADBDAIPlayerController_FastInteractRequest_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDAIPlayerController.AttackRequest
// (Final, Native, Public, BlueprintCallable)

void ADBDAIPlayerController::AttackRequest()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDAIPlayerController.AttackRequest");

	ADBDAIPlayerController_AttackRequest_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDAudioUtils.DBDLoadBank
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UAkAudioBank*            bank                           (Parm, ZeroConstructor, IsPlainOldData)

void ADBDAudioUtils::DBDLoadBank(class UAkAudioBank* bank)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDAudioUtils.DBDLoadBank");

	ADBDAudioUtils_DBDLoadBank_Params params;
	params.bank = bank;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDBaseHud.ShowVersionNumber
// (Final, Exec, Native, Public)
// Parameters:
// bool                           ShouldShow                     (Parm, ZeroConstructor, IsPlainOldData)

void ADBDBaseHud::ShowVersionNumber(bool ShouldShow)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDBaseHud.ShowVersionNumber");

	ADBDBaseHud_ShowVersionNumber_Params params;
	params.ShouldShow = ShouldShow;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDBaseHud.ShowAnimHudBP
// (Event, Public, BlueprintEvent)

void ADBDBaseHud::ShowAnimHudBP()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDBaseHud.ShowAnimHudBP");

	ADBDBaseHud_ShowAnimHudBP_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDBaseHud.ShowAnimHud
// (Final, Exec, Native, Public)
// Parameters:
// bool                           show                           (Parm, ZeroConstructor, IsPlainOldData)

void ADBDBaseHud::ShowAnimHud(bool show)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDBaseHud.ShowAnimHud");

	ADBDBaseHud_ShowAnimHud_Params params;
	params.show = show;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDBaseHud.ShouldDrawAnimHud
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ADBDBaseHud::ShouldDrawAnimHud()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDBaseHud.ShouldDrawAnimHud");

	ADBDBaseHud_ShouldDrawAnimHud_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.EscapeRequirementTracker.OnGameplayEvent
// (Final, Native, Private)
// Parameters:
// TEnumAsByte<EDBDScoreTypes>    gameplayEventType              (Parm, ZeroConstructor, IsPlainOldData)
// float                          amount                         (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  Instigator                     (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  Target                         (Parm, ZeroConstructor, IsPlainOldData)

void UEscapeRequirementTracker::OnGameplayEvent(TEnumAsByte<EDBDScoreTypes> gameplayEventType, float amount, class AActor* Instigator, class AActor* Target)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.EscapeRequirementTracker.OnGameplayEvent");

	UEscapeRequirementTracker_OnGameplayEvent_Params params;
	params.gameplayEventType = gameplayEventType;
	params.amount = amount;
	params.Instigator = Instigator;
	params.Target = Target;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDGameMode.SetEscapeOpened
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           Val                            (Parm, ZeroConstructor, IsPlainOldData)

void ADBDGameMode::SetEscapeOpened(bool Val)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameMode.SetEscapeOpened");

	ADBDGameMode_SetEscapeOpened_Params params;
	params.Val = Val;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDGameMode.LevelLoaded
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                  levelName                      (Parm, ZeroConstructor)

void ADBDGameMode::LevelLoaded(const class FString& levelName)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameMode.LevelLoaded");

	ADBDGameMode_LevelLoaded_Params params;
	params.levelName = levelName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDGameMode.IsEscapeOpen
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ADBDGameMode::IsEscapeOpen()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameMode.IsEscapeOpen");

	ADBDGameMode_IsEscapeOpen_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDGameMode.HostGame
// (Final, Native, Public, BlueprintCallable)

void ADBDGameMode::HostGame()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameMode.HostGame");

	ADBDGameMode_HostGame_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDGameMode.GetElapsedMatchTime
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FTimespan               ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FTimespan ADBDGameMode::GetElapsedMatchTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameMode.GetElapsedMatchTime");

	ADBDGameMode_GetElapsedMatchTime_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDGameMode.DBD_BlockCamperEscape
// (Final, Exec, Native, Public)
// Parameters:
// float                          duration                       (Parm, ZeroConstructor, IsPlainOldData)

void ADBDGameMode::DBD_BlockCamperEscape(float duration)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameMode.DBD_BlockCamperEscape");

	ADBDGameMode_DBD_BlockCamperEscape_Params params;
	params.duration = duration;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDGameMode.AreLoadoutsCreated
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ADBDGameMode::AreLoadoutsCreated()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameMode.AreLoadoutsCreated");

	ADBDGameMode_AreLoadoutsCreated_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.Interactable.SetInteractorsUsable
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           usable                         (Parm, ZeroConstructor, IsPlainOldData)
// class UInteractor*             exception                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void AInteractable::SetInteractorsUsable(bool usable, class UInteractor* exception)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.Interactable.SetInteractorsUsable");

	AInteractable_SetInteractorsUsable_Params params;
	params.usable = usable;
	params.exception = exception;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.Interactable.PreInterruptionEvent
// (Event, Public, BlueprintEvent)
// Parameters:
// class ADBDPlayer*              interruptor                    (Parm, ZeroConstructor, IsPlainOldData)
// class ADBDPlayer*              interruptee                    (Parm, ZeroConstructor, IsPlainOldData)
// class UInterruptionDefinition* interruption                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void AInteractable::PreInterruptionEvent(class ADBDPlayer* interruptor, class ADBDPlayer* interruptee, class UInterruptionDefinition* interruption)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.Interactable.PreInterruptionEvent");

	AInteractable_PreInterruptionEvent_Params params;
	params.interruptor = interruptor;
	params.interruptee = interruptee;
	params.interruption = interruption;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.Interactable.OnLevelReadyToPlay
// (Event, Public, BlueprintEvent)

void AInteractable::OnLevelReadyToPlay()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.Interactable.OnLevelReadyToPlay");

	AInteractable_OnLevelReadyToPlay_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.Interactable.IsReadyForInteractableInit
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AInteractable::IsReadyForInteractableInit()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.Interactable.IsReadyForInteractableInit");

	AInteractable_IsReadyForInteractableInit_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.Interactable.IsInterruptionPossible
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// class ADBDPlayer*              interruptor                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// class ADBDPlayer*              interruptee                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// class UInteractor*             Interactor                     (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class UInteractionDefinition*  definition                     (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class UInterruptionDefinition* interruption                   (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AInteractable::IsInterruptionPossible(class ADBDPlayer* interruptor, class ADBDPlayer* interruptee, class UInteractor* Interactor, class UInteractionDefinition* definition, class UInterruptionDefinition* interruption)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.Interactable.IsInterruptionPossible");

	AInteractable_IsInterruptionPossible_Params params;
	params.interruptor = interruptor;
	params.interruptee = interruptee;
	params.Interactor = Interactor;
	params.definition = definition;
	params.interruption = interruption;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.Interactable.IsInteractionPossibleInternal
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// class ADBDPlayer*              Player                         (Parm, ZeroConstructor, IsPlainOldData)
// class UInteractor*             Interactor                     (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class UInteractionDefinition*  definition                     (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// TEnumAsByte<EInputInteractionType> InteractionType                (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AInteractable::IsInteractionPossibleInternal(class ADBDPlayer* Player, class UInteractor* Interactor, class UInteractionDefinition* definition, TEnumAsByte<EInputInteractionType> InteractionType)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.Interactable.IsInteractionPossibleInternal");

	AInteractable_IsInteractionPossibleInternal_Params params;
	params.Player = Player;
	params.Interactor = Interactor;
	params.definition = definition;
	params.InteractionType = InteractionType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.Interactable.IsInteractionDone
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// class ADBDPlayer*              Player                         (Parm, ZeroConstructor, IsPlainOldData)
// class UInteractor*             Interactor                     (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class UInteractionDefinition*  definition                     (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// TEnumAsByte<EInputInteractionType> InteractionType                (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AInteractable::IsInteractionDone(class ADBDPlayer* Player, class UInteractor* Interactor, class UInteractionDefinition* definition, TEnumAsByte<EInputInteractionType> InteractionType)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.Interactable.IsInteractionDone");

	AInteractable_IsInteractionDone_Params params;
	params.Player = Player;
	params.Interactor = Interactor;
	params.definition = definition;
	params.InteractionType = InteractionType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.Interactable.InteractableInit
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AInteractable::InteractableInit()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.Interactable.InteractableInit");

	AInteractable_InteractableInit_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.Interactable.HasInteractableInitializedBeenCalled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AInteractable::HasInteractableInitializedBeenCalled()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.Interactable.HasInteractableInitializedBeenCalled");

	AInteractable_HasInteractableInitializedBeenCalled_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.Interactable.HasAnOngoingInteraction
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AInteractable::HasAnOngoingInteraction()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.Interactable.HasAnOngoingInteraction");

	AInteractable_HasAnOngoingInteraction_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.Interactable.GetPlayerOwner
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ADBDPlayer*              ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ADBDPlayer* AInteractable::GetPlayerOwner()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.Interactable.GetPlayerOwner");

	AInteractable_GetPlayerOwner_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.Interactable.GetInteractors
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class UInteractor*>     ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<class UInteractor*> AInteractable::GetInteractors()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.Interactable.GetInteractors");

	AInteractable_GetInteractors_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.Interactable.GetInteractingPlayers
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class ADBDPlayer*>      ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<class ADBDPlayer*> AInteractable::GetInteractingPlayers()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.Interactable.GetInteractingPlayers");

	AInteractable_GetInteractingPlayers_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.Interactable.GetFocalPointPosition
// (Native, Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class ADBDPlayer*              Player                         (Parm, ZeroConstructor, IsPlainOldData)
// class UInteractionDefinition*  definition                     (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FVector AInteractable::GetFocalPointPosition(class ADBDPlayer* Player, class UInteractionDefinition* definition)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.Interactable.GetFocalPointPosition");

	AInteractable_GetFocalPointPosition_Params params;
	params.Player = Player;
	params.definition = definition;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.Interactable.AuthorityRequestCancelOngoingInteractions
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// bool                           onlyOnHitCancelableInteractions (Parm, ZeroConstructor, IsPlainOldData)

void AInteractable::AuthorityRequestCancelOngoingInteractions(bool onlyOnHitCancelableInteractions)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.Interactable.AuthorityRequestCancelOngoingInteractions");

	AInteractable_AuthorityRequestCancelOngoingInteractions_Params params;
	params.onlyOnHitCancelableInteractions = onlyOnHitCancelableInteractions;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.Interactable.Authority_UpdateLit
// (Event, Public, BlueprintEvent)
// Parameters:
// float                          DeltaSeconds                   (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  effector                       (Parm, ZeroConstructor, IsPlainOldData)

void AInteractable::Authority_UpdateLit(float DeltaSeconds, class AActor* effector)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.Interactable.Authority_UpdateLit");

	AInteractable_Authority_UpdateLit_Params params;
	params.DeltaSeconds = DeltaSeconds;
	params.effector = effector;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.ItemModifier.HandleIncreaseMaxCharge
// (Final, Native, Public, BlueprintCallable)

void UItemModifier::HandleIncreaseMaxCharge()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.ItemModifier.HandleIncreaseMaxCharge");

	UItemModifier_HandleIncreaseMaxCharge_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.ItemModifier.HandleIncreaseItemCount
// (Final, Native, Public, BlueprintCallable)

void UItemModifier::HandleIncreaseItemCount()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.ItemModifier.HandleIncreaseItemCount");

	UItemModifier_HandleIncreaseItemCount_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.ItemModifier.HandleIncreaseCharge
// (Final, Native, Public, BlueprintCallable)

void UItemModifier::HandleIncreaseCharge()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.ItemModifier.HandleIncreaseCharge");

	UItemModifier_HandleIncreaseCharge_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.ItemModifier.GetOwningPlayer
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ADBDPlayer*              ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ADBDPlayer* UItemModifier::GetOwningPlayer()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.ItemModifier.GetOwningPlayer");

	UItemModifier_GetOwningPlayer_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.ItemModifier.GetItemMaxEnergy
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UItemModifier::GetItemMaxEnergy()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.ItemModifier.GetItemMaxEnergy");

	UItemModifier_GetItemMaxEnergy_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.ItemModifier.GetItemEnergy
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UItemModifier::GetItemEnergy()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.ItemModifier.GetItemEnergy");

	UItemModifier_GetItemEnergy_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.ItemModifier.GetItemCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UItemModifier::GetItemCount()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.ItemModifier.GetItemCount");

	UItemModifier_GetItemCount_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.ItemModifier.GetGameplayModifierData
// (Native, Public)
// Parameters:
// struct FGameplayModifierData   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FGameplayModifierData UItemModifier::GetGameplayModifierData()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.ItemModifier.GetGameplayModifierData");

	UItemModifier_GetGameplayModifierData_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.ItemModifier.GetConstGameplayModifierData
// (Native, Public, Const)
// Parameters:
// struct FGameplayModifierData   ReturnValue                    (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm)

struct FGameplayModifierData UItemModifier::GetConstGameplayModifierData()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.ItemModifier.GetConstGameplayModifierData");

	UItemModifier_GetConstGameplayModifierData_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.ItemModifier.GetBaseItem
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ACollectable*            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ACollectable* UItemModifier::GetBaseItem()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.ItemModifier.GetBaseItem");

	UItemModifier_GetBaseItem_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.ItemModifier.AuthoritySetItemMaxEnergy
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// float                          energy                         (Parm, ZeroConstructor, IsPlainOldData)

void UItemModifier::AuthoritySetItemMaxEnergy(float energy)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.ItemModifier.AuthoritySetItemMaxEnergy");

	UItemModifier_AuthoritySetItemMaxEnergy_Params params;
	params.energy = energy;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.ItemModifier.AuthoritySetItemEnergy
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// float                          energy                         (Parm, ZeroConstructor, IsPlainOldData)

void UItemModifier::AuthoritySetItemEnergy(float energy)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.ItemModifier.AuthoritySetItemEnergy");

	UItemModifier_AuthoritySetItemEnergy_Params params;
	params.energy = energy;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.ItemModifier.AuthoritySetItemCount
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// int                            itemCount                      (Parm, ZeroConstructor, IsPlainOldData)

void UItemModifier::AuthoritySetItemCount(int itemCount)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.ItemModifier.AuthoritySetItemCount");

	UItemModifier_AuthoritySetItemCount_Params params;
	params.itemCount = itemCount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.ItemAddon.OnPostItemAddonsCreation
// (Event, Public, BlueprintEvent)
// Parameters:
// class ADBDPlayer*              Player                         (Parm, ZeroConstructor, IsPlainOldData)
// class ACollectable*            Item                           (Parm, ZeroConstructor, IsPlainOldData)

void UItemAddon::OnPostItemAddonsCreation(class ADBDPlayer* Player, class ACollectable* Item)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.ItemAddon.OnPostItemAddonsCreation");

	UItemAddon_OnPostItemAddonsCreation_Params params;
	params.Player = Player;
	params.Item = Item;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.ItemAddon.Multicast_SetBaseItem
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private, NetValidate)
// Parameters:
// class ACollectable*            baseItem                       (Parm, ZeroConstructor, IsPlainOldData)

void UItemAddon::Multicast_SetBaseItem(class ACollectable* baseItem)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.ItemAddon.Multicast_SetBaseItem");

	UItemAddon_Multicast_SetBaseItem_Params params;
	params.baseItem = baseItem;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.ItemAddon.Multicast_InitializeItemAddon
// (Net, NetReliable, Native, Event, NetMulticast, Public, NetValidate)

void UItemAddon::Multicast_InitializeItemAddon()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.ItemAddon.Multicast_InitializeItemAddon");

	UItemAddon_Multicast_InitializeItemAddon_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.ItemAddon.Multicast_AddAddonToItem
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// class ACollectable*            Item                           (Parm, ZeroConstructor, IsPlainOldData)

void UItemAddon::Multicast_AddAddonToItem(class ACollectable* Item)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.ItemAddon.Multicast_AddAddonToItem");

	UItemAddon_Multicast_AddAddonToItem_Params params;
	params.Item = Item;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.ItemAddon.IsReadyForInitialization
// (Native, Event, Protected, BlueprintEvent, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UItemAddon::IsReadyForInitialization()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.ItemAddon.IsReadyForInitialization");

	UItemAddon_IsReadyForInitialization_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.ItemAddon.InitializeAddon
// (Event, Protected, BlueprintEvent)

void UItemAddon::InitializeAddon()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.ItemAddon.InitializeAddon");

	UItemAddon_InitializeAddon_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.ItemAddon.GetOwningPlayer
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ADBDPlayer*              ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ADBDPlayer* UItemAddon::GetOwningPlayer()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.ItemAddon.GetOwningPlayer");

	UItemAddon_GetOwningPlayer_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.ItemAddon.GetInventoryItemType
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TEnumAsByte<EInventoryItemType> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

TEnumAsByte<EInventoryItemType> UItemAddon::GetInventoryItemType()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.ItemAddon.GetInventoryItemType");

	UItemAddon_GetInventoryItemType_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.ItemAddon.GetBaseItem
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ACollectable*            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ACollectable* UItemAddon::GetBaseItem()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.ItemAddon.GetBaseItem");

	UItemAddon_GetBaseItem_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.ItemAddon.Authority_OnCollectablePickedUp
// (Event, Public, BlueprintEvent)
// Parameters:
// class ADBDPlayer*              Player                         (Parm, ZeroConstructor, IsPlainOldData)

void UItemAddon::Authority_OnCollectablePickedUp(class ADBDPlayer* Player)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.ItemAddon.Authority_OnCollectablePickedUp");

	UItemAddon_Authority_OnCollectablePickedUp_Params params;
	params.Player = Player;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.ItemAddon.Authority_OnCollectableDropped
// (Event, Public, BlueprintEvent)
// Parameters:
// class ADBDPlayer*              Player                         (Parm, ZeroConstructor, IsPlainOldData)

void UItemAddon::Authority_OnCollectableDropped(class ADBDPlayer* Player)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.ItemAddon.Authority_OnCollectableDropped");

	UItemAddon_Authority_OnCollectableDropped_Params params;
	params.Player = Player;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.ItemAddon.ApplyMetaModifiers
// (Final, Native, Private)

void UItemAddon::ApplyMetaModifiers()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.ItemAddon.ApplyMetaModifiers");

	UItemAddon_ApplyMetaModifiers_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.Collectable.Use
// (Native, Public, BlueprintCallable)

void ACollectable::Use()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.Collectable.Use");

	ACollectable_Use_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.Collectable.SetItemInteractor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UInteractor*             Interactor                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void ACollectable::SetItemInteractor(class UInteractor* Interactor)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.Collectable.SetItemInteractor");

	ACollectable_SetItemInteractor_Params params;
	params.Interactor = Interactor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.Collectable.SetCount
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            Count                          (Parm, ZeroConstructor, IsPlainOldData)

void ACollectable::SetCount(int Count)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.Collectable.SetCount");

	ACollectable_SetCount_Params params;
	params.Count = Count;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.Collectable.OnUseReleased
// (Native, Event, Protected, BlueprintEvent)

void ACollectable::OnUseReleased()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.Collectable.OnUseReleased");

	ACollectable_OnUseReleased_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.Collectable.OnUse
// (Native, Event, Protected, BlueprintEvent)

void ACollectable::OnUse()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.Collectable.OnUse");

	ACollectable_OnUse_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.Collectable.OnRep_BegunPlayFenceName
// (Final, Native, Private)

void ACollectable::OnRep_BegunPlayFenceName()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.Collectable.OnRep_BegunPlayFenceName");

	ACollectable_OnRep_BegunPlayFenceName_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.Collectable.OnPostItemAddonsCreation
// (Event, Public, BlueprintEvent)
// Parameters:
// class ADBDPlayer*              Player                         (Parm, ZeroConstructor, IsPlainOldData)

void ACollectable::OnPostItemAddonsCreation(class ADBDPlayer* Player)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.Collectable.OnPostItemAddonsCreation");

	ACollectable_OnPostItemAddonsCreation_Params params;
	params.Player = Player;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.Collectable.OnFenceInitialized
// (Final, Native, Private)

void ACollectable::OnFenceInitialized()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.Collectable.OnFenceInitialized");

	ACollectable_OnFenceInitialized_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.Collectable.OnDropped
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent)

void ACollectable::OnDropped()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.Collectable.OnDropped");

	ACollectable_OnDropped_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.Collectable.OnCollected
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// class ADBDPlayer*              collector                      (Parm, ZeroConstructor, IsPlainOldData)

void ACollectable::OnCollected(class ADBDPlayer* collector)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.Collectable.OnCollected");

	ACollectable_OnCollected_Params params;
	params.collector = collector;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.Collectable.NotifyUpdated
// (Final, Native, Protected, BlueprintCallable)

void ACollectable::NotifyUpdated()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.Collectable.NotifyUpdated");

	ACollectable_NotifyUpdated_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.Collectable.Multicast_UseReleased
// (Net, NetReliable, Native, Event, NetMulticast, Protected, NetValidate)

void ACollectable::Multicast_UseReleased()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.Collectable.Multicast_UseReleased");

	ACollectable_Multicast_UseReleased_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.Collectable.Multicast_Use
// (Net, NetReliable, Native, Event, NetMulticast, Protected, NetValidate)

void ACollectable::Multicast_Use()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.Collectable.Multicast_Use");

	ACollectable_Multicast_Use_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.Collectable.Multicast_RemoveItemAddon
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// class UItemAddon*              addon                          (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void ACollectable::Multicast_RemoveItemAddon(class UItemAddon* addon)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.Collectable.Multicast_RemoveItemAddon");

	ACollectable_Multicast_RemoveItemAddon_Params params;
	params.addon = addon;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.Collectable.Multicast_Dropped
// (Net, NetReliable, Native, Event, NetMulticast, Protected, HasDefaults, NetValidate)
// Parameters:
// class ADBDPlayer*              droppedBy                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 Location                       (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// struct FRotator                Rotation                       (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData)

void ACollectable::Multicast_Dropped(class ADBDPlayer* droppedBy, const struct FVector& Location, const struct FRotator& Rotation)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.Collectable.Multicast_Dropped");

	ACollectable_Multicast_Dropped_Params params;
	params.droppedBy = droppedBy;
	params.Location = Location;
	params.Rotation = Rotation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.Collectable.Multicast_Collected
// (Net, NetReliable, Native, Event, NetMulticast, Protected, NetValidate)
// Parameters:
// class ADBDPlayer*              collector                      (Parm, ZeroConstructor, IsPlainOldData)

void ACollectable::Multicast_Collected(class ADBDPlayer* collector)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.Collectable.Multicast_Collected");

	ACollectable_Multicast_Collected_Params params;
	params.collector = collector;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.Collectable.IsStored
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ACollectable::IsStored()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.Collectable.IsStored");

	ACollectable_IsStored_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.Collectable.IsRechargeable
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ACollectable::IsRechargeable()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.Collectable.IsRechargeable");

	ACollectable_IsRechargeable_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.Collectable.IsOnGround
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ACollectable::IsOnGround()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.Collectable.IsOnGround");

	ACollectable_IsOnGround_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.Collectable.IsEquipped
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ACollectable::IsEquipped()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.Collectable.IsEquipped");

	ACollectable_IsEquipped_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.Collectable.IsCountDisplayForced
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ACollectable::IsCountDisplayForced()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.Collectable.IsCountDisplayForced");

	ACollectable_IsCountDisplayForced_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.Collectable.IsCollected
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ACollectable::IsCollected()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.Collectable.IsCollected");

	ACollectable_IsCollected_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.Collectable.HasGameplayModifierFlag
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayTag            modifierFlag                   (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ACollectable::HasGameplayModifierFlag(const struct FGameplayTag& modifierFlag)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.Collectable.HasGameplayModifierFlag");

	ACollectable_HasGameplayModifierFlag_Params params;
	params.modifierFlag = modifierFlag;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.Collectable.GetUsePercentLeft
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ACollectable::GetUsePercentLeft()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.Collectable.GetUsePercentLeft");

	ACollectable_GetUsePercentLeft_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.Collectable.GetModifierSum
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayTag            ModifierType                   (Parm)
// float                          DefaultValue                   (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ACollectable::GetModifierSum(const struct FGameplayTag& ModifierType, float DefaultValue)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.Collectable.GetModifierSum");

	ACollectable_GetModifierSum_Params params;
	params.ModifierType = ModifierType;
	params.DefaultValue = DefaultValue;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.Collectable.GetModifierMax
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayTag            ModifierType                   (Parm)
// float                          DefaultValue                   (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ACollectable::GetModifierMax(const struct FGameplayTag& ModifierType, float DefaultValue)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.Collectable.GetModifierMax");

	ACollectable_GetModifierMax_Params params;
	params.ModifierType = ModifierType;
	params.DefaultValue = DefaultValue;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.Collectable.GetItemInteractor
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UInteractor*             ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UInteractor* ACollectable::GetItemInteractor()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.Collectable.GetItemInteractor");

	ACollectable_GetItemInteractor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.Collectable.GetItemIconIndex
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// unsigned char                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

unsigned char ACollectable::GetItemIconIndex()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.Collectable.GetItemIconIndex");

	ACollectable_GetItemIconIndex_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.Collectable.GetItemAddons
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<class UItemAddon*>      ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<class UItemAddon*> ACollectable::GetItemAddons()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.Collectable.GetItemAddons");

	ACollectable_GetItemAddons_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.Collectable.GetCount
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int ACollectable::GetCount()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.Collectable.GetCount");

	ACollectable_GetCount_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.Collectable.GetCollector
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ADBDPlayer*              ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ADBDPlayer* ACollectable::GetCollector()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.Collectable.GetCollector");

	ACollectable_GetCollector_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.Collectable.Discard
// (Final, Native, Public, BlueprintCallable)

void ACollectable::Discard()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.Collectable.Discard");

	ACollectable_Discard_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.Collectable.DebugPrintStats
// (Native, Event, Public, BlueprintEvent)

void ACollectable::DebugPrintStats()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.Collectable.DebugPrintStats");

	ACollectable_DebugPrintStats_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.Collectable.CanUse
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ACollectable::CanUse()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.Collectable.CanUse");

	ACollectable_CanUse_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.Collectable.CanBeDropped
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class ADBDPlayer*              dropper                        (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ACollectable::CanBeDropped(class ADBDPlayer* dropper)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.Collectable.CanBeDropped");

	ACollectable_CanBeDropped_Params params;
	params.dropper = dropper;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.Collectable.CanBeCollected
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class ADBDPlayer*              collector                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ACollectable::CanBeCollected(class ADBDPlayer* collector)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.Collectable.CanBeCollected");

	ACollectable_CanBeCollected_Params params;
	params.collector = collector;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.Collectable.Authority_RemoveItemAddon
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class UItemAddon*              addon                          (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void ACollectable::Authority_RemoveItemAddon(class UItemAddon* addon)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.Collectable.Authority_RemoveItemAddon");

	ACollectable_Authority_RemoveItemAddon_Params params;
	params.addon = addon;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.Collectable.Authority_AddItemAddon
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class UItemAddon*              addon                          (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void ACollectable::Authority_AddItemAddon(class UItemAddon* addon)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.Collectable.Authority_AddItemAddon");

	ACollectable_Authority_AddItemAddon_Params params;
	params.addon = addon;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayerState_Menu.Server_SetEquipment
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// TEnumAsByte<ELoadoutSlot>      Slot                           (Parm, ZeroConstructor, IsPlainOldData)
// struct FName                   ItemId                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           callOnRep                      (Parm, ZeroConstructor, IsPlainOldData)

void ADBDPlayerState_Menu::Server_SetEquipment(TEnumAsByte<ELoadoutSlot> Slot, const struct FName& ItemId, bool callOnRep)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayerState_Menu.Server_SetEquipment");

	ADBDPlayerState_Menu_Server_SetEquipment_Params params;
	params.Slot = Slot;
	params.ItemId = ItemId;
	params.callOnRep = callOnRep;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayerState_Menu.OnRep_DisplayData
// (Native, Public)

void ADBDPlayerState_Menu::OnRep_DisplayData()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayerState_Menu.OnRep_DisplayData");

	ADBDPlayerState_Menu_OnRep_DisplayData_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDUtilities.WithinRangeExclusive
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                          Min                            (Parm, ZeroConstructor, IsPlainOldData)
// float                          Max                            (Parm, ZeroConstructor, IsPlainOldData)
// float                          Value                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UDBDUtilities::STATIC_WithinRangeExclusive(float Min, float Max, float Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDUtilities.WithinRangeExclusive");

	UDBDUtilities_WithinRangeExclusive_Params params;
	params.Min = Min;
	params.Max = Max;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDUtilities.WithinRange
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                          Min                            (Parm, ZeroConstructor, IsPlainOldData)
// float                          Max                            (Parm, ZeroConstructor, IsPlainOldData)
// float                          Value                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UDBDUtilities::STATIC_WithinRange(float Min, float Max, float Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDUtilities.WithinRange");

	UDBDUtilities_WithinRange_Params params;
	params.Min = Min;
	params.Max = Max;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDUtilities.ToAngle_negative180to180
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                          Angle                          (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UDBDUtilities::STATIC_ToAngle_negative180to180(float Angle)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDUtilities.ToAngle_negative180to180");

	UDBDUtilities_ToAngle_negative180to180_Params params;
	params.Angle = Angle;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDUtilities.SphereTraceSingle
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FVector                 Start                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 End                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// class USphereComponent*        Sphere                         (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// struct FHitResult              outHitResult                   (Parm, OutParm, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UDBDUtilities::STATIC_SphereTraceSingle(const struct FVector& Start, const struct FVector& End, class USphereComponent* Sphere, struct FHitResult* outHitResult)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDUtilities.SphereTraceSingle");

	UDBDUtilities_SphereTraceSingle_Params params;
	params.Start = Start;
	params.End = End;
	params.Sphere = Sphere;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (outHitResult != nullptr)
		*outHitResult = params.outHitResult;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDUtilities.SphereTraceAgainstActor
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FVector                 Start                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 End                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// class USphereComponent*        Sphere                         (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class AActor*                  Actor                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// struct FHitResult              outHitResult                   (Parm, OutParm, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UDBDUtilities::STATIC_SphereTraceAgainstActor(const struct FVector& Start, const struct FVector& End, class USphereComponent* Sphere, class AActor* Actor, struct FHitResult* outHitResult)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDUtilities.SphereTraceAgainstActor");

	UDBDUtilities_SphereTraceAgainstActor_Params params;
	params.Start = Start;
	params.End = End;
	params.Sphere = Sphere;
	params.Actor = Actor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (outHitResult != nullptr)
		*outHitResult = params.outHitResult;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDUtilities.PointerToInt
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                 Obj                            (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UDBDUtilities::STATIC_PointerToInt(class UObject* Obj)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDUtilities.PointerToInt");

	UDBDUtilities_PointerToInt_Params params;
	params.Obj = Obj;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDUtilities.NormalizeXY
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                 Vector                         (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// float                          Tolerance                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UDBDUtilities::STATIC_NormalizeXY(float Tolerance, struct FVector* Vector)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDUtilities.NormalizeXY");

	UDBDUtilities_NormalizeXY_Params params;
	params.Tolerance = Tolerance;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Vector != nullptr)
		*Vector = params.Vector;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDUtilities.LogMeshMaterialInfo
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                  inStr                          (ConstParm, Parm, ZeroConstructor)
// class UMeshComponent*          Root                           (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UDBDUtilities::STATIC_LogMeshMaterialInfo(const class FString& inStr, class UMeshComponent* Root)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDUtilities.LogMeshMaterialInfo");

	UDBDUtilities_LogMeshMaterialInfo_Params params;
	params.inStr = inStr;
	params.Root = Root;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDUtilities.LogMaterialInfo
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                  inStr                          (ConstParm, Parm, ZeroConstructor)
// class UMaterialInterface*      Root                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void UDBDUtilities::STATIC_LogMaterialInfo(const class FString& inStr, class UMaterialInterface* Root)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDUtilities.LogMaterialInfo");

	UDBDUtilities_LogMaterialInfo_Params params;
	params.inStr = inStr;
	params.Root = Root;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDUtilities.IsNonViolent
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UDBDUtilities::STATIC_IsNonViolent()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDUtilities.IsNonViolent");

	UDBDUtilities_IsNonViolent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDUtilities.IsLocallyObservingASurvivor
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UDBDUtilities::STATIC_IsLocallyObservingASurvivor(class UObject* WorldContextObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDUtilities.IsLocallyObservingASurvivor");

	UDBDUtilities_IsLocallyObservingASurvivor_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDUtilities.IsLocallyObservingAKiller
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UDBDUtilities::STATIC_IsLocallyObservingAKiller(class UObject* WorldContextObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDUtilities.IsLocallyObservingAKiller");

	UDBDUtilities_IsLocallyObservingAKiller_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDUtilities.HasWalkableSurfaceForward
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 Location                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 fowardVector                   (Parm, ZeroConstructor, IsPlainOldData)
// float                          Distance                       (Parm, ZeroConstructor, IsPlainOldData)
// float                          raycastStartHeight             (Parm, ZeroConstructor, IsPlainOldData)
// float                          raycastEndHeight               (Parm, ZeroConstructor, IsPlainOldData)
// TArray<struct FHitResult>      OutHits                        (Parm, OutParm, ZeroConstructor)
// struct FVector                 raycastStart                   (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UDBDUtilities::STATIC_HasWalkableSurfaceForward(class UObject* WorldContextObject, const struct FVector& Location, const struct FVector& fowardVector, float Distance, float raycastStartHeight, float raycastEndHeight, TArray<struct FHitResult>* OutHits, struct FVector* raycastStart)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDUtilities.HasWalkableSurfaceForward");

	UDBDUtilities_HasWalkableSurfaceForward_Params params;
	params.WorldContextObject = WorldContextObject;
	params.Location = Location;
	params.fowardVector = fowardVector;
	params.Distance = Distance;
	params.raycastStartHeight = raycastStartHeight;
	params.raycastEndHeight = raycastEndHeight;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutHits != nullptr)
		*OutHits = params.OutHits;
	if (raycastStart != nullptr)
		*raycastStart = params.raycastStart;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDUtilities.HasLineOfSightToTarget
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 StartPosition                  (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 targetPosition                 (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  ignoredActor                   (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UDBDUtilities::STATIC_HasLineOfSightToTarget(class UObject* WorldContextObject, const struct FVector& StartPosition, const struct FVector& targetPosition, class AActor* ignoredActor)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDUtilities.HasLineOfSightToTarget");

	UDBDUtilities_HasLineOfSightToTarget_Params params;
	params.WorldContextObject = WorldContextObject;
	params.StartPosition = StartPosition;
	params.targetPosition = targetPosition;
	params.ignoredActor = ignoredActor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDUtilities.HasFloorForward
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 Location                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 fowardVector                   (Parm, ZeroConstructor, IsPlainOldData)
// float                          Distance                       (Parm, ZeroConstructor, IsPlainOldData)
// float                          raycastStartHeight             (Parm, ZeroConstructor, IsPlainOldData)
// float                          raycastEndHeight               (Parm, ZeroConstructor, IsPlainOldData)
// TArray<struct FHitResult>      OutHits                        (Parm, OutParm, ZeroConstructor)
// struct FVector                 raycastStart                   (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UDBDUtilities::STATIC_HasFloorForward(class UObject* WorldContextObject, const struct FVector& Location, const struct FVector& fowardVector, float Distance, float raycastStartHeight, float raycastEndHeight, TArray<struct FHitResult>* OutHits, struct FVector* raycastStart)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDUtilities.HasFloorForward");

	UDBDUtilities_HasFloorForward_Params params;
	params.WorldContextObject = WorldContextObject;
	params.Location = Location;
	params.fowardVector = fowardVector;
	params.Distance = Distance;
	params.raycastStartHeight = raycastStartHeight;
	params.raycastEndHeight = raycastEndHeight;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutHits != nullptr)
		*OutHits = params.OutHits;
	if (raycastStart != nullptr)
		*raycastStart = params.raycastStart;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDUtilities.GetXYVector
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                 Vector                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FVector UDBDUtilities::STATIC_GetXYVector(const struct FVector& Vector)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDUtilities.GetXYVector");

	UDBDUtilities_GetXYVector_Params params;
	params.Vector = Vector;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDUtilities.GetVelocityXYAngleDegrees
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                  Actor                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UDBDUtilities::STATIC_GetVelocityXYAngleDegrees(class AActor* Actor)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDUtilities.GetVelocityXYAngleDegrees");

	UDBDUtilities_GetVelocityXYAngleDegrees_Params params;
	params.Actor = Actor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDUtilities.GetTunableValue
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// struct FName                   valueName                      (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UDBDUtilities::STATIC_GetTunableValue(class UObject* WorldContextObject, const struct FName& valueName)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDUtilities.GetTunableValue");

	UDBDUtilities_GetTunableValue_Params params;
	params.WorldContextObject = WorldContextObject;
	params.valueName = valueName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDUtilities.GetThreeClosestGenerators
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// TArray<class AGenerator*>      unrevealedGenerators           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// TArray<class AGenerator*>      ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<class AGenerator*> UDBDUtilities::STATIC_GetThreeClosestGenerators(TArray<class AGenerator*> unrevealedGenerators)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDUtilities.GetThreeClosestGenerators");

	UDBDUtilities_GetThreeClosestGenerators_Params params;
	params.unrevealedGenerators = unrevealedGenerators;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDUtilities.GetSlasherTunableValue
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// struct FName                   valueName                      (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UDBDUtilities::STATIC_GetSlasherTunableValue(class UObject* WorldContextObject, const struct FName& valueName)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDUtilities.GetSlasherTunableValue");

	UDBDUtilities_GetSlasherTunableValue_Params params;
	params.WorldContextObject = WorldContextObject;
	params.valueName = valueName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDUtilities.GetSlasher
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// class ASlasherPlayer*          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ASlasherPlayer* UDBDUtilities::STATIC_GetSlasher(class UObject* WorldContextObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDUtilities.GetSlasher");

	UDBDUtilities_GetSlasher_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDUtilities.GetSimilarVector
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FVector                 Vector                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          maximumDeviation               (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FVector UDBDUtilities::STATIC_GetSimilarVector(const struct FVector& Vector, float maximumDeviation)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDUtilities.GetSimilarVector");

	UDBDUtilities_GetSimilarVector_Params params;
	params.Vector = Vector;
	params.maximumDeviation = maximumDeviation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDUtilities.GetPlayRateForMontage
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UAnimMontage*            Montage                        (Parm, ZeroConstructor, IsPlainOldData)
// float                          Time                           (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UDBDUtilities::STATIC_GetPlayRateForMontage(class UAnimMontage* Montage, float Time)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDUtilities.GetPlayRateForMontage");

	UDBDUtilities_GetPlayRateForMontage_Params params;
	params.Montage = Montage;
	params.Time = Time;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDUtilities.GetPercentOfRange
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// float                          Val                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// float                          Min                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// float                          Max                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UDBDUtilities::STATIC_GetPercentOfRange(float Val, float Min, float Max)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDUtilities.GetPercentOfRange");

	UDBDUtilities_GetPercentOfRange_Params params;
	params.Val = Val;
	params.Min = Min;
	params.Max = Max;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDUtilities.GetOwningSlasher
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UAnimInstance*           AnimInstance                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// class ASlasherPlayer*          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ASlasherPlayer* UDBDUtilities::STATIC_GetOwningSlasher(class UAnimInstance* AnimInstance)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDUtilities.GetOwningSlasher");

	UDBDUtilities_GetOwningSlasher_Params params;
	params.AnimInstance = AnimInstance;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDUtilities.GetOwningCamper
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UAnimInstance*           AnimInstance                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// class ACamperPlayer*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ACamperPlayer* UDBDUtilities::STATIC_GetOwningCamper(class UAnimInstance* AnimInstance)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDUtilities.GetOwningCamper");

	UDBDUtilities_GetOwningCamper_Params params;
	params.AnimInstance = AnimInstance;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDUtilities.GetOuterMostActor
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UAnimInstance*           AnimInstance                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AActor* UDBDUtilities::STATIC_GetOuterMostActor(class UAnimInstance* AnimInstance)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDUtilities.GetOuterMostActor");

	UDBDUtilities_GetOuterMostActor_Params params;
	params.AnimInstance = AnimInstance;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDUtilities.GetNearbyCampers
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// class UWorld*                  World                          (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 Center                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          Radius                         (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class ACamperPlayer*>   outNearbyCampers               (Parm, OutParm, ZeroConstructor)
// TArray<class AActor*>          ignoredCampers                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)

void UDBDUtilities::STATIC_GetNearbyCampers(class UWorld* World, const struct FVector& Center, float Radius, TArray<class AActor*> ignoredCampers, TArray<class ACamperPlayer*>* outNearbyCampers)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDUtilities.GetNearbyCampers");

	UDBDUtilities_GetNearbyCampers_Params params;
	params.World = World;
	params.Center = Center;
	params.Radius = Radius;
	params.ignoredCampers = ignoredCampers;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (outNearbyCampers != nullptr)
		*outNearbyCampers = params.outNearbyCampers;
}


// Function DeadByDaylight.DBDUtilities.GetMontageLength
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UAnimMontage*            Montage                        (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UDBDUtilities::STATIC_GetMontageLength(class UAnimMontage* Montage)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDUtilities.GetMontageLength");

	UDBDUtilities_GetMontageLength_Params params;
	params.Montage = Montage;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDUtilities.GetLocallyObservedCharacter
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// class ADBDPlayer*              ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ADBDPlayer* UDBDUtilities::STATIC_GetLocallyObservedCharacter(class UObject* WorldContextObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDUtilities.GetLocallyObservedCharacter");

	UDBDUtilities_GetLocallyObservedCharacter_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDUtilities.GetLocallyControlledSurvivor
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// class ACamperPlayer*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ACamperPlayer* UDBDUtilities::STATIC_GetLocallyControlledSurvivor(class UObject* WorldContextObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDUtilities.GetLocallyControlledSurvivor");

	UDBDUtilities_GetLocallyControlledSurvivor_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDUtilities.GetLocallyControlledKiller
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// class ASlasherPlayer*          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ASlasherPlayer* UDBDUtilities::STATIC_GetLocallyControlledKiller(class UObject* WorldContextObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDUtilities.GetLocallyControlledKiller");

	UDBDUtilities_GetLocallyControlledKiller_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDUtilities.GetLocallyControlledCharacterRole
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<EPlayerRole>       ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

TEnumAsByte<EPlayerRole> UDBDUtilities::STATIC_GetLocallyControlledCharacterRole(class UObject* WorldContextObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDUtilities.GetLocallyControlledCharacterRole");

	UDBDUtilities_GetLocallyControlledCharacterRole_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDUtilities.GetLocallyControlledCharacter
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// class ADBDPlayer*              ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ADBDPlayer* UDBDUtilities::STATIC_GetLocallyControlledCharacter(class UObject* WorldContextObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDUtilities.GetLocallyControlledCharacter");

	UDBDUtilities_GetLocallyControlledCharacter_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDUtilities.GetLocalDBDPlayerController
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// class ADBDPlayerControllerBase* ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ADBDPlayerControllerBase* UDBDUtilities::STATIC_GetLocalDBDPlayerController(class UObject* WorldContextObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDUtilities.GetLocalDBDPlayerController");

	UDBDUtilities_GetLocalDBDPlayerController_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDUtilities.GetLocalDBDCameraManager
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// class ADBDPlayerCameraManager* ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ADBDPlayerCameraManager* UDBDUtilities::STATIC_GetLocalDBDCameraManager(class UObject* WorldContextObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDUtilities.GetLocalDBDCameraManager");

	UDBDUtilities_GetLocalDBDCameraManager_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDUtilities.GetInventoryCount
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// int                            CharacterIndex                 (Parm, ZeroConstructor, IsPlainOldData)
// struct FName                   ItemId                         (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UDBDUtilities::STATIC_GetInventoryCount(class UObject* WorldContextObject, int CharacterIndex, const struct FName& ItemId)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDUtilities.GetInventoryCount");

	UDBDUtilities_GetInventoryCount_Params params;
	params.WorldContextObject = WorldContextObject;
	params.CharacterIndex = CharacterIndex;
	params.ItemId = ItemId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDUtilities.GetImpactCollisionResponseContainer
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UPrimitiveComponent*     Primitive                      (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// struct FCollisionResponseContainer ReturnValue                    (Parm, OutParm, ReturnParm)

struct FCollisionResponseContainer UDBDUtilities::STATIC_GetImpactCollisionResponseContainer(class UPrimitiveComponent* Primitive)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDUtilities.GetImpactCollisionResponseContainer");

	UDBDUtilities_GetImpactCollisionResponseContainer_Params params;
	params.Primitive = Primitive;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDUtilities.GetImpactCollisionObjectType
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UPrimitiveComponent*     Primitive                      (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// TEnumAsByte<ECollisionChannel> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

TEnumAsByte<ECollisionChannel> UDBDUtilities::STATIC_GetImpactCollisionObjectType(class UPrimitiveComponent* Primitive)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDUtilities.GetImpactCollisionObjectType");

	UDBDUtilities_GetImpactCollisionObjectType_Params params;
	params.Primitive = Primitive;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDUtilities.GetFormattedNumberText
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// float                          Value                          (Parm, ZeroConstructor, IsPlainOldData)
// int                            maxDecimals                    (Parm, ZeroConstructor, IsPlainOldData)
// int                            minDecimals                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           leadingZero                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText UDBDUtilities::STATIC_GetFormattedNumberText(float Value, int maxDecimals, int minDecimals, bool leadingZero)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDUtilities.GetFormattedNumberText");

	UDBDUtilities_GetFormattedNumberText_Params params;
	params.Value = Value;
	params.maxDecimals = maxDecimals;
	params.minDecimals = minDecimals;
	params.leadingZero = leadingZero;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDUtilities.GetFormattedNumberString
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// float                          Value                          (Parm, ZeroConstructor, IsPlainOldData)
// int                            maxDecimals                    (Parm, ZeroConstructor, IsPlainOldData)
// int                            minDecimals                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           leadingZero                    (Parm, ZeroConstructor, IsPlainOldData)
// class FString                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

class FString UDBDUtilities::STATIC_GetFormattedNumberString(float Value, int maxDecimals, int minDecimals, bool leadingZero)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDUtilities.GetFormattedNumberString");

	UDBDUtilities_GetFormattedNumberString_Params params;
	params.Value = Value;
	params.maxDecimals = maxDecimals;
	params.minDecimals = minDecimals;
	params.leadingZero = leadingZero;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDUtilities.GetFloorLocationAt
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 Location                       (Parm, ZeroConstructor, IsPlainOldData)
// float                          raycastStartHeight             (Parm, ZeroConstructor, IsPlainOldData)
// float                          raycastEndHeight               (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FVector UDBDUtilities::STATIC_GetFloorLocationAt(class UObject* WorldContextObject, const struct FVector& Location, float raycastStartHeight, float raycastEndHeight)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDUtilities.GetFloorLocationAt");

	UDBDUtilities_GetFloorLocationAt_Params params;
	params.WorldContextObject = WorldContextObject;
	params.Location = Location;
	params.raycastStartHeight = raycastStartHeight;
	params.raycastEndHeight = raycastEndHeight;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDUtilities.GetFirstActorWithTag
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FName                   Tag                            (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class AActor*>          actorsArray                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// class AActor*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AActor* UDBDUtilities::STATIC_GetFirstActorWithTag(const struct FName& Tag, TArray<class AActor*> actorsArray)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDUtilities.GetFirstActorWithTag");

	UDBDUtilities_GetFirstActorWithTag_Params params;
	params.Tag = Tag;
	params.actorsArray = actorsArray;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDUtilities.GetEmblemTunableValue
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// struct FName                   valueName                      (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UDBDUtilities::STATIC_GetEmblemTunableValue(class UObject* WorldContextObject, const struct FName& valueName)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDUtilities.GetEmblemTunableValue");

	UDBDUtilities_GetEmblemTunableValue_Params params;
	params.WorldContextObject = WorldContextObject;
	params.valueName = valueName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDUtilities.GetDBDGameState
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// class ADBDGameState*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ADBDGameState* UDBDUtilities::STATIC_GetDBDGameState(class UObject* WorldContextObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDUtilities.GetDBDGameState");

	UDBDUtilities_GetDBDGameState_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDUtilities.GetDBDGameMode
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// class ADBDGameMode*            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ADBDGameMode* UDBDUtilities::STATIC_GetDBDGameMode(class UObject* WorldContextObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDUtilities.GetDBDGameMode");

	UDBDUtilities_GetDBDGameMode_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDUtilities.GetDBDGameInstance
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                 WorldContextObject             (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// class UDBDGameInstance*        ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UDBDGameInstance* UDBDUtilities::STATIC_GetDBDGameInstance(class UObject* WorldContextObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDUtilities.GetDBDGameInstance");

	UDBDUtilities_GetDBDGameInstance_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDUtilities.GetDBDAIPlayerController
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class ADBDPlayer*              Player                         (Parm, ZeroConstructor, IsPlainOldData)
// class ADBDAIPlayerController*  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ADBDAIPlayerController* UDBDUtilities::STATIC_GetDBDAIPlayerController(class ADBDPlayer* Player)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDUtilities.GetDBDAIPlayerController");

	UDBDUtilities_GetDBDAIPlayerController_Params params;
	params.Player = Player;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDUtilities.GetComponentOwnerName
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UActorComponent*         ActorComponent                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class FString                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

class FString UDBDUtilities::STATIC_GetComponentOwnerName(class UActorComponent* ActorComponent)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDUtilities.GetComponentOwnerName");

	UDBDUtilities_GetComponentOwnerName_Params params;
	params.ActorComponent = ActorComponent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDUtilities.GetClosestSnapTransformOnOrbit
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                 centerPoint                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// struct FVector                 orbitterPosition               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// float                          Distance                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// struct FTransform              ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FTransform UDBDUtilities::STATIC_GetClosestSnapTransformOnOrbit(const struct FVector& centerPoint, const struct FVector& orbitterPosition, float Distance)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDUtilities.GetClosestSnapTransformOnOrbit");

	UDBDUtilities_GetClosestSnapTransformOnOrbit_Params params;
	params.centerPoint = centerPoint;
	params.orbitterPosition = orbitterPosition;
	params.Distance = Distance;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDUtilities.GetClosestPointOnOrbit
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                 centerPoint                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// struct FVector                 orbitterPosition               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// float                          Distance                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FVector UDBDUtilities::STATIC_GetClosestPointOnOrbit(const struct FVector& centerPoint, const struct FVector& orbitterPosition, float Distance)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDUtilities.GetClosestPointOnOrbit");

	UDBDUtilities_GetClosestPointOnOrbit_Params params;
	params.centerPoint = centerPoint;
	params.orbitterPosition = orbitterPosition;
	params.Distance = Distance;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDUtilities.GetAnimSequenceLength
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UAnimSequence*           Sequence                       (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UDBDUtilities::STATIC_GetAnimSequenceLength(class UAnimSequence* Sequence)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDUtilities.GetAnimSequenceLength");

	UDBDUtilities_GetAnimSequenceLength_Params params;
	params.Sequence = Sequence;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDUtilities.GetActorOwnerName
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                  Actor                          (Parm, ZeroConstructor, IsPlainOldData)
// class FString                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

class FString UDBDUtilities::STATIC_GetActorOwnerName(class AActor* Actor)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDUtilities.GetActorOwnerName");

	UDBDUtilities_GetActorOwnerName_Params params;
	params.Actor = Actor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDUtilities.GetActiveSpecialEvent
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FName                   EventId                        (Parm, ZeroConstructor, IsPlainOldData)
// struct FSpecialEventData       outSpecialEventData            (Parm, OutParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UDBDUtilities::STATIC_GetActiveSpecialEvent(const struct FName& EventId, struct FSpecialEventData* outSpecialEventData)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDUtilities.GetActiveSpecialEvent");

	UDBDUtilities_GetActiveSpecialEvent_Params params;
	params.EventId = EventId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (outSpecialEventData != nullptr)
		*outSpecialEventData = params.outSpecialEventData;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDUtilities.FireGameEvent
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<EDBDScoreTypes>    ScoreType                      (Parm, ZeroConstructor, IsPlainOldData)
// float                          amount                         (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  Instigator                     (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  Target                         (Parm, ZeroConstructor, IsPlainOldData)

void UDBDUtilities::STATIC_FireGameEvent(class UObject* WorldContextObject, TEnumAsByte<EDBDScoreTypes> ScoreType, float amount, class AActor* Instigator, class AActor* Target)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDUtilities.FireGameEvent");

	UDBDUtilities_FireGameEvent_Params params;
	params.WorldContextObject = WorldContextObject;
	params.ScoreType = ScoreType;
	params.amount = amount;
	params.Instigator = Instigator;
	params.Target = Target;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDUtilities.FindParentOfClass
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                  InChild                        (Parm, ZeroConstructor, IsPlainOldData)
// class UClass*                  InClass                        (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AActor* UDBDUtilities::STATIC_FindParentOfClass(class AActor* InChild, class UClass* InClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDUtilities.FindParentOfClass");

	UDBDUtilities_FindParentOfClass_Params params;
	params.InChild = InChild;
	params.InClass = InClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDUtilities.FindFloorSingle
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 Location                       (Parm, ZeroConstructor, IsPlainOldData)
// float                          raycastLength                  (Parm, ZeroConstructor, IsPlainOldData)
// struct FHitResult              OutHit                         (Parm, OutParm, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UDBDUtilities::STATIC_FindFloorSingle(class UObject* WorldContextObject, const struct FVector& Location, float raycastLength, struct FHitResult* OutHit)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDUtilities.FindFloorSingle");

	UDBDUtilities_FindFloorSingle_Params params;
	params.WorldContextObject = WorldContextObject;
	params.Location = Location;
	params.raycastLength = raycastLength;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutHit != nullptr)
		*OutHit = params.OutHit;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDUtilities.DBDLoadAudioBankAsync
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UAkAudioBank*            bank                           (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  caller                         (Parm, ZeroConstructor, IsPlainOldData)

void UDBDUtilities::STATIC_DBDLoadAudioBankAsync(class UAkAudioBank* bank, class AActor* caller)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDUtilities.DBDLoadAudioBankAsync");

	UDBDUtilities_DBDLoadAudioBankAsync_Params params;
	params.bank = bank;
	params.caller = caller;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDUtilities.DBDLoadAudioBank
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UAkAudioBank*            bank                           (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  caller                         (Parm, ZeroConstructor, IsPlainOldData)

void UDBDUtilities::STATIC_DBDLoadAudioBank(class UAkAudioBank* bank, class AActor* caller)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDUtilities.DBDLoadAudioBank");

	UDBDUtilities_DBDLoadAudioBank_Params params;
	params.bank = bank;
	params.caller = caller;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDUtilities.DBDCapsuleTraceSingle
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 Start                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 End                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// float                          Radius                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          HalfHeight                     (Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<ECollisionChannel> TraceChannel                   (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bTraceComplex                  (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class AActor*>          ActorsToIgnore                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// TEnumAsByte<EDrawDebugTrace>   DrawDebugType                  (Parm, ZeroConstructor, IsPlainOldData)
// struct FHitResult              OutHit                         (Parm, OutParm, IsPlainOldData)
// bool                           bIgnoreSelf                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UDBDUtilities::STATIC_DBDCapsuleTraceSingle(class UObject* WorldContextObject, const struct FVector& Start, const struct FVector& End, float Radius, float HalfHeight, TEnumAsByte<ECollisionChannel> TraceChannel, bool bTraceComplex, TArray<class AActor*> ActorsToIgnore, TEnumAsByte<EDrawDebugTrace> DrawDebugType, bool bIgnoreSelf, struct FHitResult* OutHit)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDUtilities.DBDCapsuleTraceSingle");

	UDBDUtilities_DBDCapsuleTraceSingle_Params params;
	params.WorldContextObject = WorldContextObject;
	params.Start = Start;
	params.End = End;
	params.Radius = Radius;
	params.HalfHeight = HalfHeight;
	params.TraceChannel = TraceChannel;
	params.bTraceComplex = bTraceComplex;
	params.ActorsToIgnore = ActorsToIgnore;
	params.DrawDebugType = DrawDebugType;
	params.bIgnoreSelf = bIgnoreSelf;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutHit != nullptr)
		*OutHit = params.OutHit;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDUtilities.CrashGameCausingInterrupt
// (Final, Native, Static, Public, BlueprintCallable)

void UDBDUtilities::STATIC_CrashGameCausingInterrupt()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDUtilities.CrashGameCausingInterrupt");

	UDBDUtilities_CrashGameCausingInterrupt_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDUtilities.AddComponentToActor
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UClass*                  compClass                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FName                   compName                       (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  Actor                          (Parm, ZeroConstructor, IsPlainOldData)
// class UActorComponent*         ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UActorComponent* UDBDUtilities::STATIC_AddComponentToActor(class UClass* compClass, const struct FName& compName, class AActor* Actor)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDUtilities.AddComponentToActor");

	UDBDUtilities_AddComponentToActor_Params params;
	params.compClass = compClass;
	params.compName = compName;
	params.Actor = Actor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDDesignTunables.GetTunableValue
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FName                   ID                             (Parm, ZeroConstructor, IsPlainOldData)
// bool                           warnIfRowMissing               (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UDBDDesignTunables::GetTunableValue(const struct FName& ID, bool warnIfRowMissing)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDDesignTunables.GetTunableValue");

	UDBDDesignTunables_GetTunableValue_Params params;
	params.ID = ID;
	params.warnIfRowMissing = warnIfRowMissing;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDDesignTunables.GetCurrentlyActiveSpecialEvent
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// class UWorld*                  World                          (Parm, ZeroConstructor, IsPlainOldData)
// struct FSpecialEventData       outEventData                   (Parm, OutParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UDBDDesignTunables::STATIC_GetCurrentlyActiveSpecialEvent(class UWorld* World, struct FSpecialEventData* outEventData)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDDesignTunables.GetCurrentlyActiveSpecialEvent");

	UDBDDesignTunables_GetCurrentlyActiveSpecialEvent_Params params;
	params.World = World;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (outEventData != nullptr)
		*outEventData = params.outEventData;

	return params.ReturnValue;
}


// Function DeadByDaylight.TutorialHighlightController.SetHudComponentHighlight
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<EHudComponent>     hudComponent                   (Parm, ZeroConstructor, IsPlainOldData)
// bool                           show                           (Parm, ZeroConstructor, IsPlainOldData)

void UTutorialHighlightController::SetHudComponentHighlight(TEnumAsByte<EHudComponent> hudComponent, bool show)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.TutorialHighlightController.SetHudComponentHighlight");

	UTutorialHighlightController_SetHudComponentHighlight_Params params;
	params.hudComponent = hudComponent;
	params.show = show;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.TutorialNotificationController.ShowNotification
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FName                   tutorialNotificationId         (Parm, ZeroConstructor, IsPlainOldData)
// float                          duration                       (Parm, ZeroConstructor, IsPlainOldData)

void UTutorialNotificationController::ShowNotification(const struct FName& tutorialNotificationId, float duration)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.TutorialNotificationController.ShowNotification");

	UTutorialNotificationController_ShowNotification_Params params;
	params.tutorialNotificationId = tutorialNotificationId;
	params.duration = duration;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.TutorialNotificationController.ShowBlockingNotification
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FName                   tutorialNotificationId         (Parm, ZeroConstructor, IsPlainOldData)

void UTutorialNotificationController::ShowBlockingNotification(const struct FName& tutorialNotificationId)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.TutorialNotificationController.ShowBlockingNotification");

	UTutorialNotificationController_ShowBlockingNotification_Params params;
	params.tutorialNotificationId = tutorialNotificationId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// DelegateFunction DeadByDaylight.TutorialNotificationController.OnBlockingNotificationDismissedEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// struct FName                   tutorialNotificationId         (Parm, ZeroConstructor, IsPlainOldData)

void UTutorialNotificationController::OnBlockingNotificationDismissedEvent__DelegateSignature(const struct FName& tutorialNotificationId)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction DeadByDaylight.TutorialNotificationController.OnBlockingNotificationDismissedEvent__DelegateSignature");

	UTutorialNotificationController_OnBlockingNotificationDismissedEvent__DelegateSignature_Params params;
	params.tutorialNotificationId = tutorialNotificationId;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.TutorialNotificationController.OnBlockingNotificationDismissed
// (Final, Native, Private)

void UTutorialNotificationController::OnBlockingNotificationDismissed()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.TutorialNotificationController.OnBlockingNotificationDismissed");

	UTutorialNotificationController_OnBlockingNotificationDismissed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.TutorialNotificationController.HideNotification
// (Final, Native, Public, BlueprintCallable)

void UTutorialNotificationController::HideNotification()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.TutorialNotificationController.HideNotification");

	UTutorialNotificationController_HideNotification_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.TutorialObjectiveController.RemoveObjective
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FName                   tutorialObjectiveId            (Parm, ZeroConstructor, IsPlainOldData)

void UTutorialObjectiveController::RemoveObjective(const struct FName& tutorialObjectiveId)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.TutorialObjectiveController.RemoveObjective");

	UTutorialObjectiveController_RemoveObjective_Params params;
	params.tutorialObjectiveId = tutorialObjectiveId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.TutorialObjectiveController.RemoveAllObjectives
// (Final, Native, Public, BlueprintCallable)

void UTutorialObjectiveController::RemoveAllObjectives()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.TutorialObjectiveController.RemoveAllObjectives");

	UTutorialObjectiveController_RemoveAllObjectives_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.TutorialObjectiveController.CompleteObjective
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FName                   tutorialObjectiveId            (Parm, ZeroConstructor, IsPlainOldData)
// bool                           removeAfterCompletion          (Parm, ZeroConstructor, IsPlainOldData)

void UTutorialObjectiveController::CompleteObjective(const struct FName& tutorialObjectiveId, bool removeAfterCompletion)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.TutorialObjectiveController.CompleteObjective");

	UTutorialObjectiveController_CompleteObjective_Params params;
	params.tutorialObjectiveId = tutorialObjectiveId;
	params.removeAfterCompletion = removeAfterCompletion;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.TutorialObjectiveController.AddObjective
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FName                   tutorialObjectiveId            (Parm, ZeroConstructor, IsPlainOldData)

void UTutorialObjectiveController::AddObjective(const struct FName& tutorialObjectiveId)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.TutorialObjectiveController.AddObjective");

	UTutorialObjectiveController_AddObjective_Params params;
	params.tutorialObjectiveId = tutorialObjectiveId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.TutorialGameMode.SetEscapeGenerators
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// TArray<class AGenerator*>      escapeGenerators               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// int                            requiredActivationCount        (Parm, ZeroConstructor, IsPlainOldData)

void ATutorialGameMode::SetEscapeGenerators(TArray<class AGenerator*> escapeGenerators, int requiredActivationCount)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.TutorialGameMode.SetEscapeGenerators");

	ATutorialGameMode_SetEscapeGenerators_Params params;
	params.escapeGenerators = escapeGenerators;
	params.requiredActivationCount = requiredActivationCount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.TutorialGameMode.GetTutorialObjectiveController
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UTutorialObjectiveController* ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UTutorialObjectiveController* ATutorialGameMode::GetTutorialObjectiveController()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.TutorialGameMode.GetTutorialObjectiveController");

	ATutorialGameMode_GetTutorialObjectiveController_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.TutorialGameMode.GetTutorialNotificationController
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UTutorialNotificationController* ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UTutorialNotificationController* ATutorialGameMode::GetTutorialNotificationController()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.TutorialGameMode.GetTutorialNotificationController");

	ATutorialGameMode_GetTutorialNotificationController_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.TutorialGameMode.GetTutorialHighlightController
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UTutorialHighlightController* ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UTutorialHighlightController* ATutorialGameMode::GetTutorialHighlightController()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.TutorialGameMode.GetTutorialHighlightController");

	ATutorialGameMode_GetTutorialHighlightController_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDMenuPlayer.WrappedOnDestroyed
// (Final, Native, Private)
// Parameters:
// class AActor*                  DestroyedActor                 (Parm, ZeroConstructor, IsPlainOldData)

void ADBDMenuPlayer::WrappedOnDestroyed(class AActor* DestroyedActor)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDMenuPlayer.WrappedOnDestroyed");

	ADBDMenuPlayer_WrappedOnDestroyed_Params params;
	params.DestroyedActor = DestroyedActor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDMenuPlayer.ShouldShowSpawnAnimation
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ADBDMenuPlayer::ShouldShowSpawnAnimation()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDMenuPlayer.ShouldShowSpawnAnimation");

	ADBDMenuPlayer_ShouldShowSpawnAnimation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDMenuPlayer.ShouldApplyPositionOffset
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ADBDMenuPlayer::ShouldApplyPositionOffset()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDMenuPlayer.ShouldApplyPositionOffset");

	ADBDMenuPlayer_ShouldApplyPositionOffset_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDMenuPlayer.RestartInSequence
// (Event, Public, BlueprintEvent)

void ADBDMenuPlayer::RestartInSequence()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDMenuPlayer.RestartInSequence");

	ADBDMenuPlayer_RestartInSequence_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDMenuPlayer.OnCustomizationTransactionCompleted
// (Event, Public, BlueprintEvent)
// Parameters:
// TEnumAsByte<ECustomizationCategory> Category                       (Parm, ZeroConstructor, IsPlainOldData)

void ADBDMenuPlayer::OnCustomizationTransactionCompleted(TEnumAsByte<ECustomizationCategory> Category)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDMenuPlayer.OnCustomizationTransactionCompleted");

	ADBDMenuPlayer_OnCustomizationTransactionCompleted_Params params;
	params.Category = Category;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDMenuPlayer.GetHandPosition
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TEnumAsByte<EItemHandPosition> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

TEnumAsByte<EItemHandPosition> ADBDMenuPlayer::GetHandPosition()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDMenuPlayer.GetHandPosition");

	ADBDMenuPlayer_GetHandPosition_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDMenuPlayer.BeginDestroySequence
// (Native, Event, Public, BlueprintEvent)

void ADBDMenuPlayer::BeginDestroySequence()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDMenuPlayer.BeginDestroySequence");

	ADBDMenuPlayer_BeginDestroySequence_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDMenuPlayer.BeginCreateSequence
// (Event, Protected, BlueprintEvent)

void ADBDMenuPlayer::BeginCreateSequence()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDMenuPlayer.BeginCreateSequence");

	ADBDMenuPlayer_BeginCreateSequence_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.CamperPlayer.UpdateSlasherProximityEvents
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          DeltaSeconds                   (Parm, ZeroConstructor, IsPlainOldData)

void ACamperPlayer::UpdateSlasherProximityEvents(float DeltaSeconds)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperPlayer.UpdateSlasherProximityEvents");

	ACamperPlayer_UpdateSlasherProximityEvents_Params params;
	params.DeltaSeconds = DeltaSeconds;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.CamperPlayer.UpdateHealingTimer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          DeltaTime                      (Parm, ZeroConstructor, IsPlainOldData)

void ACamperPlayer::UpdateHealingTimer(float DeltaTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperPlayer.UpdateHealingTimer");

	ACamperPlayer_UpdateHealingTimer_Params params;
	params.DeltaTime = DeltaTime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.CamperPlayer.UpdateDrainTimer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          DeltaTime                      (Parm, ZeroConstructor, IsPlainOldData)

void ACamperPlayer::UpdateDrainTimer(float DeltaTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperPlayer.UpdateDrainTimer");

	ACamperPlayer_UpdateDrainTimer_Params params;
	params.DeltaTime = DeltaTime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.CamperPlayer.TriggerWiggleSkillCheck
// (Final, Native, Public, BlueprintCallable)

void ACamperPlayer::TriggerWiggleSkillCheck()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperPlayer.TriggerWiggleSkillCheck");

	ACamperPlayer_TriggerWiggleSkillCheck_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.CamperPlayer.TriggerPutDownAnimation
// (Event, Public, BlueprintEvent)

void ACamperPlayer::TriggerPutDownAnimation()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperPlayer.TriggerPutDownAnimation");

	ACamperPlayer_TriggerPutDownAnimation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.CamperPlayer.TriggerPickUpAnimation
// (Event, Public, BlueprintEvent)

void ACamperPlayer::TriggerPickUpAnimation()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperPlayer.TriggerPickUpAnimation");

	ACamperPlayer_TriggerPickUpAnimation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.CamperPlayer.TriggerBloodTrail
// (Event, Public, BlueprintEvent)

void ACamperPlayer::TriggerBloodTrail()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperPlayer.TriggerBloodTrail");

	ACamperPlayer_TriggerBloodTrail_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.CamperPlayer.TriggerAfflictionHUDFeedback
// (Final, Native, Public, BlueprintCallable)

void ACamperPlayer::TriggerAfflictionHUDFeedback()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperPlayer.TriggerAfflictionHUDFeedback");

	ACamperPlayer_TriggerAfflictionHUDFeedback_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.CamperPlayer.StopHealingTimer
// (Final, Native, Public, BlueprintCallable)

void ACamperPlayer::StopHealingTimer()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperPlayer.StopHealingTimer");

	ACamperPlayer_StopHealingTimer_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.CamperPlayer.StartHealingTimer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          Time                           (Parm, ZeroConstructor, IsPlainOldData)

void ACamperPlayer::StartHealingTimer(float Time)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperPlayer.StartHealingTimer");

	ACamperPlayer_StartHealingTimer_Params params;
	params.Time = Time;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.CamperPlayer.SetRevealedSurvivor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ACamperPlayer*           survivor                       (Parm, ZeroConstructor, IsPlainOldData)

void ACamperPlayer::SetRevealedSurvivor(class ACamperPlayer* survivor)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperPlayer.SetRevealedSurvivor");

	ACamperPlayer_SetRevealedSurvivor_Params params;
	params.survivor = survivor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.CamperPlayer.SetOverlappingEscape
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                  Escape                         (Parm, ZeroConstructor, IsPlainOldData)

void ACamperPlayer::SetOverlappingEscape(class AActor* Escape)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperPlayer.SetOverlappingEscape");

	ACamperPlayer_SetOverlappingEscape_Params params;
	params.Escape = Escape;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.CamperPlayer.SetIsSacrificed
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           sacrificed                     (Parm, ZeroConstructor, IsPlainOldData)

void ACamperPlayer::SetIsSacrificed(bool sacrificed)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperPlayer.SetIsSacrificed");

	ACamperPlayer_SetIsSacrificed_Params params;
	params.sacrificed = sacrificed;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.CamperPlayer.SetImmobilized
// (Final, Exec, Native, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<ECamperImmobilizeState> State                          (Parm, ZeroConstructor, IsPlainOldData)

void ACamperPlayer::SetImmobilized(TEnumAsByte<ECamperImmobilizeState> State)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperPlayer.SetImmobilized");

	ACamperPlayer_SetImmobilized_Params params;
	params.State = State;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.CamperPlayer.SetGuidedActionLocal
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<ECamperGuidedAction> Action                         (Parm, ZeroConstructor, IsPlainOldData)

void ACamperPlayer::SetGuidedActionLocal(TEnumAsByte<ECamperGuidedAction> Action)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperPlayer.SetGuidedActionLocal");

	ACamperPlayer_SetGuidedActionLocal_Params params;
	params.Action = Action;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.CamperPlayer.SetGuidedAction
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<ECamperGuidedAction> Action                         (Parm, ZeroConstructor, IsPlainOldData)

void ACamperPlayer::SetGuidedAction(TEnumAsByte<ECamperGuidedAction> Action)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperPlayer.SetGuidedAction");

	ACamperPlayer_SetGuidedAction_Params params;
	params.Action = Action;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.CamperPlayer.SetEnableHookSlashableZone
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// bool                           enable                         (Parm, ZeroConstructor, IsPlainOldData)

void ACamperPlayer::SetEnableHookSlashableZone(bool enable)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperPlayer.SetEnableHookSlashableZone");

	ACamperPlayer_SetEnableHookSlashableZone_Params params;
	params.enable = enable;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.CamperPlayer.SetDamageState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<ECamperDamageState> E                              (Parm, ZeroConstructor, IsPlainOldData)
// bool                           FireScoreEvent                 (Parm, ZeroConstructor, IsPlainOldData)

void ACamperPlayer::SetDamageState(TEnumAsByte<ECamperDamageState> E, bool FireScoreEvent)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperPlayer.SetDamageState");

	ACamperPlayer_SetDamageState_Params params;
	params.E = E;
	params.FireScoreEvent = FireScoreEvent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.CamperPlayer.SetCameraAttachment
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class USceneComponent*         Parent                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// struct FName                   SocketName                     (Parm, ZeroConstructor, IsPlainOldData)

void ACamperPlayer::SetCameraAttachment(class USceneComponent* Parent, const struct FName& SocketName)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperPlayer.SetCameraAttachment");

	ACamperPlayer_SetCameraAttachment_Params params;
	params.Parent = Parent;
	params.SocketName = SocketName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.CamperPlayer.SetBeingCarried
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           IsBeingCarried                 (Parm, ZeroConstructor, IsPlainOldData)
// class ADBDPlayer*              carrier                        (Parm, ZeroConstructor, IsPlainOldData)

void ACamperPlayer::SetBeingCarried(bool IsBeingCarried, class ADBDPlayer* carrier)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperPlayer.SetBeingCarried");

	ACamperPlayer_SetBeingCarried_Params params;
	params.IsBeingCarried = IsBeingCarried;
	params.carrier = carrier;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.CamperPlayer.SetAutoInteractionMashEnabled
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           Enabled                        (Parm, ZeroConstructor, IsPlainOldData)

void ACamperPlayer::SetAutoInteractionMashEnabled(bool Enabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperPlayer.SetAutoInteractionMashEnabled");

	ACamperPlayer_SetAutoInteractionMashEnabled_Params params;
	params.Enabled = Enabled;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.CamperPlayer.Server_SetRepAimPoint
// (Net, NetReliable, Native, Event, Public, NetServer, HasDefaults, NetValidate)
// Parameters:
// struct FVector                 inRepAimPoint                  (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData)

void ACamperPlayer::Server_SetRepAimPoint(const struct FVector& inRepAimPoint)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperPlayer.Server_SetRepAimPoint");

	ACamperPlayer_Server_SetRepAimPoint_Params params;
	params.inRepAimPoint = inRepAimPoint;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.CamperPlayer.Server_SetOnHookDrainToNextStage
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// bool                           Enabled                        (Parm, ZeroConstructor, IsPlainOldData)

void ACamperPlayer::Server_SetOnHookDrainToNextStage(bool Enabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperPlayer.Server_SetOnHookDrainToNextStage");

	ACamperPlayer_Server_SetOnHookDrainToNextStage_Params params;
	params.Enabled = Enabled;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.CamperPlayer.Server_SetItemNormalizedEnergyLevel
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// float                          normalizedLevel                (Parm, ZeroConstructor, IsPlainOldData)

void ACamperPlayer::Server_SetItemNormalizedEnergyLevel(float normalizedLevel)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperPlayer.Server_SetItemNormalizedEnergyLevel");

	ACamperPlayer_Server_SetItemNormalizedEnergyLevel_Params params;
	params.normalizedLevel = normalizedLevel;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.CamperPlayer.Server_SetItemEnergyLevel
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// float                          Level                          (Parm, ZeroConstructor, IsPlainOldData)

void ACamperPlayer::Server_SetItemEnergyLevel(float Level)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperPlayer.Server_SetItemEnergyLevel");

	ACamperPlayer_Server_SetItemEnergyLevel_Params params;
	params.Level = Level;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.CamperPlayer.Server_SetImmobilized
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// TEnumAsByte<ECamperImmobilizeState> State                          (Parm, ZeroConstructor, IsPlainOldData)

void ACamperPlayer::Server_SetImmobilized(TEnumAsByte<ECamperImmobilizeState> State)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperPlayer.Server_SetImmobilized");

	ACamperPlayer_Server_SetImmobilized_Params params;
	params.State = State;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.CamperPlayer.Server_SetHookEscapeAutoSuccess
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// bool                           Enabled                        (Parm, ZeroConstructor, IsPlainOldData)

void ACamperPlayer::Server_SetHookEscapeAutoSuccess(bool Enabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperPlayer.Server_SetHookEscapeAutoSuccess");

	ACamperPlayer_Server_SetHookEscapeAutoSuccess_Params params;
	params.Enabled = Enabled;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.CamperPlayer.Server_SetEnableHookSlashableZone
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// bool                           Enabled                        (Parm, ZeroConstructor, IsPlainOldData)

void ACamperPlayer::Server_SetEnableHookSlashableZone(bool Enabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperPlayer.Server_SetEnableHookSlashableZone");

	ACamperPlayer_Server_SetEnableHookSlashableZone_Params params;
	params.Enabled = Enabled;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.CamperPlayer.Server_SendRunInput
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// bool                           Pressed                        (Parm, ZeroConstructor, IsPlainOldData)

void ACamperPlayer::Server_SendRunInput(bool Pressed)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperPlayer.Server_SendRunInput");

	ACamperPlayer_Server_SendRunInput_Params params;
	params.Pressed = Pressed;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.CamperPlayer.Server_SendLeftRightMashedInput
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// bool                           Pressed                        (Parm, ZeroConstructor, IsPlainOldData)

void ACamperPlayer::Server_SendLeftRightMashedInput(bool Pressed)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperPlayer.Server_SendLeftRightMashedInput");

	ACamperPlayer_Server_SendLeftRightMashedInput_Params params;
	params.Pressed = Pressed;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.CamperPlayer.Server_SendItemPreventRun
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// bool                           prevent                        (Parm, ZeroConstructor, IsPlainOldData)

void ACamperPlayer::Server_SendItemPreventRun(bool prevent)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperPlayer.Server_SendItemPreventRun");

	ACamperPlayer_Server_SendItemPreventRun_Params params;
	params.prevent = prevent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.CamperPlayer.Server_SendInteractMashedInput
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// bool                           Pressed                        (Parm, ZeroConstructor, IsPlainOldData)

void ACamperPlayer::Server_SendInteractMashedInput(bool Pressed)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperPlayer.Server_SendInteractMashedInput");

	ACamperPlayer_Server_SendInteractMashedInput_Params params;
	params.Pressed = Pressed;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.CamperPlayer.Server_RemoveReverseBearTrap
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void ACamperPlayer::Server_RemoveReverseBearTrap()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperPlayer.Server_RemoveReverseBearTrap");

	ACamperPlayer_Server_RemoveReverseBearTrap_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.CamperPlayer.Server_RemoveHealth
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void ACamperPlayer::Server_RemoveHealth()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperPlayer.Server_RemoveHealth");

	ACamperPlayer_Server_RemoveHealth_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.CamperPlayer.Server_MakeInvulnerable
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void ACamperPlayer::Server_MakeInvulnerable()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperPlayer.Server_MakeInvulnerable");

	ACamperPlayer_Server_MakeInvulnerable_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.CamperPlayer.Server_Kill
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// bool                           sacrificed                     (Parm, ZeroConstructor, IsPlainOldData)

void ACamperPlayer::Server_Kill(bool sacrificed)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperPlayer.Server_Kill");

	ACamperPlayer_Server_Kill_Params params;
	params.sacrificed = sacrificed;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.CamperPlayer.Server_IncreaseHealth
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void ACamperPlayer::Server_IncreaseHealth()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperPlayer.Server_IncreaseHealth");

	ACamperPlayer_Server_IncreaseHealth_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.CamperPlayer.Server_DebugResetHookedCount
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void ACamperPlayer::Server_DebugResetHookedCount()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperPlayer.Server_DebugResetHookedCount");

	ACamperPlayer_Server_DebugResetHookedCount_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.CamperPlayer.Server_CheatEscaped
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)

void ACamperPlayer::Server_CheatEscaped()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperPlayer.Server_CheatEscaped");

	ACamperPlayer_Server_CheatEscaped_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.CamperPlayer.ResetPotentialSaviors
// (Final, Native, Public, BlueprintCallable)

void ACamperPlayer::ResetPotentialSaviors()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperPlayer.ResetPotentialSaviors");

	ACamperPlayer_ResetPotentialSaviors_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.CamperPlayer.ResetHideTimer
// (Final, Native, Public)

void ACamperPlayer::ResetHideTimer()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperPlayer.ResetHideTimer");

	ACamperPlayer_ResetHideTimer_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.CamperPlayer.ResetCameraAttachment
// (Final, Native, Public, BlueprintCallable)

void ACamperPlayer::ResetCameraAttachment()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperPlayer.ResetCameraAttachment");

	ACamperPlayer_ResetCameraAttachment_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.CamperPlayer.RemoveReverseBearTrap
// (Event, Public, BlueprintEvent)

void ACamperPlayer::RemoveReverseBearTrap()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperPlayer.RemoveReverseBearTrap");

	ACamperPlayer_RemoveReverseBearTrap_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.CamperPlayer.OnUnhooked
// (Final, Native, Public, BlueprintCallable)

void ACamperPlayer::OnUnhooked()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperPlayer.OnUnhooked");

	ACamperPlayer_OnUnhooked_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.CamperPlayer.OnProximityEntered
// (Final, Native, Private, HasOutParms)
// Parameters:
// class UPrimitiveComponent*     HitComponent                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// int                            OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bFromSweep                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FHitResult              SweepResult                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void ACamperPlayer::OnProximityEntered(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperPlayer.OnProximityEntered");

	ACamperPlayer_OnProximityEntered_Params params;
	params.HitComponent = HitComponent;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;
	params.bFromSweep = bFromSweep;
	params.SweepResult = SweepResult;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.CamperPlayer.OnPawnSensed
// (Final, Native, Private)
// Parameters:
// class APawn*                   Pawn                           (Parm, ZeroConstructor, IsPlainOldData)

void ACamperPlayer::OnPawnSensed(class APawn* Pawn)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperPlayer.OnPawnSensed");

	ACamperPlayer_OnPawnSensed_Params params;
	params.Pawn = Pawn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.CamperPlayer.OnHealthBarCharged
// (Final, Native, Private, HasOutParms)
// Parameters:
// bool                           complete                       (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class AActor*>          instigators                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)

void ACamperPlayer::OnHealthBarCharged(bool complete, TArray<class AActor*> instigators)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperPlayer.OnHealthBarCharged");

	ACamperPlayer_OnHealthBarCharged_Params params;
	params.complete = complete;
	params.instigators = instigators;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.CamperPlayer.OnDroppedStart
// (Final, Native, Public, BlueprintCallable)

void ACamperPlayer::OnDroppedStart()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperPlayer.OnDroppedStart");

	ACamperPlayer_OnDroppedStart_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.CamperPlayer.OnDroppedEnd
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           clearLeader                    (Parm, ZeroConstructor, IsPlainOldData)

void ACamperPlayer::OnDroppedEnd(bool clearLeader)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperPlayer.OnDroppedEnd");

	ACamperPlayer_OnDroppedEnd_Params params;
	params.clearLeader = clearLeader;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.CamperPlayer.OnDamageHit
// (Event, Public, HasOutParms, BlueprintEvent)
// Parameters:
// struct FHitResult              Hit                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// bool                           causedKO                       (Parm, ZeroConstructor, IsPlainOldData)

void ACamperPlayer::OnDamageHit(const struct FHitResult& Hit, bool causedKO)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperPlayer.OnDamageHit");

	ACamperPlayer_OnDamageHit_Params params;
	params.Hit = Hit;
	params.causedKO = causedKO;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.CamperPlayer.Multicast_SetOnHookDrainToNextStage
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private, NetValidate)
// Parameters:
// bool                           Enabled                        (Parm, ZeroConstructor, IsPlainOldData)

void ACamperPlayer::Multicast_SetOnHookDrainToNextStage(bool Enabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperPlayer.Multicast_SetOnHookDrainToNextStage");

	ACamperPlayer_Multicast_SetOnHookDrainToNextStage_Params params;
	params.Enabled = Enabled;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.CamperPlayer.Multicast_SetImmobilized
// (Net, NetReliable, Native, Event, NetMulticast, Protected, NetValidate)
// Parameters:
// TEnumAsByte<ECamperImmobilizeState> State                          (Parm, ZeroConstructor, IsPlainOldData)

void ACamperPlayer::Multicast_SetImmobilized(TEnumAsByte<ECamperImmobilizeState> State)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperPlayer.Multicast_SetImmobilized");

	ACamperPlayer_Multicast_SetImmobilized_Params params;
	params.State = State;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.CamperPlayer.Multicast_SetHookEscapeAutoSuccess
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private, NetValidate)
// Parameters:
// bool                           Enabled                        (Parm, ZeroConstructor, IsPlainOldData)

void ACamperPlayer::Multicast_SetHookEscapeAutoSuccess(bool Enabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperPlayer.Multicast_SetHookEscapeAutoSuccess");

	ACamperPlayer_Multicast_SetHookEscapeAutoSuccess_Params params;
	params.Enabled = Enabled;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.CamperPlayer.Multicast_SetGuidedAction
// (Net, NetReliable, Native, Event, NetMulticast, Public, NetValidate)
// Parameters:
// TEnumAsByte<ECamperGuidedAction> Action                         (Parm, ZeroConstructor, IsPlainOldData)

void ACamperPlayer::Multicast_SetGuidedAction(TEnumAsByte<ECamperGuidedAction> Action)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperPlayer.Multicast_SetGuidedAction");

	ACamperPlayer_Multicast_SetGuidedAction_Params params;
	params.Action = Action;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.CamperPlayer.Multicast_SetEnableHookSlashableZone
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private, NetValidate)
// Parameters:
// bool                           Enabled                        (Parm, ZeroConstructor, IsPlainOldData)

void ACamperPlayer::Multicast_SetEnableHookSlashableZone(bool Enabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperPlayer.Multicast_SetEnableHookSlashableZone");

	ACamperPlayer_Multicast_SetEnableHookSlashableZone_Params params;
	params.Enabled = Enabled;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.CamperPlayer.Multicast_SetAuthoritativeMovementFlag
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private, NetValidate)
// Parameters:
// TEnumAsByte<EAuthoritativeMovementFlag> flag                           (Parm, ZeroConstructor, IsPlainOldData)
// bool                           Value                          (Parm, ZeroConstructor, IsPlainOldData)

void ACamperPlayer::Multicast_SetAuthoritativeMovementFlag(TEnumAsByte<EAuthoritativeMovementFlag> flag, bool Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperPlayer.Multicast_SetAuthoritativeMovementFlag");

	ACamperPlayer_Multicast_SetAuthoritativeMovementFlag_Params params;
	params.flag = flag;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.CamperPlayer.Multicast_OnSlashed
// (Net, NetReliable, Native, Event, NetMulticast, Public, NetValidate)
// Parameters:
// class ADBDPlayer*              attacker                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           applySprintEffect              (Parm, ZeroConstructor, IsPlainOldData)

void ACamperPlayer::Multicast_OnSlashed(class ADBDPlayer* attacker, bool applySprintEffect)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperPlayer.Multicast_OnSlashed");

	ACamperPlayer_Multicast_OnSlashed_Params params;
	params.attacker = attacker;
	params.applySprintEffect = applySprintEffect;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.CamperPlayer.Multicast_OnKO
// (Net, NetReliable, Native, Event, NetMulticast, Protected)

void ACamperPlayer::Multicast_OnKO()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperPlayer.Multicast_OnKO");

	ACamperPlayer_Multicast_OnKO_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.CamperPlayer.Multicast_OnHealed
// (Net, NetReliable, Native, Event, NetMulticast, Public, NetValidate)
// Parameters:
// int                            healAmount                     (Parm, ZeroConstructor, IsPlainOldData)

void ACamperPlayer::Multicast_OnHealed(int healAmount)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperPlayer.Multicast_OnHealed");

	ACamperPlayer_Multicast_OnHealed_Params params;
	params.healAmount = healAmount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.CamperPlayer.Multicast_OnFailedStruggling
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private, BlueprintCallable, NetValidate)
// Parameters:
// class UInteractionDefinition*  Interaction                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void ACamperPlayer::Multicast_OnFailedStruggling(class UInteractionDefinition* Interaction)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperPlayer.Multicast_OnFailedStruggling");

	ACamperPlayer_Multicast_OnFailedStruggling_Params params;
	params.Interaction = Interaction;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.CamperPlayer.Multicast_OnDamagedGameEvents
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private, NetValidate)
// Parameters:
// unsigned char                  healthStatesLost               (Parm, ZeroConstructor, IsPlainOldData)

void ACamperPlayer::Multicast_OnDamagedGameEvents(unsigned char healthStatesLost)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperPlayer.Multicast_OnDamagedGameEvents");

	ACamperPlayer_Multicast_OnDamagedGameEvents_Params params;
	params.healthStatesLost = healthStatesLost;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.CamperPlayer.Multicast_FireDownedEvent
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)

void ACamperPlayer::Multicast_FireDownedEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperPlayer.Multicast_FireDownedEvent");

	ACamperPlayer_Multicast_FireDownedEvent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.CamperPlayer.Multicast_DebugSetHookedCount
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
// Parameters:
// int                            Count                          (Parm, ZeroConstructor, IsPlainOldData)

void ACamperPlayer::Multicast_DebugSetHookedCount(int Count)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperPlayer.Multicast_DebugSetHookedCount");

	ACamperPlayer_Multicast_DebugSetHookedCount_Params params;
	params.Count = Count;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.CamperPlayer.MoveToOwnerCarryJoint
// (Final, Native, Public, BlueprintCallable)

void ACamperPlayer::MoveToOwnerCarryJoint()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperPlayer.MoveToOwnerCarryJoint");

	ACamperPlayer_MoveToOwnerCarryJoint_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.CamperPlayer.Kill
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           sacrificed                     (Parm, ZeroConstructor, IsPlainOldData)

void ACamperPlayer::Kill(bool sacrificed)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperPlayer.Kill");

	ACamperPlayer_Kill_Params params;
	params.sacrificed = sacrificed;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.CamperPlayer.IsUnintentionallyImmobilized
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ACamperPlayer::IsUnintentionallyImmobilized()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperPlayer.IsUnintentionallyImmobilized");

	ACamperPlayer_IsUnintentionallyImmobilized_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.CamperPlayer.IsTrapped
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ACamperPlayer::IsTrapped()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperPlayer.IsTrapped");

	ACamperPlayer_IsTrapped_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.CamperPlayer.IsTotallyInsane
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ACamperPlayer::IsTotallyInsane()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperPlayer.IsTotallyInsane");

	ACamperPlayer_IsTotallyInsane_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.CamperPlayer.IsSuccessfullyHidden
// (Final, Native, Public, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ACamperPlayer::IsSuccessfullyHidden()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperPlayer.IsSuccessfullyHidden");

	ACamperPlayer_IsSuccessfullyHidden_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.CamperPlayer.IsSacrificed
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ACamperPlayer::IsSacrificed()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperPlayer.IsSacrificed");

	ACamperPlayer_IsSacrificed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.CamperPlayer.IsOnHitSprintEffectActive
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ACamperPlayer::IsOnHitSprintEffectActive()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperPlayer.IsOnHitSprintEffectActive");

	ACamperPlayer_IsOnHitSprintEffectActive_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.CamperPlayer.IsObsessionTarget
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ACamperPlayer::IsObsessionTarget()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperPlayer.IsObsessionTarget");

	ACamperPlayer_IsObsessionTarget_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.CamperPlayer.IsMovementGuided
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ACamperPlayer::IsMovementGuided()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperPlayer.IsMovementGuided");

	ACamperPlayer_IsMovementGuided_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.CamperPlayer.IsKO
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ACamperPlayer::IsKO()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperPlayer.IsKO");

	ACamperPlayer_IsKO_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.CamperPlayer.IsInsideCloset
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ACamperPlayer::IsInsideCloset()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperPlayer.IsInsideCloset");

	ACamperPlayer_IsInsideCloset_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.CamperPlayer.IsInNeed
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ACamperPlayer::IsInNeed()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperPlayer.IsInNeed");

	ACamperPlayer_IsInNeed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.CamperPlayer.IsInjuredBleedoutTimerExpired
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ACamperPlayer::IsInjuredBleedoutTimerExpired()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperPlayer.IsInjuredBleedoutTimerExpired");

	ACamperPlayer_IsInjuredBleedoutTimerExpired_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.CamperPlayer.IsInjured
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ACamperPlayer::IsInjured()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperPlayer.IsInjured");

	ACamperPlayer_IsInjured_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.CamperPlayer.IsInInjuredBleedout
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ACamperPlayer::IsInInjuredBleedout()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperPlayer.IsInInjuredBleedout");

	ACamperPlayer_IsInInjuredBleedout_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.CamperPlayer.IsInChase
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ACamperPlayer::IsInChase()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperPlayer.IsInChase");

	ACamperPlayer_IsInChase_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.CamperPlayer.IsInBasement
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ACamperPlayer::IsInBasement()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperPlayer.IsInBasement");

	ACamperPlayer_IsInBasement_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.CamperPlayer.IsImmobilized
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ACamperPlayer::IsImmobilized()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperPlayer.IsImmobilized");

	ACamperPlayer_IsImmobilized_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.CamperPlayer.IsHooked
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ACamperPlayer::IsHooked()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperPlayer.IsHooked");

	ACamperPlayer_IsHooked_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.CamperPlayer.IsHealthy
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ACamperPlayer::IsHealthy()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperPlayer.IsHealthy");

	ACamperPlayer_IsHealthy_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.CamperPlayer.IsHealingTimerExpired
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ACamperPlayer::IsHealingTimerExpired()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperPlayer.IsHealingTimerExpired");

	ACamperPlayer_IsHealingTimerExpired_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.CamperPlayer.IsGuidedBySlasher
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ACamperPlayer::IsGuidedBySlasher()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperPlayer.IsGuidedBySlasher");

	ACamperPlayer_IsGuidedBySlasher_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.CamperPlayer.IsEscaped
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ACamperPlayer::IsEscaped()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperPlayer.IsEscaped");

	ACamperPlayer_IsEscaped_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.CamperPlayer.IsDyingTimerExpired
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ACamperPlayer::IsDyingTimerExpired()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperPlayer.IsDyingTimerExpired");

	ACamperPlayer_IsDyingTimerExpired_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.CamperPlayer.IsDrainTimerExpired
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ACamperPlayer::IsDrainTimerExpired()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperPlayer.IsDrainTimerExpired");

	ACamperPlayer_IsDrainTimerExpired_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.CamperPlayer.IsDeadOrInParadise
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ACamperPlayer::IsDeadOrInParadise()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperPlayer.IsDeadOrInParadise");

	ACamperPlayer_IsDeadOrInParadise_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.CamperPlayer.IsDead
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ACamperPlayer::IsDead()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperPlayer.IsDead");

	ACamperPlayer_IsDead_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.CamperPlayer.IsCrawling
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ACamperPlayer::IsCrawling()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperPlayer.IsCrawling");

	ACamperPlayer_IsCrawling_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.CamperPlayer.IsCameraDetached
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ACamperPlayer::IsCameraDetached()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperPlayer.IsCameraDetached");

	ACamperPlayer_IsCameraDetached_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.CamperPlayer.IsCameraAttached
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ACamperPlayer::IsCameraAttached()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperPlayer.IsCameraAttached");

	ACamperPlayer_IsCameraAttached_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.CamperPlayer.IsBeingPutOnHook
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ACamperPlayer::IsBeingPutOnHook()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperPlayer.IsBeingPutOnHook");

	ACamperPlayer_IsBeingPutOnHook_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.CamperPlayer.IsBeingPutDown
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ACamperPlayer::IsBeingPutDown()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperPlayer.IsBeingPutDown");

	ACamperPlayer_IsBeingPutDown_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.CamperPlayer.IsBeingPickedUp
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ACamperPlayer::IsBeingPickedUp()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperPlayer.IsBeingPickedUp");

	ACamperPlayer_IsBeingPickedUp_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.CamperPlayer.IsBeingKilled
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ACamperPlayer::IsBeingKilled()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperPlayer.IsBeingKilled");

	ACamperPlayer_IsBeingKilled_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.CamperPlayer.IsBeingInteractedWith
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ACamperPlayer::IsBeingInteractedWith()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperPlayer.IsBeingInteractedWith");

	ACamperPlayer_IsBeingInteractedWith_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.CamperPlayer.IsBeingHealed
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ACamperPlayer::IsBeingHealed()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperPlayer.IsBeingHealed");

	ACamperPlayer_IsBeingHealed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.CamperPlayer.IsBeingChased
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ACamperPlayer::IsBeingChased()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperPlayer.IsBeingChased");

	ACamperPlayer_IsBeingChased_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.CamperPlayer.IsBeingCarried
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ACamperPlayer::IsBeingCarried()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperPlayer.IsBeingCarried");

	ACamperPlayer_IsBeingCarried_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.CamperPlayer.IncrementHookedBasementCount
// (Final, Native, Public, BlueprintCallable)

void ACamperPlayer::IncrementHookedBasementCount()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperPlayer.IncrementHookedBasementCount");

	ACamperPlayer_IncrementHookedBasementCount_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.CamperPlayer.IncreaseHPSlotSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          percent                        (Parm, ZeroConstructor, IsPlainOldData)

void ACamperPlayer::IncreaseHPSlotSize(float percent)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperPlayer.IncreaseHPSlotSize");

	ACamperPlayer_IncreaseHPSlotSize_Params params;
	params.percent = percent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.CamperPlayer.HasReverseBearTrap
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ACamperPlayer::HasReverseBearTrap()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperPlayer.HasReverseBearTrap");

	ACamperPlayer_HasReverseBearTrap_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.CamperPlayer.HasHitEvents
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ACamperPlayer::HasHitEvents()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperPlayer.HasHitEvents");

	ACamperPlayer_HasHitEvents_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.CamperPlayer.HasGuidedAction
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ACamperPlayer::HasGuidedAction()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperPlayer.HasGuidedAction");

	ACamperPlayer_HasGuidedAction_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.CamperPlayer.GetWiggleFreeChargePercent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ACamperPlayer::GetWiggleFreeChargePercent()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperPlayer.GetWiggleFreeChargePercent");

	ACamperPlayer_GetWiggleFreeChargePercent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.CamperPlayer.GetToAimPointRotation
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FRotator                ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FRotator ACamperPlayer::GetToAimPointRotation()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperPlayer.GetToAimPointRotation");

	ACamperPlayer_GetToAimPointRotation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.CamperPlayer.GetStillness
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ACamperPlayer::GetStillness()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperPlayer.GetStillness");

	ACamperPlayer_GetStillness_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.CamperPlayer.GetSpringArmComponent
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class UDBDSpringArmComponent*  ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UDBDSpringArmComponent* ACamperPlayer::GetSpringArmComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperPlayer.GetSpringArmComponent");

	ACamperPlayer_GetSpringArmComponent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.CamperPlayer.GetRevealedSurvivor
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ACamperPlayer*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ACamperPlayer* ACamperPlayer::GetRevealedSurvivor()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperPlayer.GetRevealedSurvivor");

	ACamperPlayer_GetRevealedSurvivor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.CamperPlayer.GetPercentInjuredBleedoutTimer
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ACamperPlayer::GetPercentInjuredBleedoutTimer()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperPlayer.GetPercentInjuredBleedoutTimer");

	ACamperPlayer_GetPercentInjuredBleedoutTimer_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.CamperPlayer.GetPercentHealingTimer
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ACamperPlayer::GetPercentHealingTimer()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperPlayer.GetPercentHealingTimer");

	ACamperPlayer_GetPercentHealingTimer_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.CamperPlayer.GetPercentDyingTimer
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ACamperPlayer::GetPercentDyingTimer()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperPlayer.GetPercentDyingTimer");

	ACamperPlayer_GetPercentDyingTimer_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.CamperPlayer.GetPercentDrainTimer
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ACamperPlayer::GetPercentDrainTimer()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperPlayer.GetPercentDrainTimer");

	ACamperPlayer_GetPercentDrainTimer_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.CamperPlayer.GetOverlappingEscape
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AActor* ACamperPlayer::GetOverlappingEscape()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperPlayer.GetOverlappingEscape");

	ACamperPlayer_GetOverlappingEscape_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.CamperPlayer.GetObsessionTargetWeight
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ACamperPlayer::GetObsessionTargetWeight()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperPlayer.GetObsessionTargetWeight");

	ACamperPlayer_GetObsessionTargetWeight_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.CamperPlayer.GetNumberOfEntityRenderRegions
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int ACamperPlayer::GetNumberOfEntityRenderRegions()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperPlayer.GetNumberOfEntityRenderRegions");

	ACamperPlayer_GetNumberOfEntityRenderRegions_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.CamperPlayer.GetMontageFollower
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UAnimationMontageSlave*  ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UAnimationMontageSlave* ACamperPlayer::GetMontageFollower()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperPlayer.GetMontageFollower");

	ACamperPlayer_GetMontageFollower_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.CamperPlayer.GetMadnessTierBPNative
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int ACamperPlayer::GetMadnessTierBPNative()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperPlayer.GetMadnessTierBPNative");

	ACamperPlayer_GetMadnessTierBPNative_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.CamperPlayer.GetImmobilizedState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TEnumAsByte<ECamperImmobilizeState> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

TEnumAsByte<ECamperImmobilizeState> ACamperPlayer::GetImmobilizedState()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperPlayer.GetImmobilizedState");

	ACamperPlayer_GetImmobilizedState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.CamperPlayer.GetHookedBasementCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int ACamperPlayer::GetHookedBasementCount()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperPlayer.GetHookedBasementCount");

	ACamperPlayer_GetHookedBasementCount_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.CamperPlayer.GetGuidedAction
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TEnumAsByte<ECamperGuidedAction> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

TEnumAsByte<ECamperGuidedAction> ACamperPlayer::GetGuidedAction()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperPlayer.GetGuidedAction");

	ACamperPlayer_GetGuidedAction_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.CamperPlayer.GetEntityRenderRegionAtIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            InIndex                        (Parm, ZeroConstructor, IsPlainOldData)
// class UDBDClipRegionComponent* ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UDBDClipRegionComponent* ACamperPlayer::GetEntityRenderRegionAtIndex(int InIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperPlayer.GetEntityRenderRegionAtIndex");

	ACamperPlayer_GetEntityRenderRegionAtIndex_Params params;
	params.InIndex = InIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.CamperPlayer.GetDropStaggerTimeLeft
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ACamperPlayer::GetDropStaggerTimeLeft()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperPlayer.GetDropStaggerTimeLeft");

	ACamperPlayer_GetDropStaggerTimeLeft_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.CamperPlayer.GetDropStaggerPercentTimeElapsed
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ACamperPlayer::GetDropStaggerPercentTimeElapsed()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperPlayer.GetDropStaggerPercentTimeElapsed");

	ACamperPlayer_GetDropStaggerPercentTimeElapsed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.CamperPlayer.GetDamageState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TEnumAsByte<ECamperDamageState> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

TEnumAsByte<ECamperDamageState> ACamperPlayer::GetDamageState()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperPlayer.GetDamageState");

	ACamperPlayer_GetDamageState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.CamperPlayer.GetCurrentTotalHealthBarPercent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ACamperPlayer::GetCurrentTotalHealthBarPercent()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperPlayer.GetCurrentTotalHealthBarPercent");

	ACamperPlayer_GetCurrentTotalHealthBarPercent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.CamperPlayer.GetCurrentHPSlot
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UChargeableComponent*    ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UChargeableComponent* ACamperPlayer::GetCurrentHPSlot()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperPlayer.GetCurrentHPSlot");

	ACamperPlayer_GetCurrentHPSlot_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.CamperPlayer.GetCamperStillnessComponent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UCamperStillnessTrackerComponent* ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UCamperStillnessTrackerComponent* ACamperPlayer::GetCamperStillnessComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperPlayer.GetCamperStillnessComponent");

	ACamperPlayer_GetCamperStillnessComponent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.CamperPlayer.GetCamperData
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UDBDCamperData*          ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UDBDCamperData* ACamperPlayer::GetCamperData()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperPlayer.GetCamperData");

	ACamperPlayer_GetCamperData_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.CamperPlayer.GetAllEntityRenderRegions
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class UDBDClipRegionComponent*> ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<class UDBDClipRegionComponent*> ACamperPlayer::GetAllEntityRenderRegions()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperPlayer.GetAllEntityRenderRegions");

	ACamperPlayer_GetAllEntityRenderRegions_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.CamperPlayer.GetAimPoint
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FVector ACamperPlayer::GetAimPoint()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperPlayer.GetAimPoint");

	ACamperPlayer_GetAimPoint_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.CamperPlayer.Escape
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                  Escape                         (Parm, ZeroConstructor, IsPlainOldData)

void ACamperPlayer::Escape(class AActor* Escape)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperPlayer.Escape");

	ACamperPlayer_Escape_Params params;
	params.Escape = Escape;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.CamperPlayer.DetachFromGuidingPlayer
// (Final, Native, Public, BlueprintCallable)

void ACamperPlayer::DetachFromGuidingPlayer()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperPlayer.DetachFromGuidingPlayer");

	ACamperPlayer_DetachFromGuidingPlayer_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.CamperPlayer.DetachCamera
// (Final, Native, Public, BlueprintCallable)

void ACamperPlayer::DetachCamera()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperPlayer.DetachCamera");

	ACamperPlayer_DetachCamera_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.CamperPlayer.DBDApplyDamage
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// bool                           didDamage                      (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// bool                           causedKO                       (Parm, OutParm, ZeroConstructor, IsPlainOldData)

void ACamperPlayer::DBDApplyDamage(bool* didDamage, bool* causedKO)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperPlayer.DBDApplyDamage");

	ACamperPlayer_DBDApplyDamage_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (didDamage != nullptr)
		*didDamage = params.didDamage;
	if (causedKO != nullptr)
		*causedKO = params.causedKO;
}


// Function DeadByDaylight.CamperPlayer.DBD_LeaveParadise
// (Final, Exec, Native, Public, BlueprintCallable)

void ACamperPlayer::DBD_LeaveParadise()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperPlayer.DBD_LeaveParadise");

	ACamperPlayer_DBD_LeaveParadise_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.CamperPlayer.DBD_ForceRun
// (Final, Exec, Native, Public)
// Parameters:
// bool                           Forced                         (Parm, ZeroConstructor, IsPlainOldData)

void ACamperPlayer::DBD_ForceRun(bool Forced)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperPlayer.DBD_ForceRun");

	ACamperPlayer_DBD_ForceRun_Params params;
	params.Forced = Forced;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.CamperPlayer.DBD_CheatEscaped
// (Final, Exec, Native, Public, BlueprintCallable)

void ACamperPlayer::DBD_CheatEscaped()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperPlayer.DBD_CheatEscaped");

	ACamperPlayer_DBD_CheatEscaped_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.CamperPlayer.DBD_AutoLeftRightMash
// (Final, Exec, Native, Public)
// Parameters:
// bool                           Enabled                        (Parm, ZeroConstructor, IsPlainOldData)

void ACamperPlayer::DBD_AutoLeftRightMash(bool Enabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperPlayer.DBD_AutoLeftRightMash");

	ACamperPlayer_DBD_AutoLeftRightMash_Params params;
	params.Enabled = Enabled;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.CamperPlayer.DBD_AutoInteractionMash
// (Final, Exec, Native, Public)
// Parameters:
// bool                           Enabled                        (Parm, ZeroConstructor, IsPlainOldData)

void ACamperPlayer::DBD_AutoInteractionMash(bool Enabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperPlayer.DBD_AutoInteractionMash");

	ACamperPlayer_DBD_AutoInteractionMash_Params params;
	params.Enabled = Enabled;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.CamperPlayer.DamageStateChangedEvent
// (Event, Public, BlueprintEvent)
// Parameters:
// TEnumAsByte<ECamperDamageState> DamageState                    (Parm, ZeroConstructor, IsPlainOldData)

void ACamperPlayer::DamageStateChangedEvent(TEnumAsByte<ECamperDamageState> DamageState)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperPlayer.DamageStateChangedEvent");

	ACamperPlayer_DamageStateChangedEvent_Params params;
	params.DamageState = DamageState;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.CamperPlayer.ComputeHookEscapeResult
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ACamperPlayer::ComputeHookEscapeResult()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperPlayer.ComputeHookEscapeResult");

	ACamperPlayer_ComputeHookEscapeResult_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.CamperPlayer.ComputeBeartrapEscapeResult
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ACamperPlayer::ComputeBeartrapEscapeResult()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperPlayer.ComputeBeartrapEscapeResult");

	ACamperPlayer_ComputeBeartrapEscapeResult_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.CamperPlayer.Client_OnSlashedOutOfTrap
// (Net, NetReliable, Native, Event, Public, NetClient, BlueprintCallable, NetValidate)
// Parameters:
// class ADBDPlayer*              Requester                      (Parm, ZeroConstructor, IsPlainOldData)

void ACamperPlayer::Client_OnSlashedOutOfTrap(class ADBDPlayer* Requester)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperPlayer.Client_OnSlashedOutOfTrap");

	ACamperPlayer_Client_OnSlashedOutOfTrap_Params params;
	params.Requester = Requester;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.CamperPlayer.CanStruggle
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ACamperPlayer::CanStruggle()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperPlayer.CanStruggle");

	ACamperPlayer_CanStruggle_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.CamperPlayer.CanRushQuietly
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ACamperPlayer::CanRushQuietly()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperPlayer.CanRushQuietly");

	ACamperPlayer_CanRushQuietly_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.CamperPlayer.CanHealSelf
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ACamperPlayer::CanHealSelf()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperPlayer.CanHealSelf");

	ACamperPlayer_CanHealSelf_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.CamperPlayer.CanGainInsanity
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ACamperPlayer::CanGainInsanity()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperPlayer.CanGainInsanity");

	ACamperPlayer_CanGainInsanity_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.CamperPlayer.CanBeShocked
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ACamperPlayer::CanBeShocked()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperPlayer.CanBeShocked");

	ACamperPlayer_CanBeShocked_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.CamperPlayer.CanBePickedUp
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ACamperPlayer::CanBePickedUp()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperPlayer.CanBePickedUp");

	ACamperPlayer_CanBePickedUp_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.CamperPlayer.CanBeKilled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ACamperPlayer::CanBeKilled()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperPlayer.CanBeKilled");

	ACamperPlayer_CanBeKilled_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.CamperPlayer.CanBeImmediatelyKO
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ACamperPlayer::CanBeImmediatelyKO()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperPlayer.CanBeImmediatelyKO");

	ACamperPlayer_CanBeImmediatelyKO_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.CamperPlayer.CanBeHealedFromInjured
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ACamperPlayer::CanBeHealedFromInjured()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperPlayer.CanBeHealedFromInjured");

	ACamperPlayer_CanBeHealedFromInjured_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.CamperPlayer.CanBeHealed
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ACamperPlayer::CanBeHealed()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperPlayer.CanBeHealed");

	ACamperPlayer_CanBeHealed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.CamperPlayer.CanBecomeHealthy
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ACamperPlayer::CanBecomeHealthy()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperPlayer.CanBecomeHealthy");

	ACamperPlayer_CanBecomeHealthy_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.CamperPlayer.CanBeChased
// (Final, Native, Public, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ACamperPlayer::CanBeChased()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperPlayer.CanBeChased");

	ACamperPlayer_CanBeChased_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.CamperPlayer.AuthoritySetHealth
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<ECamperDamageState> health                         (Parm, ZeroConstructor, IsPlainOldData)

void ACamperPlayer::AuthoritySetHealth(TEnumAsByte<ECamperDamageState> health)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperPlayer.AuthoritySetHealth");

	ACamperPlayer_AuthoritySetHealth_Params params;
	params.health = health;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.CamperPlayer.Authority_SetDrainTimerPercentLeft
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// float                          percentTime                    (Parm, ZeroConstructor, IsPlainOldData)

void ACamperPlayer::Authority_SetDrainTimerPercentLeft(float percentTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperPlayer.Authority_SetDrainTimerPercentLeft");

	ACamperPlayer_Authority_SetDrainTimerPercentLeft_Params params;
	params.percentTime = percentTime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.CamperPlayer.Authority_SetDrainTimerPercentElapsed
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// float                          percentTime                    (Parm, ZeroConstructor, IsPlainOldData)

void ACamperPlayer::Authority_SetDrainTimerPercentElapsed(float percentTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperPlayer.Authority_SetDrainTimerPercentElapsed");

	ACamperPlayer_Authority_SetDrainTimerPercentElapsed_Params params;
	params.percentTime = percentTime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.CamperPlayer.Authority_ResetWiggleFreeCharge
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)

void ACamperPlayer::Authority_ResetWiggleFreeCharge()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperPlayer.Authority_ResetWiggleFreeCharge");

	ACamperPlayer_Authority_ResetWiggleFreeCharge_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.CamperPlayer.Authority_OnSlashed
// (BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class ADBDPlayer*              attacker                       (Parm, ZeroConstructor, IsPlainOldData)

void ACamperPlayer::Authority_OnSlashed(class ADBDPlayer* attacker)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperPlayer.Authority_OnSlashed");

	ACamperPlayer_Authority_OnSlashed_Params params;
	params.attacker = attacker;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.CamperPlayer.Authority_OnFailedStruggling
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class UInteractionDefinition*  Interaction                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void ACamperPlayer::Authority_OnFailedStruggling(class UInteractionDefinition* Interaction)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperPlayer.Authority_OnFailedStruggling");

	ACamperPlayer_Authority_OnFailedStruggling_Params params;
	params.Interaction = Interaction;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.CamperPlayer.Authority_DropItemAtLastSafePosition
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)

void ACamperPlayer::Authority_DropItemAtLastSafePosition()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperPlayer.Authority_DropItemAtLastSafePosition");

	ACamperPlayer_Authority_DropItemAtLastSafePosition_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.CamperPlayer.Authority_ApplyDamageToState
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// bool                           didDamage                      (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// bool                           causedKO                       (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<ECamperDamageState> targetState                    (Parm, ZeroConstructor, IsPlainOldData)

void ACamperPlayer::Authority_ApplyDamageToState(TEnumAsByte<ECamperDamageState> targetState, bool* didDamage, bool* causedKO)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperPlayer.Authority_ApplyDamageToState");

	ACamperPlayer_Authority_ApplyDamageToState_Params params;
	params.targetState = targetState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (didDamage != nullptr)
		*didDamage = params.didDamage;
	if (causedKO != nullptr)
		*causedKO = params.causedKO;
}


// Function DeadByDaylight.CamperPlayer.Authority_AddWiggleFreeChargePercentNoModifiers
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// float                          ChargePercent                  (Parm, ZeroConstructor, IsPlainOldData)

void ACamperPlayer::Authority_AddWiggleFreeChargePercentNoModifiers(float ChargePercent)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperPlayer.Authority_AddWiggleFreeChargePercentNoModifiers");

	ACamperPlayer_Authority_AddWiggleFreeChargePercentNoModifiers_Params params;
	params.ChargePercent = ChargePercent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.CamperPlayer.Authority_AddWiggleFreeCharge
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// float                          charge                         (Parm, ZeroConstructor, IsPlainOldData)

void ACamperPlayer::Authority_AddWiggleFreeCharge(float charge)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperPlayer.Authority_AddWiggleFreeCharge");

	ACamperPlayer_Authority_AddWiggleFreeCharge_Params params;
	params.charge = charge;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.CamperPlayer.AttachToGuidingPlayer
// (Final, Native, Public, BlueprintCallable)

void ACamperPlayer::AttachToGuidingPlayer()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperPlayer.AttachToGuidingPlayer");

	ACamperPlayer_AttachToGuidingPlayer_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.CamperPlayer.ApplyHeal
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// int                            healAmount                     (Parm, ZeroConstructor, IsPlainOldData)

void ACamperPlayer::ApplyHeal(int healAmount)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperPlayer.ApplyHeal");

	ACamperPlayer_ApplyHeal_Params params;
	params.healAmount = healAmount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.SlasherPlayer.UpdateRageTierEffect
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// int                            previousTier                   (Parm, ZeroConstructor, IsPlainOldData)
// int                            currentTier                    (Parm, ZeroConstructor, IsPlainOldData)

void ASlasherPlayer::UpdateRageTierEffect(int previousTier, int currentTier)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.SlasherPlayer.UpdateRageTierEffect");

	ASlasherPlayer_UpdateRageTierEffect_Params params;
	params.previousTier = previousTier;
	params.currentTier = currentTier;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.SlasherPlayer.TriggerPutDownAnimation
// (Event, Public, BlueprintEvent)

void ASlasherPlayer::TriggerPutDownAnimation()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.SlasherPlayer.TriggerPutDownAnimation");

	ASlasherPlayer_TriggerPutDownAnimation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.SlasherPlayer.TriggerPickUpAnimation
// (Event, Public, BlueprintEvent)

void ASlasherPlayer::TriggerPickUpAnimation()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.SlasherPlayer.TriggerPickUpAnimation");

	ASlasherPlayer_TriggerPickUpAnimation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.SlasherPlayer.SpawnSlasherPower
// (Native, Event, Protected, BlueprintEvent)

void ASlasherPlayer::SpawnSlasherPower()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.SlasherPlayer.SpawnSlasherPower");

	ASlasherPlayer_SpawnSlasherPower_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.SlasherPlayer.ShouldApplyBloodlustSpeedModifier
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ASlasherPlayer::ShouldApplyBloodlustSpeedModifier()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.SlasherPlayer.ShouldApplyBloodlustSpeedModifier");

	ASlasherPlayer_ShouldApplyBloodlustSpeedModifier_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.SlasherPlayer.SetStalkTierWalkSpeedMultiplier
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          stalkTierWalkSpeedMultiplier   (Parm, ZeroConstructor, IsPlainOldData)

void ASlasherPlayer::SetStalkTierWalkSpeedMultiplier(float stalkTierWalkSpeedMultiplier)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.SlasherPlayer.SetStalkTierWalkSpeedMultiplier");

	ASlasherPlayer_SetStalkTierWalkSpeedMultiplier_Params params;
	params.stalkTierWalkSpeedMultiplier = stalkTierWalkSpeedMultiplier;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.SlasherPlayer.SetStalkTierCarrySpeedMultiplier
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          stalkTierCarrySpeedMultiplier  (Parm, ZeroConstructor, IsPlainOldData)

void ASlasherPlayer::SetStalkTierCarrySpeedMultiplier(float stalkTierCarrySpeedMultiplier)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.SlasherPlayer.SetStalkTierCarrySpeedMultiplier");

	ASlasherPlayer_SetStalkTierCarrySpeedMultiplier_Params params;
	params.stalkTierCarrySpeedMultiplier = stalkTierCarrySpeedMultiplier;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.SlasherPlayer.SetLightIntensity
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          Intensity                      (Parm, ZeroConstructor, IsPlainOldData)

void ASlasherPlayer::SetLightIntensity(float Intensity)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.SlasherPlayer.SetLightIntensity");

	ASlasherPlayer_SetLightIntensity_Params params;
	params.Intensity = Intensity;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.SlasherPlayer.SetIsKilling
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           isKilling                      (Parm, ZeroConstructor, IsPlainOldData)

void ASlasherPlayer::SetIsKilling(bool isKilling)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.SlasherPlayer.SetIsKilling");

	ASlasherPlayer_SetIsKilling_Params params;
	params.isKilling = isKilling;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.SlasherPlayer.SetIsInBlinkCooldown
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           IsInBlinkCooldown              (Parm, ZeroConstructor, IsPlainOldData)

void ASlasherPlayer::SetIsInBlinkCooldown(bool IsInBlinkCooldown)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.SlasherPlayer.SetIsInBlinkCooldown");

	ASlasherPlayer_SetIsInBlinkCooldown_Params params;
	params.IsInBlinkCooldown = IsInBlinkCooldown;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.SlasherPlayer.SetIsChainBlinking
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           IsChainBlinking                (Parm, ZeroConstructor, IsPlainOldData)

void ASlasherPlayer::SetIsChainBlinking(bool IsChainBlinking)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.SlasherPlayer.SetIsChainBlinking");

	ASlasherPlayer_SetIsChainBlinking_Params params;
	params.IsChainBlinking = IsChainBlinking;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.SlasherPlayer.SetInteractingCamperBlueprint
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class ACamperPlayer*           camper                         (Parm, ZeroConstructor, IsPlainOldData)

void ASlasherPlayer::SetInteractingCamperBlueprint(class ACamperPlayer* camper)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.SlasherPlayer.SetInteractingCamperBlueprint");

	ASlasherPlayer_SetInteractingCamperBlueprint_Params params;
	params.camper = camper;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.SlasherPlayer.SetGuidedCamper
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ACamperPlayer*           camper                         (Parm, ZeroConstructor, IsPlainOldData)

void ASlasherPlayer::SetGuidedCamper(class ACamperPlayer* camper)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.SlasherPlayer.SetGuidedCamper");

	ASlasherPlayer_SetGuidedCamper_Params params;
	params.camper = camper;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.SlasherPlayer.SetGuidedAction
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<ESlasherGuidedAction> Action                         (Parm, ZeroConstructor, IsPlainOldData)

void ASlasherPlayer::SetGuidedAction(TEnumAsByte<ESlasherGuidedAction> Action)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.SlasherPlayer.SetGuidedAction");

	ASlasherPlayer_SetGuidedAction_Params params;
	params.Action = Action;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.SlasherPlayer.SetChainsawSprinting
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           chainsawSprinting              (Parm, ZeroConstructor, IsPlainOldData)

void ASlasherPlayer::SetChainsawSprinting(bool chainsawSprinting)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.SlasherPlayer.SetChainsawSprinting");

	ASlasherPlayer_SetChainsawSprinting_Params params;
	params.chainsawSprinting = chainsawSprinting;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.SlasherPlayer.SetBeingWiggled
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           Value                          (Parm, ZeroConstructor, IsPlainOldData)

void ASlasherPlayer::SetBeingWiggled(bool Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.SlasherPlayer.SetBeingWiggled");

	ASlasherPlayer_SetBeingWiggled_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.SlasherPlayer.SetBaseTerrorRadius
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          baseTerrorRadius               (Parm, ZeroConstructor, IsPlainOldData)

void ASlasherPlayer::SetBaseTerrorRadius(float baseTerrorRadius)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.SlasherPlayer.SetBaseTerrorRadius");

	ASlasherPlayer_SetBaseTerrorRadius_Params params;
	params.baseTerrorRadius = baseTerrorRadius;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.SlasherPlayer.SetAttackDetectionZoneSet
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// TEnumAsByte<EAttackZoneSet>    attackZoneSet                  (Parm, ZeroConstructor, IsPlainOldData)

void ASlasherPlayer::SetAttackDetectionZoneSet(TEnumAsByte<EAttackZoneSet> attackZoneSet)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.SlasherPlayer.SetAttackDetectionZoneSet");

	ASlasherPlayer_SetAttackDetectionZoneSet_Params params;
	params.attackZoneSet = attackZoneSet;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.SlasherPlayer.Server_SetLungeType
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// int                            lungeType                      (Parm, ZeroConstructor, IsPlainOldData)

void ASlasherPlayer::Server_SetLungeType(int lungeType)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.SlasherPlayer.Server_SetLungeType");

	ASlasherPlayer_Server_SetLungeType_Params params;
	params.lungeType = lungeType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.SlasherPlayer.Server_SendAttackInput
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// bool                           Pressed                        (Parm, ZeroConstructor, IsPlainOldData)

void ASlasherPlayer::Server_SendAttackInput(bool Pressed)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.SlasherPlayer.Server_SendAttackInput");

	ASlasherPlayer_Server_SendAttackInput_Params params;
	params.Pressed = Pressed;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.SlasherPlayer.Server_AllowKilling
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// int8_t                         numKills                       (Parm, ZeroConstructor, IsPlainOldData)

void ASlasherPlayer::Server_AllowKilling(int8_t numKills)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.SlasherPlayer.Server_AllowKilling");

	ASlasherPlayer_Server_AllowKilling_Params params;
	params.numKills = numKills;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.SlasherPlayer.OnSurvivorsLeftChanged
// (Final, Native, Private)
// Parameters:
// int                            survivorRemaining              (Parm, ZeroConstructor, IsPlainOldData)

void ASlasherPlayer::OnSurvivorsLeftChanged(int survivorRemaining)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.SlasherPlayer.OnSurvivorsLeftChanged");

	ASlasherPlayer_OnSurvivorsLeftChanged_Params params;
	params.survivorRemaining = survivorRemaining;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.SlasherPlayer.OnSurvivorKilled
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ACamperPlayer*           playerToKill                   (Parm, ZeroConstructor, IsPlainOldData)
// bool                           consumeKill                    (Parm, ZeroConstructor, IsPlainOldData)

void ASlasherPlayer::OnSurvivorKilled(class ACamperPlayer* playerToKill, bool consumeKill)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.SlasherPlayer.OnSurvivorKilled");

	ASlasherPlayer_OnSurvivorKilled_Params params;
	params.playerToKill = playerToKill;
	params.consumeKill = consumeKill;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.SlasherPlayer.OnSuccessfulInterruption
// (Event, Public, BlueprintEvent)
// Parameters:
// class ACamperPlayer*           interruptedSurvivor            (Parm, ZeroConstructor, IsPlainOldData)

void ASlasherPlayer::OnSuccessfulInterruption(class ACamperPlayer* interruptedSurvivor)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.SlasherPlayer.OnSuccessfulInterruption");

	ASlasherPlayer_OnSuccessfulInterruption_Params params;
	params.interruptedSurvivor = interruptedSurvivor;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.SlasherPlayer.OnStealthChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                           stealth                        (Parm, ZeroConstructor, IsPlainOldData)

void ASlasherPlayer::OnStealthChanged(bool stealth)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.SlasherPlayer.OnStealthChanged");

	ASlasherPlayer_OnStealthChanged_Params params;
	params.stealth = stealth;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.SlasherPlayer.OnStalkModeChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                           stalkMode                      (Parm, ZeroConstructor, IsPlainOldData)

void ASlasherPlayer::OnStalkModeChanged(bool stalkMode)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.SlasherPlayer.OnStalkModeChanged");

	ASlasherPlayer_OnStalkModeChanged_Params params;
	params.stalkMode = stalkMode;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.SlasherPlayer.OnSoundTriggered
// (Final, Native, Private, HasDefaults)
// Parameters:
// class AActor*                  originator                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 Location                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           shouldTrack                    (Parm, ZeroConstructor, IsPlainOldData)
// float                          audibleRange                   (Parm, ZeroConstructor, IsPlainOldData)

void ASlasherPlayer::OnSoundTriggered(class AActor* originator, const struct FVector& Location, bool shouldTrack, float audibleRange)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.SlasherPlayer.OnSoundTriggered");

	ASlasherPlayer_OnSoundTriggered_Params params;
	params.originator = originator;
	params.Location = Location;
	params.shouldTrack = shouldTrack;
	params.audibleRange = audibleRange;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.SlasherPlayer.OnPickupStart_BP
// (Event, Public, BlueprintEvent)

void ASlasherPlayer::OnPickupStart_BP()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.SlasherPlayer.OnPickupStart_BP");

	ASlasherPlayer_OnPickupStart_BP_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.SlasherPlayer.OnPerformingChargableInteraction
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                          Progress                       (Parm, ZeroConstructor, IsPlainOldData)

void ASlasherPlayer::OnPerformingChargableInteraction(float Progress)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.SlasherPlayer.OnPerformingChargableInteraction");

	ASlasherPlayer_OnPerformingChargableInteraction_Params params;
	params.Progress = Progress;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.SlasherPlayer.OnLoudNoiseIndicatorDestroyed
// (Final, Native, Private)

void ASlasherPlayer::OnLoudNoiseIndicatorDestroyed()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.SlasherPlayer.OnLoudNoiseIndicatorDestroyed");

	ASlasherPlayer_OnLoudNoiseIndicatorDestroyed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.SlasherPlayer.OnKillerAbilityUpdateActivate
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// TEnumAsByte<EKillerAbilities>  KillerAbility                  (Parm, ZeroConstructor, IsPlainOldData)
// float                          percent                        (Parm, ZeroConstructor, IsPlainOldData)

void ASlasherPlayer::OnKillerAbilityUpdateActivate(TEnumAsByte<EKillerAbilities> KillerAbility, float percent)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.SlasherPlayer.OnKillerAbilityUpdateActivate");

	ASlasherPlayer_OnKillerAbilityUpdateActivate_Params params;
	params.KillerAbility = KillerAbility;
	params.percent = percent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.SlasherPlayer.OnKillerAbilityEndDeactivate
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// TEnumAsByte<EKillerAbilities>  KillerAbility                  (Parm, ZeroConstructor, IsPlainOldData)
// bool                           Forced                         (Parm, ZeroConstructor, IsPlainOldData)

void ASlasherPlayer::OnKillerAbilityEndDeactivate(TEnumAsByte<EKillerAbilities> KillerAbility, bool Forced)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.SlasherPlayer.OnKillerAbilityEndDeactivate");

	ASlasherPlayer_OnKillerAbilityEndDeactivate_Params params;
	params.KillerAbility = KillerAbility;
	params.Forced = Forced;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.SlasherPlayer.OnKillerAbilityEndActivate
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// TEnumAsByte<EKillerAbilities>  KillerAbility                  (Parm, ZeroConstructor, IsPlainOldData)

void ASlasherPlayer::OnKillerAbilityEndActivate(TEnumAsByte<EKillerAbilities> KillerAbility)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.SlasherPlayer.OnKillerAbilityEndActivate");

	ASlasherPlayer_OnKillerAbilityEndActivate_Params params;
	params.KillerAbility = KillerAbility;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.SlasherPlayer.OnKillerAbilityBeginDeactivate
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// TEnumAsByte<EKillerAbilities>  KillerAbility                  (Parm, ZeroConstructor, IsPlainOldData)
// bool                           Forced                         (Parm, ZeroConstructor, IsPlainOldData)

void ASlasherPlayer::OnKillerAbilityBeginDeactivate(TEnumAsByte<EKillerAbilities> KillerAbility, bool Forced)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.SlasherPlayer.OnKillerAbilityBeginDeactivate");

	ASlasherPlayer_OnKillerAbilityBeginDeactivate_Params params;
	params.KillerAbility = KillerAbility;
	params.Forced = Forced;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.SlasherPlayer.OnKillerAbilityBeginActivate
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// TEnumAsByte<EKillerAbilities>  KillerAbility                  (Parm, ZeroConstructor, IsPlainOldData)

void ASlasherPlayer::OnKillerAbilityBeginActivate(TEnumAsByte<EKillerAbilities> KillerAbility)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.SlasherPlayer.OnKillerAbilityBeginActivate");

	ASlasherPlayer_OnKillerAbilityBeginActivate_Params params;
	params.KillerAbility = KillerAbility;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.SlasherPlayer.OnInvisibilityChargeEmptied
// (Final, Native, Private)

void ASlasherPlayer::OnInvisibilityChargeEmptied()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.SlasherPlayer.OnInvisibilityChargeEmptied");

	ASlasherPlayer_OnInvisibilityChargeEmptied_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.SlasherPlayer.OnInvisibilityBurnoutChargeCompletionChanged
// (Final, Native, Private, HasOutParms)
// Parameters:
// bool                           COMPLETED                      (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class AActor*>          instigators                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)

void ASlasherPlayer::OnInvisibilityBurnoutChargeCompletionChanged(bool COMPLETED, TArray<class AActor*> instigators)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.SlasherPlayer.OnInvisibilityBurnoutChargeCompletionChanged");

	ASlasherPlayer_OnInvisibilityBurnoutChargeCompletionChanged_Params params;
	params.COMPLETED = COMPLETED;
	params.instigators = instigators;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.SlasherPlayer.OnChaseTargetFound
// (Final, Native, Public)
// Parameters:
// class APawn*                   Pawn                           (Parm, ZeroConstructor, IsPlainOldData)

void ASlasherPlayer::OnChaseTargetFound(class APawn* Pawn)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.SlasherPlayer.OnChaseTargetFound");

	ASlasherPlayer_OnChaseTargetFound_Params params;
	params.Pawn = Pawn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.SlasherPlayer.OnCamperHit
// (Event, Public, BlueprintEvent)
// Parameters:
// class ACamperPlayer*           camper                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           showBloodSpatter               (Parm, ZeroConstructor, IsPlainOldData)

void ASlasherPlayer::OnCamperHit(class ACamperPlayer* camper, bool showBloodSpatter)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.SlasherPlayer.OnCamperHit");

	ASlasherPlayer_OnCamperHit_Params params;
	params.camper = camper;
	params.showBloodSpatter = showBloodSpatter;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.SlasherPlayer.OnBlindChargeEmptied
// (Final, Native, Private)

void ASlasherPlayer::OnBlindChargeEmptied()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.SlasherPlayer.OnBlindChargeEmptied");

	ASlasherPlayer_OnBlindChargeEmptied_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.SlasherPlayer.Multicast_SetLungeType
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private, NetValidate)
// Parameters:
// int                            lungeType                      (Parm, ZeroConstructor, IsPlainOldData)

void ASlasherPlayer::Multicast_SetLungeType(int lungeType)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.SlasherPlayer.Multicast_SetLungeType");

	ASlasherPlayer_Multicast_SetLungeType_Params params;
	params.lungeType = lungeType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.SlasherPlayer.Multicast_SetGuidedAction
// (Net, NetReliable, Native, Event, NetMulticast, Public, NetValidate)
// Parameters:
// TEnumAsByte<ESlasherGuidedAction> Action                         (Parm, ZeroConstructor, IsPlainOldData)

void ASlasherPlayer::Multicast_SetGuidedAction(TEnumAsByte<ESlasherGuidedAction> Action)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.SlasherPlayer.Multicast_SetGuidedAction");

	ASlasherPlayer_Multicast_SetGuidedAction_Params params;
	params.Action = Action;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.SlasherPlayer.Multicast_SetAttackDetectionZoneSet
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// TEnumAsByte<EAttackZoneSet>    attackZoneSet                  (Parm, ZeroConstructor, IsPlainOldData)

void ASlasherPlayer::Multicast_SetAttackDetectionZoneSet(TEnumAsByte<EAttackZoneSet> attackZoneSet)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.SlasherPlayer.Multicast_SetAttackDetectionZoneSet");

	ASlasherPlayer_Multicast_SetAttackDetectionZoneSet_Params params;
	params.attackZoneSet = attackZoneSet;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.SlasherPlayer.Multicast_OnChaseStart
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
// Parameters:
// class ACamperPlayer*           camper                         (Parm, ZeroConstructor, IsPlainOldData)

void ASlasherPlayer::Multicast_OnChaseStart(class ACamperPlayer* camper)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.SlasherPlayer.Multicast_OnChaseStart");

	ASlasherPlayer_Multicast_OnChaseStart_Params params;
	params.camper = camper;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.SlasherPlayer.Multicast_OnChaseEnd
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
// Parameters:
// class ACamperPlayer*           camper                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          chaseTime                      (Parm, ZeroConstructor, IsPlainOldData)

void ASlasherPlayer::Multicast_OnChaseEnd(class ACamperPlayer* camper, float chaseTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.SlasherPlayer.Multicast_OnChaseEnd");

	ASlasherPlayer_Multicast_OnChaseEnd_Params params;
	params.camper = camper;
	params.chaseTime = chaseTime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.SlasherPlayer.Multicast_DisplayAttackZones
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// bool                           Display                        (Parm, ZeroConstructor, IsPlainOldData)

void ASlasherPlayer::Multicast_DisplayAttackZones(bool Display)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.SlasherPlayer.Multicast_DisplayAttackZones");

	ASlasherPlayer_Multicast_DisplayAttackZones_Params params;
	params.Display = Display;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.SlasherPlayer.Multicast_DamageTargetNotification
// (Net, NetReliable, Native, Event, NetMulticast, Public, BlueprintCallable, NetValidate)
// Parameters:
// class ADBDPlayer*              Target                         (Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<EAttackType>       attackType                     (Parm, ZeroConstructor, IsPlainOldData)
// bool                           didDamage                      (Parm, ZeroConstructor, IsPlainOldData)

void ASlasherPlayer::Multicast_DamageTargetNotification(class ADBDPlayer* Target, TEnumAsByte<EAttackType> attackType, bool didDamage)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.SlasherPlayer.Multicast_DamageTargetNotification");

	ASlasherPlayer_Multicast_DamageTargetNotification_Params params;
	params.Target = Target;
	params.attackType = attackType;
	params.didDamage = didDamage;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.SlasherPlayer.Multicast_CamperHitAesthetic
// (Net, NetReliable, Native, Event, NetMulticast, Public, BlueprintCallable, NetValidate)
// Parameters:
// class ACamperPlayer*           camper                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           causedKO                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           showBloodSpatter               (Parm, ZeroConstructor, IsPlainOldData)

void ASlasherPlayer::Multicast_CamperHitAesthetic(class ACamperPlayer* camper, bool causedKO, bool showBloodSpatter)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.SlasherPlayer.Multicast_CamperHitAesthetic");

	ASlasherPlayer_Multicast_CamperHitAesthetic_Params params;
	params.camper = camper;
	params.causedKO = causedKO;
	params.showBloodSpatter = showBloodSpatter;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.SlasherPlayer.Local_RequestAttack
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<EAttackType>       attackType                     (Parm, ZeroConstructor, IsPlainOldData)

void ASlasherPlayer::Local_RequestAttack(TEnumAsByte<EAttackType> attackType)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.SlasherPlayer.Local_RequestAttack");

	ASlasherPlayer_Local_RequestAttack_Params params;
	params.attackType = attackType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.SlasherPlayer.IsUncloaking
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ASlasherPlayer::IsUncloaking()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.SlasherPlayer.IsUncloaking");

	ASlasherPlayer_IsUncloaking_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.SlasherPlayer.IsInChase
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ASlasherPlayer::IsInChase()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.SlasherPlayer.IsInChase");

	ASlasherPlayer_IsInChase_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.SlasherPlayer.IsInBlinkCooldown
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ASlasherPlayer::IsInBlinkCooldown()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.SlasherPlayer.IsInBlinkCooldown");

	ASlasherPlayer_IsInBlinkCooldown_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.SlasherPlayer.IsImmuneToObservingPlayerDetection
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class ADBDPlayer*              observingPlayer                (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ASlasherPlayer::IsImmuneToObservingPlayerDetection(class ADBDPlayer* observingPlayer)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.SlasherPlayer.IsImmuneToObservingPlayerDetection");

	ASlasherPlayer_IsImmuneToObservingPlayerDetection_Params params;
	params.observingPlayer = observingPlayer;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.SlasherPlayer.IsHooking
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ASlasherPlayer::IsHooking()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.SlasherPlayer.IsHooking");

	ASlasherPlayer_IsHooking_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.SlasherPlayer.IsCloaking
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ASlasherPlayer::IsCloaking()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.SlasherPlayer.IsCloaking");

	ASlasherPlayer_IsCloaking_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.SlasherPlayer.IsChainsawSprinting
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ASlasherPlayer::IsChainsawSprinting()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.SlasherPlayer.IsChainsawSprinting");

	ASlasherPlayer_IsChainsawSprinting_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.SlasherPlayer.IsChainBlinking
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ASlasherPlayer::IsChainBlinking()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.SlasherPlayer.IsChainBlinking");

	ASlasherPlayer_IsChainBlinking_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.SlasherPlayer.IsCarrying
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ASlasherPlayer::IsCarrying()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.SlasherPlayer.IsCarrying");

	ASlasherPlayer_IsCarrying_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.SlasherPlayer.IsASurvivorInTerrorRadius
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ASlasherPlayer::IsASurvivorInTerrorRadius()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.SlasherPlayer.IsASurvivorInTerrorRadius");

	ASlasherPlayer_IsASurvivorInTerrorRadius_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.SlasherPlayer.IsAllowedToKill
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ACamperPlayer*           camper                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ASlasherPlayer::IsAllowedToKill(class ACamperPlayer* camper)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.SlasherPlayer.IsAllowedToKill");

	ASlasherPlayer_IsAllowedToKill_Params params;
	params.camper = camper;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.SlasherPlayer.HasKillerAbility
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TEnumAsByte<EKillerAbilities>  KillerAbility                  (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ASlasherPlayer::HasKillerAbility(TEnumAsByte<EKillerAbilities> KillerAbility)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.SlasherPlayer.HasKillerAbility");

	ASlasherPlayer_HasKillerAbility_Params params;
	params.KillerAbility = KillerAbility;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.SlasherPlayer.GetTerrorRadius
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ASlasherPlayer::GetTerrorRadius()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.SlasherPlayer.GetTerrorRadius");

	ASlasherPlayer_GetTerrorRadius_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.SlasherPlayer.GetStealthRatio
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ASlasherPlayer::GetStealthRatio()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.SlasherPlayer.GetStealthRatio");

	ASlasherPlayer_GetStealthRatio_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.SlasherPlayer.GetStalkTierWalkSpeedMultiplier
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ASlasherPlayer::GetStalkTierWalkSpeedMultiplier()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.SlasherPlayer.GetStalkTierWalkSpeedMultiplier");

	ASlasherPlayer_GetStalkTierWalkSpeedMultiplier_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.SlasherPlayer.GetStalkTierCarrySpeedMultplier
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ASlasherPlayer::GetStalkTierCarrySpeedMultplier()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.SlasherPlayer.GetStalkTierCarrySpeedMultplier");

	ASlasherPlayer_GetStalkTierCarrySpeedMultplier_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.SlasherPlayer.GetRageTier
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int ASlasherPlayer::GetRageTier()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.SlasherPlayer.GetRageTier");

	ASlasherPlayer_GetRageTier_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.SlasherPlayer.GetPlayerDropOffPoint
// (Native, Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FVector ASlasherPlayer::GetPlayerDropOffPoint()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.SlasherPlayer.GetPlayerDropOffPoint");

	ASlasherPlayer_GetPlayerDropOffPoint_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.SlasherPlayer.GetObsessionTarget
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ACamperPlayer*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ACamperPlayer* ASlasherPlayer::GetObsessionTarget()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.SlasherPlayer.GetObsessionTarget");

	ASlasherPlayer_GetObsessionTarget_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.SlasherPlayer.GetLookRotation
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FRotator                ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FRotator ASlasherPlayer::GetLookRotation()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.SlasherPlayer.GetLookRotation");

	ASlasherPlayer_GetLookRotation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.SlasherPlayer.GetLongestChaseDuration
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ASlasherPlayer::GetLongestChaseDuration()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.SlasherPlayer.GetLongestChaseDuration");

	ASlasherPlayer_GetLongestChaseDuration_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.SlasherPlayer.GetLightIntensity
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ASlasherPlayer::GetLightIntensity()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.SlasherPlayer.GetLightIntensity");

	ASlasherPlayer_GetLightIntensity_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.SlasherPlayer.GetItemAddons
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class UItemAddon*>      ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<class UItemAddon*> ASlasherPlayer::GetItemAddons()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.SlasherPlayer.GetItemAddons");

	ASlasherPlayer_GetItemAddons_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.SlasherPlayer.GetInvisibilityBurnoutChargeableComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UChargeableComponent*    ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UChargeableComponent* ASlasherPlayer::GetInvisibilityBurnoutChargeableComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.SlasherPlayer.GetInvisibilityBurnoutChargeableComponent");

	ASlasherPlayer_GetInvisibilityBurnoutChargeableComponent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.SlasherPlayer.GetInteractingCamper
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ACamperPlayer*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ACamperPlayer* ASlasherPlayer::GetInteractingCamper()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.SlasherPlayer.GetInteractingCamper");

	ASlasherPlayer_GetInteractingCamper_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.SlasherPlayer.GetGuidedCamper
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ACamperPlayer*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ACamperPlayer* ASlasherPlayer::GetGuidedCamper()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.SlasherPlayer.GetGuidedCamper");

	ASlasherPlayer_GetGuidedCamper_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.SlasherPlayer.GetGuidedAction
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TEnumAsByte<ESlasherGuidedAction> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

TEnumAsByte<ESlasherGuidedAction> ASlasherPlayer::GetGuidedAction()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.SlasherPlayer.GetGuidedAction");

	ASlasherPlayer_GetGuidedAction_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.SlasherPlayer.GetBaseTerrorRadius
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ASlasherPlayer::GetBaseTerrorRadius()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.SlasherPlayer.GetBaseTerrorRadius");

	ASlasherPlayer_GetBaseTerrorRadius_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.SlasherPlayer.GetAnimDirection
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ASlasherPlayer::GetAnimDirection()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.SlasherPlayer.GetAnimDirection");

	ASlasherPlayer_GetAnimDirection_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.SlasherPlayer.DisplayAttackZones
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                           Display                        (Parm, ZeroConstructor, IsPlainOldData)

void ASlasherPlayer::DisplayAttackZones(bool Display)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.SlasherPlayer.DisplayAttackZones");

	ASlasherPlayer_DisplayAttackZones_Params params;
	params.Display = Display;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.SlasherPlayer.DetectObstruction
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UPhysicalMaterial*       physicalMaterialOut            (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// struct FVector                 positionOut                    (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// struct FVector                 normalOut                      (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<EDetectionZone>    detectionZoneID                (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ASlasherPlayer::DetectObstruction(TEnumAsByte<EDetectionZone> detectionZoneID, class UPhysicalMaterial** physicalMaterialOut, struct FVector* positionOut, struct FVector* normalOut)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.SlasherPlayer.DetectObstruction");

	ASlasherPlayer_DetectObstruction_Params params;
	params.detectionZoneID = detectionZoneID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (physicalMaterialOut != nullptr)
		*physicalMaterialOut = params.physicalMaterialOut;
	if (positionOut != nullptr)
		*positionOut = params.positionOut;
	if (normalOut != nullptr)
		*normalOut = params.normalOut;

	return params.ReturnValue;
}


// Function DeadByDaylight.SlasherPlayer.DBD_SetAttackZones
// (Final, Exec, Native, Public)
// Parameters:
// TEnumAsByte<EAttackZoneSet>    attackZoneSet                  (Parm, ZeroConstructor, IsPlainOldData)

void ASlasherPlayer::DBD_SetAttackZones(TEnumAsByte<EAttackZoneSet> attackZoneSet)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.SlasherPlayer.DBD_SetAttackZones");

	ASlasherPlayer_DBD_SetAttackZones_Params params;
	params.attackZoneSet = attackZoneSet;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.SlasherPlayer.DBD_DisplayAttackZones
// (Final, Exec, Native, Public)
// Parameters:
// bool                           Display                        (Parm, ZeroConstructor, IsPlainOldData)

void ASlasherPlayer::DBD_DisplayAttackZones(bool Display)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.SlasherPlayer.DBD_DisplayAttackZones");

	ASlasherPlayer_DBD_DisplayAttackZones_Params params;
	params.Display = Display;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.SlasherPlayer.DBD_AllowKilling
// (Final, Exec, Native, Public)

void ASlasherPlayer::DBD_AllowKilling()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.SlasherPlayer.DBD_AllowKilling");

	ASlasherPlayer_DBD_AllowKilling_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.SlasherPlayer.Client_RequestStun
// (Net, NetReliable, Native, Event, Public, NetClient, NetValidate)
// Parameters:
// TEnumAsByte<EStunType>         stunType                       (Parm, ZeroConstructor, IsPlainOldData)
// class ADBDPlayer*              stunner                        (Parm, ZeroConstructor, IsPlainOldData)

void ASlasherPlayer::Client_RequestStun(TEnumAsByte<EStunType> stunType, class ADBDPlayer* stunner)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.SlasherPlayer.Client_RequestStun");

	ASlasherPlayer_Client_RequestStun_Params params;
	params.stunType = stunType;
	params.stunner = stunner;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.SlasherPlayer.CanPickupSurvivor
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ASlasherPlayer::CanPickupSurvivor()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.SlasherPlayer.CanPickupSurvivor");

	ASlasherPlayer_CanPickupSurvivor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.SlasherPlayer.CanPerformKillerAbility
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// TEnumAsByte<EKillerAbilities>  KillerAbility                  (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ASlasherPlayer::CanPerformKillerAbility(TEnumAsByte<EKillerAbilities> KillerAbility)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.SlasherPlayer.CanPerformKillerAbility");

	ASlasherPlayer_CanPerformKillerAbility_Params params;
	params.KillerAbility = KillerAbility;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.SlasherPlayer.CanGainRage
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ASlasherPlayer::CanGainRage()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.SlasherPlayer.CanGainRage");

	ASlasherPlayer_CanGainRage_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.SlasherPlayer.CanEscapeCarry
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ACamperPlayer*           Player                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ASlasherPlayer::CanEscapeCarry(class ACamperPlayer* Player)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.SlasherPlayer.CanEscapeCarry");

	ASlasherPlayer_CanEscapeCarry_Params params;
	params.Player = Player;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.SlasherPlayer.CanBeBlinded
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ASlasherPlayer::CanBeBlinded()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.SlasherPlayer.CanBeBlinded");

	ASlasherPlayer_CanBeBlinded_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.SlasherPlayer.CanAffectLocalPlayer
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ASlasherPlayer::CanAffectLocalPlayer()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.SlasherPlayer.CanAffectLocalPlayer");

	ASlasherPlayer_CanAffectLocalPlayer_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.SlasherPlayer.CameraUpdated
// (Native, Public, BlueprintCallable)

void ASlasherPlayer::CameraUpdated()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.SlasherPlayer.CameraUpdated");

	ASlasherPlayer_CameraUpdated_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.SlasherPlayer.BroadcastOffensiveAction
// (Final, Native, Public, BlueprintCallable, Const)

void ASlasherPlayer::BroadcastOffensiveAction()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.SlasherPlayer.BroadcastOffensiveAction");

	ASlasherPlayer_BroadcastOffensiveAction_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.SlasherPlayer.Authority_StopBlinding
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                  effector                       (Parm, ZeroConstructor, IsPlainOldData)

void ASlasherPlayer::Authority_StopBlinding(class AActor* effector)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.SlasherPlayer.Authority_StopBlinding");

	ASlasherPlayer_Authority_StopBlinding_Params params;
	params.effector = effector;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.SlasherPlayer.Authority_Blinded
// (Native, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<EBlindType>        blindType                      (Parm, ZeroConstructor, IsPlainOldData)
// float                          coolDown                       (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  effector                       (Parm, ZeroConstructor, IsPlainOldData)

void ASlasherPlayer::Authority_Blinded(TEnumAsByte<EBlindType> blindType, float coolDown, class AActor* effector)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.SlasherPlayer.Authority_Blinded");

	ASlasherPlayer_Authority_Blinded_Params params;
	params.blindType = blindType;
	params.coolDown = coolDown;
	params.effector = effector;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.SlasherPlayer.Authority_ApplyDamageToTarget
// (Native, Public, BlueprintCallable)
// Parameters:
// class ADBDPlayer*              Target                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           forceCauseKO                   (Parm, ZeroConstructor, IsPlainOldData)

void ASlasherPlayer::Authority_ApplyDamageToTarget(class ADBDPlayer* Target, bool forceCauseKO)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.SlasherPlayer.Authority_ApplyDamageToTarget");

	ASlasherPlayer_Authority_ApplyDamageToTarget_Params params;
	params.Target = Target;
	params.forceCauseKO = forceCauseKO;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.SlasherPlayer.Authority_AllowKilling
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// int                            numKills                       (Parm, ZeroConstructor, IsPlainOldData)

void ASlasherPlayer::Authority_AllowKilling(int numKills)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.SlasherPlayer.Authority_AllowKilling");

	ASlasherPlayer_Authority_AllowKilling_Params params;
	params.numKills = numKills;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.SlasherPlayer.Authority_AddInvisibilityBurnoutCharge
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class ADBDPlayer*              blinder                        (Parm, ZeroConstructor, IsPlainOldData)
// float                          charge                         (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  effector                       (Parm, ZeroConstructor, IsPlainOldData)

void ASlasherPlayer::Authority_AddInvisibilityBurnoutCharge(class ADBDPlayer* blinder, float charge, class AActor* effector)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.SlasherPlayer.Authority_AddInvisibilityBurnoutCharge");

	ASlasherPlayer_Authority_AddInvisibilityBurnoutCharge_Params params;
	params.blinder = blinder;
	params.charge = charge;
	params.effector = effector;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCharacterMovementComponent.SetRandomInputAmplitude
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          Value                          (Parm, ZeroConstructor, IsPlainOldData)

void UDBDCharacterMovementComponent::SetRandomInputAmplitude(float Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCharacterMovementComponent.SetRandomInputAmplitude");

	UDBDCharacterMovementComponent_SetRandomInputAmplitude_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCharacterMovementComponent.SetMovementModifierDetector
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UCapsuleComponent*       movementModifierDetector       (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UDBDCharacterMovementComponent::SetMovementModifierDetector(class UCapsuleComponent* movementModifierDetector)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCharacterMovementComponent.SetMovementModifierDetector");

	UDBDCharacterMovementComponent_SetMovementModifierDetector_Params params;
	params.movementModifierDetector = movementModifierDetector;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCharacterMovementComponent.OnMovementModifierDetectorOverlapExit
// (Final, Native, Protected)
// Parameters:
// class UPrimitiveComponent*     HitComponent                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// int                            OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData)

void UDBDCharacterMovementComponent::OnMovementModifierDetectorOverlapExit(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCharacterMovementComponent.OnMovementModifierDetectorOverlapExit");

	UDBDCharacterMovementComponent_OnMovementModifierDetectorOverlapExit_Params params;
	params.HitComponent = HitComponent;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCharacterMovementComponent.OnMovementModifierDetectorOverlapEnter
// (Final, Native, Protected, HasOutParms)
// Parameters:
// class UPrimitiveComponent*     HitComponent                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// int                            OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bFromSweep                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FHitResult              SweepResult                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void UDBDCharacterMovementComponent::OnMovementModifierDetectorOverlapEnter(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCharacterMovementComponent.OnMovementModifierDetectorOverlapEnter");

	UDBDCharacterMovementComponent_OnMovementModifierDetectorOverlapEnter_Params params;
	params.HitComponent = HitComponent;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;
	params.bFromSweep = bFromSweep;
	params.SweepResult = SweepResult;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCharacterMovementComponent.IsApplyingRandomInput
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UDBDCharacterMovementComponent::IsApplyingRandomInput()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCharacterMovementComponent.IsApplyingRandomInput");

	UDBDCharacterMovementComponent_IsApplyingRandomInput_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDCharacterMovementComponent.GetOverlappedMovementModifierActor
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AMovementModifierActor*  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AMovementModifierActor* UDBDCharacterMovementComponent::GetOverlappedMovementModifierActor()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCharacterMovementComponent.GetOverlappedMovementModifierActor");

	UDBDCharacterMovementComponent_GetOverlappedMovementModifierActor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.NetworkFenceActor.Server_ClientPassedFence
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// TArray<struct FGuid>           Fences                         (ConstParm, Parm, ZeroConstructor, ReferenceParm)

void ANetworkFenceActor::Server_ClientPassedFence(TArray<struct FGuid> Fences)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.NetworkFenceActor.Server_ClientPassedFence");

	ANetworkFenceActor_Server_ClientPassedFence_Params params;
	params.Fences = Fences;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.NetworkFenceActor.Client_AllPassedFence
// (Final, Net, NetReliable, Native, Event, Private, NetClient, NetValidate)
// Parameters:
// TArray<struct FGuid>           Fences                         (ConstParm, Parm, ZeroConstructor, ReferenceParm)

void ANetworkFenceActor::Client_AllPassedFence(TArray<struct FGuid> Fences)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.NetworkFenceActor.Client_AllPassedFence");

	ANetworkFenceActor_Client_AllPassedFence_Params params;
	params.Fences = Fences;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDEmblem.TickEmblem
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// float                          DeltaTime                      (Parm, ZeroConstructor, IsPlainOldData)

void UDBDEmblem::TickEmblem(float DeltaTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDEmblem.TickEmblem");

	UDBDEmblem_TickEmblem_Params params;
	params.DeltaTime = DeltaTime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDEmblem.OnPlayerGameplayEvent
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// TEnumAsByte<EDBDScoreTypes>    gameplayEventType              (Parm, ZeroConstructor, IsPlainOldData)
// float                          amount                         (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  Instigator                     (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  Target                         (Parm, ZeroConstructor, IsPlainOldData)

void UDBDEmblem::OnPlayerGameplayEvent(TEnumAsByte<EDBDScoreTypes> gameplayEventType, float amount, class AActor* Instigator, class AActor* Target)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDEmblem.OnPlayerGameplayEvent");

	UDBDEmblem_OnPlayerGameplayEvent_Params params;
	params.gameplayEventType = gameplayEventType;
	params.amount = amount;
	params.Instigator = Instigator;
	params.Target = Target;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDEmblem.OnGameplayEvent
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// TEnumAsByte<EDBDScoreTypes>    gameplayEventType              (Parm, ZeroConstructor, IsPlainOldData)
// float                          amount                         (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  Instigator                     (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  Target                         (Parm, ZeroConstructor, IsPlainOldData)

void UDBDEmblem::OnGameplayEvent(TEnumAsByte<EDBDScoreTypes> gameplayEventType, float amount, class AActor* Instigator, class AActor* Target)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDEmblem.OnGameplayEvent");

	UDBDEmblem_OnGameplayEvent_Params params;
	params.gameplayEventType = gameplayEventType;
	params.amount = amount;
	params.Instigator = Instigator;
	params.Target = Target;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDEmblem.IsOwnerPlayer
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                  Actor                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UDBDEmblem::IsOwnerPlayer(class AActor* Actor)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDEmblem.IsOwnerPlayer");

	UDBDEmblem_IsOwnerPlayer_Params params;
	params.Actor = Actor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDEmblem.InitializeEmblem
// (Event, Protected, BlueprintEvent)

void UDBDEmblem::InitializeEmblem()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDEmblem.InitializeEmblem");

	UDBDEmblem_InitializeEmblem_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDEmblem.GetWorld
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UWorld*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UWorld* UDBDEmblem::GetWorld()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDEmblem.GetWorld");

	UDBDEmblem_GetWorld_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDEmblem.GetProgress
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UDBDEmblem::GetProgress()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDEmblem.GetProgress");

	UDBDEmblem_GetProgress_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDEmblem.GetEmblemQuality
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TEnumAsByte<EEmblemQuality>    ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

TEnumAsByte<EEmblemQuality> UDBDEmblem::GetEmblemQuality()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDEmblem.GetEmblemQuality");

	UDBDEmblem_GetEmblemQuality_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDEmblem.EvaluateEmblemQuality
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UDBDEmblem::EvaluateEmblemQuality()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDEmblem.EvaluateEmblemQuality");

	UDBDEmblem_EvaluateEmblemQuality_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDPlayerControllerBase.Server_UpdateReplicatedPips
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// int                            pipsToAdd                      (Parm, ZeroConstructor, IsPlainOldData)

void ADBDPlayerControllerBase::Server_UpdateReplicatedPips(int pipsToAdd)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayerControllerBase.Server_UpdateReplicatedPips");

	ADBDPlayerControllerBase_Server_UpdateReplicatedPips_Params params;
	params.pipsToAdd = pipsToAdd;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayerControllerBase.Server_SendMessage
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// int                            PlayerId                       (Parm, ZeroConstructor, IsPlainOldData)
// class FString                  MirrorsId                      (Parm, ZeroConstructor)
// class FString                  PlayerName                     (Parm, ZeroConstructor)
// class FString                  msg                            (Parm, ZeroConstructor)

void ADBDPlayerControllerBase::Server_SendMessage(int PlayerId, const class FString& MirrorsId, const class FString& PlayerName, const class FString& msg)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayerControllerBase.Server_SendMessage");

	ADBDPlayerControllerBase_Server_SendMessage_Params params;
	params.PlayerId = PlayerId;
	params.MirrorsId = MirrorsId;
	params.PlayerName = PlayerName;
	params.msg = msg;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayerControllerBase.Server_SendClientAuthentication
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// class FString                  authClientTicket               (Parm, ZeroConstructor)
// uint64_t                       SteamId                        (Parm, ZeroConstructor, IsPlainOldData)
// uint32_t                       ticketLength                   (Parm, ZeroConstructor, IsPlainOldData)

void ADBDPlayerControllerBase::Server_SendClientAuthentication(const class FString& authClientTicket, uint64_t SteamId, uint32_t ticketLength)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayerControllerBase.Server_SendClientAuthentication");

	ADBDPlayerControllerBase_Server_SendClientAuthentication_Params params;
	params.authClientTicket = authClientTicket;
	params.SteamId = SteamId;
	params.ticketLength = ticketLength;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayerControllerBase.Server_SelectSlasher
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// int                            slasherIndex                   (Parm, ZeroConstructor, IsPlainOldData)

void ADBDPlayerControllerBase::Server_SelectSlasher(int slasherIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayerControllerBase.Server_SelectSlasher");

	ADBDPlayerControllerBase_Server_SelectSlasher_Params params;
	params.slasherIndex = slasherIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayerControllerBase.Server_SelectCamper
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// int                            camperIndex                    (Parm, ZeroConstructor, IsPlainOldData)

void ADBDPlayerControllerBase::Server_SelectCamper(int camperIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayerControllerBase.Server_SelectCamper");

	ADBDPlayerControllerBase_Server_SelectCamper_Params params;
	params.camperIndex = camperIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayerControllerBase.Server_ReceivePlayerProfile
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class FString                  MirrorsId                      (Parm, ZeroConstructor)
// struct FPlayerSavedProfileDataShared savedProfileData               (Parm)
// struct FPlayerLoadoutData      playerLoadout                  (Parm)

void ADBDPlayerControllerBase::Server_ReceivePlayerProfile(const class FString& MirrorsId, const struct FPlayerSavedProfileDataShared& savedProfileData, const struct FPlayerLoadoutData& playerLoadout)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayerControllerBase.Server_ReceivePlayerProfile");

	ADBDPlayerControllerBase_Server_ReceivePlayerProfile_Params params;
	params.MirrorsId = MirrorsId;
	params.savedProfileData = savedProfileData;
	params.playerLoadout = playerLoadout;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayerControllerBase.Server_EACMessageFromClient
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// TArray<unsigned char>          Message                        (ConstParm, Parm, ZeroConstructor, ReferenceParm)
// uint32_t                       messageLength                  (Parm, ZeroConstructor, IsPlainOldData)

void ADBDPlayerControllerBase::Server_EACMessageFromClient(TArray<unsigned char> Message, uint32_t messageLength)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayerControllerBase.Server_EACMessageFromClient");

	ADBDPlayerControllerBase_Server_EACMessageFromClient_Params params;
	params.Message = Message;
	params.messageLength = messageLength;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayerControllerBase.Server_CheatFireScoreEvent
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// TEnumAsByte<EDBDScoreTypes>    Category                       (Parm, ZeroConstructor, IsPlainOldData)
// float                          Value                          (Parm, ZeroConstructor, IsPlainOldData)

void ADBDPlayerControllerBase::Server_CheatFireScoreEvent(TEnumAsByte<EDBDScoreTypes> Category, float Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayerControllerBase.Server_CheatFireScoreEvent");

	ADBDPlayerControllerBase_Server_CheatFireScoreEvent_Params params;
	params.Category = Category;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayerControllerBase.Server_BuildProceduralLevelFromSeed
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// int                            Seed                           (Parm, ZeroConstructor, IsPlainOldData)

void ADBDPlayerControllerBase::Server_BuildProceduralLevelFromSeed(int Seed)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayerControllerBase.Server_BuildProceduralLevelFromSeed");

	ADBDPlayerControllerBase_Server_BuildProceduralLevelFromSeed_Params params;
	params.Seed = Seed;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayerControllerBase.Server_BuildProceduralLevelFromMap
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class FString                  Map                            (Parm, ZeroConstructor)

void ADBDPlayerControllerBase::Server_BuildProceduralLevelFromMap(const class FString& Map)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayerControllerBase.Server_BuildProceduralLevelFromMap");

	ADBDPlayerControllerBase_Server_BuildProceduralLevelFromMap_Params params;
	params.Map = Map;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayerControllerBase.Server
// (Final, Exec, Native, Public)
// Parameters:
// class FString                  commandLine                    (Parm, ZeroConstructor)

void ADBDPlayerControllerBase::Server(const class FString& commandLine)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayerControllerBase.Server");

	ADBDPlayerControllerBase_Server_Params params;
	params.commandLine = commandLine;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayerControllerBase.OnRep_PlayerState
// (Native, Public)

void ADBDPlayerControllerBase::OnRep_PlayerState()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayerControllerBase.OnRep_PlayerState");

	ADBDPlayerControllerBase_OnRep_PlayerState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayerControllerBase.DBD_UpdateLocalStats
// (Final, Exec, Native, Public, BlueprintCallable)

void ADBDPlayerControllerBase::DBD_UpdateLocalStats()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayerControllerBase.DBD_UpdateLocalStats");

	ADBDPlayerControllerBase_DBD_UpdateLocalStats_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayerControllerBase.DBD_SetCurrentCharacterPrestigeDatesPast
// (Final, Exec, Native, Public)

void ADBDPlayerControllerBase::DBD_SetCurrentCharacterPrestigeDatesPast()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayerControllerBase.DBD_SetCurrentCharacterPrestigeDatesPast");

	ADBDPlayerControllerBase_DBD_SetCurrentCharacterPrestigeDatesPast_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayerControllerBase.DBD_SetCurrentCharacterPrestigeDatesNow
// (Final, Exec, Native, Public)

void ADBDPlayerControllerBase::DBD_SetCurrentCharacterPrestigeDatesNow()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayerControllerBase.DBD_SetCurrentCharacterPrestigeDatesNow");

	ADBDPlayerControllerBase_DBD_SetCurrentCharacterPrestigeDatesNow_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayerControllerBase.DBD_SetCurrentCharacterPrestigeDatesFuture
// (Final, Exec, Native, Public)

void ADBDPlayerControllerBase::DBD_SetCurrentCharacterPrestigeDatesFuture()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayerControllerBase.DBD_SetCurrentCharacterPrestigeDatesFuture");

	ADBDPlayerControllerBase_DBD_SetCurrentCharacterPrestigeDatesFuture_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayerControllerBase.DBD_FireTestScore
// (Final, Exec, Native, Public, BlueprintCallable)
// Parameters:
// int                            Category                       (Parm, ZeroConstructor, IsPlainOldData)
// float                          Value                          (Parm, ZeroConstructor, IsPlainOldData)

void ADBDPlayerControllerBase::DBD_FireTestScore(int Category, float Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayerControllerBase.DBD_FireTestScore");

	ADBDPlayerControllerBase_DBD_FireTestScore_Params params;
	params.Category = Category;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayerControllerBase.DBD_FillScoreCategory
// (Final, Exec, Native, Public, BlueprintCallable)
// Parameters:
// int                            Category                       (Parm, ZeroConstructor, IsPlainOldData)

void ADBDPlayerControllerBase::DBD_FillScoreCategory(int Category)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayerControllerBase.DBD_FillScoreCategory");

	ADBDPlayerControllerBase_DBD_FillScoreCategory_Params params;
	params.Category = Category;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayerControllerBase.DBD_FillAllScoreCategories
// (Final, Exec, Native, Public, BlueprintCallable)

void ADBDPlayerControllerBase::DBD_FillAllScoreCategories()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayerControllerBase.DBD_FillAllScoreCategories");

	ADBDPlayerControllerBase_DBD_FillAllScoreCategories_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayerControllerBase.DBD_DebugSendChatMessage
// (Final, Exec, Native, Public)
// Parameters:
// class FString                  msg                            (Parm, ZeroConstructor)

void ADBDPlayerControllerBase::DBD_DebugSendChatMessage(const class FString& msg)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayerControllerBase.DBD_DebugSendChatMessage");

	ADBDPlayerControllerBase_DBD_DebugSendChatMessage_Params params;
	params.msg = msg;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayerControllerBase.DBD_BuildFromSeed
// (Final, Exec, Native, Public)
// Parameters:
// int                            Seed                           (Parm, ZeroConstructor, IsPlainOldData)

void ADBDPlayerControllerBase::DBD_BuildFromSeed(int Seed)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayerControllerBase.DBD_BuildFromSeed");

	ADBDPlayerControllerBase_DBD_BuildFromSeed_Params params;
	params.Seed = Seed;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayerControllerBase.DBD_BuildFromMap
// (Final, Exec, Native, Public)
// Parameters:
// class FString                  Map                            (Parm, ZeroConstructor)

void ADBDPlayerControllerBase::DBD_BuildFromMap(const class FString& Map)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayerControllerBase.DBD_BuildFromMap");

	ADBDPlayerControllerBase_DBD_BuildFromMap_Params params;
	params.Map = Map;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayerControllerBase.Client_ValidateServer
// (Net, NetReliable, Native, Event, Public, NetClient)

void ADBDPlayerControllerBase::Client_ValidateServer()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayerControllerBase.Client_ValidateServer");

	ADBDPlayerControllerBase_Client_ValidateServer_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayerControllerBase.Client_SendServerAuthentication
// (Final, Net, NetReliable, Native, Event, Private, NetClient, NetValidate)
// Parameters:
// class FString                  authServerTicket               (Parm, ZeroConstructor)
// uint64_t                       SteamId                        (Parm, ZeroConstructor, IsPlainOldData)
// uint32_t                       ticketLength                   (Parm, ZeroConstructor, IsPlainOldData)

void ADBDPlayerControllerBase::Client_SendServerAuthentication(const class FString& authServerTicket, uint64_t SteamId, uint32_t ticketLength)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayerControllerBase.Client_SendServerAuthentication");

	ADBDPlayerControllerBase_Client_SendServerAuthentication_Params params;
	params.authServerTicket = authServerTicket;
	params.SteamId = SteamId;
	params.ticketLength = ticketLength;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayerControllerBase.Client_RequestPlayerProfile
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// bool                           fromOfflineLobby               (Parm, ZeroConstructor, IsPlainOldData)

void ADBDPlayerControllerBase::Client_RequestPlayerProfile(bool fromOfflineLobby)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayerControllerBase.Client_RequestPlayerProfile");

	ADBDPlayerControllerBase_Client_RequestPlayerProfile_Params params;
	params.fromOfflineLobby = fromOfflineLobby;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayerControllerBase.Client_GameEnded
// (Net, NetReliable, Native, Event, Public, NetClient)

void ADBDPlayerControllerBase::Client_GameEnded()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayerControllerBase.Client_GameEnded");

	ADBDPlayerControllerBase_Client_GameEnded_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayerControllerBase.Client_FinishedPlaying
// (Final, Net, NetReliable, Native, Event, Private, NetClient)

void ADBDPlayerControllerBase::Client_FinishedPlaying()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayerControllerBase.Client_FinishedPlaying");

	ADBDPlayerControllerBase_Client_FinishedPlaying_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayerControllerBase.Client_EACMessageFromServer
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// TArray<unsigned char>          Message                        (ConstParm, Parm, ZeroConstructor, ReferenceParm)
// uint32_t                       messageLength                  (Parm, ZeroConstructor, IsPlainOldData)

void ADBDPlayerControllerBase::Client_EACMessageFromServer(TArray<unsigned char> Message, uint32_t messageLength)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayerControllerBase.Client_EACMessageFromServer");

	ADBDPlayerControllerBase_Client_EACMessageFromServer_Params params;
	params.Message = Message;
	params.messageLength = messageLength;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayerControllerBase.CallConsoleCmdOnServer_Server
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// class FString                  commandLine                    (Parm, ZeroConstructor)

void ADBDPlayerControllerBase::CallConsoleCmdOnServer_Server(const class FString& commandLine)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayerControllerBase.CallConsoleCmdOnServer_Server");

	ADBDPlayerControllerBase_CallConsoleCmdOnServer_Server_Params params;
	params.commandLine = commandLine;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayerController.Server_SetSpectatorModeInEditor
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// bool                           On                             (Parm, ZeroConstructor, IsPlainOldData)
// class ADBDPlayerState*         spectatingPlayerState          (Parm, ZeroConstructor, IsPlainOldData)

void ADBDPlayerController::Server_SetSpectatorModeInEditor(bool On, class ADBDPlayerState* spectatingPlayerState)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayerController.Server_SetSpectatorModeInEditor");

	ADBDPlayerController_Server_SetSpectatorModeInEditor_Params params;
	params.On = On;
	params.spectatingPlayerState = spectatingPlayerState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayerController.Server_SetSpectatorMode
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// bool                           On                             (Parm, ZeroConstructor, IsPlainOldData)

void ADBDPlayerController::Server_SetSpectatorMode(bool On)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayerController.Server_SetSpectatorMode");

	ADBDPlayerController_Server_SetSpectatorMode_Params params;
	params.On = On;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayerController.Server_SetReadyToTravel
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void ADBDPlayerController::Server_SetReadyToTravel()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayerController.Server_SetReadyToTravel");

	ADBDPlayerController_Server_SetReadyToTravel_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayerController.Server_LeaveGame
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// bool                           joiningLobby                   (Parm, ZeroConstructor, IsPlainOldData)

void ADBDPlayerController::Server_LeaveGame(bool joiningLobby)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayerController.Server_LeaveGame");

	ADBDPlayerController_Server_LeaveGame_Params params;
	params.joiningLobby = joiningLobby;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayerController.Server_EndGame
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// bool                           serverHasLeftTheGame           (Parm, ZeroConstructor, IsPlainOldData)

void ADBDPlayerController::Server_EndGame(bool serverHasLeftTheGame)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayerController.Server_EndGame");

	ADBDPlayerController_Server_EndGame_Params params;
	params.serverHasLeftTheGame = serverHasLeftTheGame;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayerController.Server_CompleteEscapeRequirements
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable, NetValidate)

void ADBDPlayerController::Server_CompleteEscapeRequirements()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayerController.Server_CompleteEscapeRequirements");

	ADBDPlayerController_Server_CompleteEscapeRequirements_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayerController.OnRep_Fence
// (Final, Native, Private)

void ADBDPlayerController::OnRep_Fence()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayerController.OnRep_Fence");

	ADBDPlayerController_OnRep_Fence_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayerController.IsSpectating
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ADBDPlayerController::IsSpectating()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayerController.IsSpectating");

	ADBDPlayerController_IsSpectating_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDPlayerController.GetSpectatedPlayerState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ADBDPlayerState*         ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ADBDPlayerState* ADBDPlayerController::GetSpectatedPlayerState()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayerController.GetSpectatedPlayerState");

	ADBDPlayerController_GetSpectatedPlayerState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDPlayerController.GetSpectatedPlayer
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ADBDPlayer*              ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ADBDPlayer* ADBDPlayerController::GetSpectatedPlayer()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayerController.GetSpectatedPlayer");

	ADBDPlayerController_GetSpectatedPlayer_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDPlayerController.GetControlledPlayer
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ADBDPlayer*              ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ADBDPlayer* ADBDPlayerController::GetControlledPlayer()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayerController.GetControlledPlayer");

	ADBDPlayerController_GetControlledPlayer_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDPlayerController.Client_SetSpectatorModeInEditor
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// bool                           On                             (Parm, ZeroConstructor, IsPlainOldData)
// class ADBDPlayerState*         spectatingPlayerState          (Parm, ZeroConstructor, IsPlainOldData)

void ADBDPlayerController::Client_SetSpectatorModeInEditor(bool On, class ADBDPlayerState* spectatingPlayerState)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayerController.Client_SetSpectatorModeInEditor");

	ADBDPlayerController_Client_SetSpectatorModeInEditor_Params params;
	params.On = On;
	params.spectatingPlayerState = spectatingPlayerState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayerController.Client_SetSpectatorMode
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// bool                           On                             (Parm, ZeroConstructor, IsPlainOldData)

void ADBDPlayerController::Client_SetSpectatorMode(bool On)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayerController.Client_SetSpectatorMode");

	ADBDPlayerController_Client_SetSpectatorMode_Params params;
	params.On = On;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_WakeUpSurvivor
// (Final, Exec, Native, Public)

void UDBDCheatManager::DBD_WakeUpSurvivor()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_WakeUpSurvivor");

	UDBDCheatManager_DBD_WakeUpSurvivor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_VisualizeHookRenderRegions
// (Final, Exec, Native, Public)

void UDBDCheatManager::DBD_VisualizeHookRenderRegions()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_VisualizeHookRenderRegions");

	UDBDCheatManager_DBD_VisualizeHookRenderRegions_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_ValidateCustomizationItems
// (Final, Exec, Native, Public)
// Parameters:
// struct FName                   ItemName                       (Parm, ZeroConstructor, IsPlainOldData)

void UDBDCheatManager::DBD_ValidateCustomizationItems(const struct FName& ItemName)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_ValidateCustomizationItems");

	UDBDCheatManager_DBD_ValidateCustomizationItems_Params params;
	params.ItemName = ItemName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_ValidateAllCustomizationItems
// (Final, Exec, Native, Public)

void UDBDCheatManager::DBD_ValidateAllCustomizationItems()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_ValidateAllCustomizationItems");

	UDBDCheatManager_DBD_ValidateAllCustomizationItems_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_UnloadDarkPartAssetLibrary
// (Final, Exec, Native, Public)

void UDBDCheatManager::DBD_UnloadDarkPartAssetLibrary()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_UnloadDarkPartAssetLibrary");

	UDBDCheatManager_DBD_UnloadDarkPartAssetLibrary_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_UnloadCharacterAssetLibrary
// (Final, Exec, Native, Public)
// Parameters:
// int                            CharacterId                    (Parm, ZeroConstructor, IsPlainOldData)

void UDBDCheatManager::DBD_UnloadCharacterAssetLibrary(int CharacterId)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_UnloadCharacterAssetLibrary");

	UDBDCheatManager_DBD_UnloadCharacterAssetLibrary_Params params;
	params.CharacterId = CharacterId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_UnloadBlindPackAssetLibrary
// (Final, Exec, Native, Public)

void UDBDCheatManager::DBD_UnloadBlindPackAssetLibrary()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_UnloadBlindPackAssetLibrary");

	UDBDCheatManager_DBD_UnloadBlindPackAssetLibrary_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_UnloadAllCharacterAssetLibrary
// (Final, Exec, Native, Public)

void UDBDCheatManager::DBD_UnloadAllCharacterAssetLibrary()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_UnloadAllCharacterAssetLibrary");

	UDBDCheatManager_DBD_UnloadAllCharacterAssetLibrary_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_ToggleProceduralDebugMode
// (Final, Exec, Native, Public)

void UDBDCheatManager::DBD_ToggleProceduralDebugMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_ToggleProceduralDebugMode");

	UDBDCheatManager_DBD_ToggleProceduralDebugMode_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_TestUnhookSacrificeBug
// (Final, Exec, Native, Public)
// Parameters:
// bool                           Enabled                        (Parm, ZeroConstructor, IsPlainOldData)

void UDBDCheatManager::DBD_TestUnhookSacrificeBug(bool Enabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_TestUnhookSacrificeBug");

	UDBDCheatManager_DBD_TestUnhookSacrificeBug_Params params;
	params.Enabled = Enabled;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_TeleportToTile
// (Final, Exec, Native, Public)
// Parameters:
// uint32_t                       X                              (Parm, ZeroConstructor, IsPlainOldData)
// uint32_t                       Y                              (Parm, ZeroConstructor, IsPlainOldData)

void UDBDCheatManager::DBD_TeleportToTile(uint32_t X, uint32_t Y)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_TeleportToTile");

	UDBDCheatManager_DBD_TeleportToTile_Params params;
	params.X = X;
	params.Y = Y;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_Teleport
// (Final, Exec, Native, Public)
// Parameters:
// float                          X                              (Parm, ZeroConstructor, IsPlainOldData)
// float                          Y                              (Parm, ZeroConstructor, IsPlainOldData)
// float                          Z                              (Parm, ZeroConstructor, IsPlainOldData)

void UDBDCheatManager::DBD_Teleport(float X, float Y, float Z)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_Teleport");

	UDBDCheatManager_DBD_Teleport_Params params;
	params.X = X;
	params.Y = Y;
	params.Z = Z;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_StopVideoPlayer
// (Final, Exec, Native, Public)

void UDBDCheatManager::DBD_StopVideoPlayer()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_StopVideoPlayer");

	UDBDCheatManager_DBD_StopVideoPlayer_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_StopLoadCharacterAssetLibrary
// (Final, Exec, Native, Public)
// Parameters:
// int                            CharacterId                    (Parm, ZeroConstructor, IsPlainOldData)

void UDBDCheatManager::DBD_StopLoadCharacterAssetLibrary(int CharacterId)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_StopLoadCharacterAssetLibrary");

	UDBDCheatManager_DBD_StopLoadCharacterAssetLibrary_Params params;
	params.CharacterId = CharacterId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_SpectateSurvivor
// (Final, Exec, Native, Public)

void UDBDCheatManager::DBD_SpectateSurvivor()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_SpectateSurvivor");

	UDBDCheatManager_DBD_SpectateSurvivor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_SpectateKiller
// (Final, Exec, Native, Public)

void UDBDCheatManager::DBD_SpectateKiller()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_SpectateKiller");

	UDBDCheatManager_DBD_SpectateKiller_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_SpawnStatusEffect
// (Final, Exec, Native, Public)
// Parameters:
// struct FName                   statusEffectID                 (Parm, ZeroConstructor, IsPlainOldData)

void UDBDCheatManager::DBD_SpawnStatusEffect(const struct FName& statusEffectID)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_SpawnStatusEffect");

	UDBDCheatManager_DBD_SpawnStatusEffect_Params params;
	params.statusEffectID = statusEffectID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_SpawnPerk
// (Final, Exec, Native, Public)
// Parameters:
// struct FName                   PerkID                         (Parm, ZeroConstructor, IsPlainOldData)
// int                            PerkLevel                      (Parm, ZeroConstructor, IsPlainOldData)

void UDBDCheatManager::DBD_SpawnPerk(const struct FName& PerkID, int PerkLevel)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_SpawnPerk");

	UDBDCheatManager_DBD_SpawnPerk_Params params;
	params.PerkID = PerkID;
	params.PerkLevel = PerkLevel;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_SpawnkCharacterInMainMenu
// (Final, Exec, Native, Public)
// Parameters:
// int                            CharacterId                    (Parm, ZeroConstructor, IsPlainOldData)

void UDBDCheatManager::DBD_SpawnkCharacterInMainMenu(int CharacterId)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_SpawnkCharacterInMainMenu");

	UDBDCheatManager_DBD_SpawnkCharacterInMainMenu_Params params;
	params.CharacterId = CharacterId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_SpawnItemInMainMenu
// (Final, Exec, Native, Public)
// Parameters:
// struct FName                   ItemId                         (Parm, ZeroConstructor, IsPlainOldData)

void UDBDCheatManager::DBD_SpawnItemInMainMenu(const struct FName& ItemId)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_SpawnItemInMainMenu");

	UDBDCheatManager_DBD_SpawnItemInMainMenu_Params params;
	params.ItemId = ItemId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_SpawnItemAddon
// (Final, Exec, Native, Public)
// Parameters:
// struct FName                   AddonID                        (Parm, ZeroConstructor, IsPlainOldData)

void UDBDCheatManager::DBD_SpawnItemAddon(const struct FName& AddonID)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_SpawnItemAddon");

	UDBDCheatManager_DBD_SpawnItemAddon_Params params;
	params.AddonID = AddonID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_SpawnItem
// (Final, Exec, Native, Public)
// Parameters:
// struct FName                   ItemId                         (Parm, ZeroConstructor, IsPlainOldData)

void UDBDCheatManager::DBD_SpawnItem(const struct FName& ItemId)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_SpawnItem");

	UDBDCheatManager_DBD_SpawnItem_Params params;
	params.ItemId = ItemId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_SpawnDarkCharacterInMainMenu
// (Final, Exec, Native, Public)
// Parameters:
// int                            CharacterId                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FName                   focusCategory                  (Parm, ZeroConstructor, IsPlainOldData)

void UDBDCheatManager::DBD_SpawnDarkCharacterInMainMenu(int CharacterId, const struct FName& focusCategory)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_SpawnDarkCharacterInMainMenu");

	UDBDCheatManager_DBD_SpawnDarkCharacterInMainMenu_Params params;
	params.CharacterId = CharacterId;
	params.focusCategory = focusCategory;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_SpawnCampers
// (Final, Exec, Native, Public)
// Parameters:
// int                            Count                          (Parm, ZeroConstructor, IsPlainOldData)

void UDBDCheatManager::DBD_SpawnCampers(int Count)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_SpawnCampers");

	UDBDCheatManager_DBD_SpawnCampers_Params params;
	params.Count = Count;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_ShowStoreUI
// (Final, Exec, Native, Public)
// Parameters:
// class FString                  productId                      (Parm, ZeroConstructor)

void UDBDCheatManager::DBD_ShowStoreUI(const class FString& productId)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_ShowStoreUI");

	UDBDCheatManager_DBD_ShowStoreUI_Params params;
	params.productId = productId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_ShowKillerPowerDebugInfo
// (Final, Exec, Native, Public)
// Parameters:
// bool                           Enabled                        (Parm, ZeroConstructor, IsPlainOldData)

void UDBDCheatManager::DBD_ShowKillerPowerDebugInfo(bool Enabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_ShowKillerPowerDebugInfo");

	UDBDCheatManager_DBD_ShowKillerPowerDebugInfo_Params params;
	params.Enabled = Enabled;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_ShowGameInstalledPrompt
// (Final, Exec, Native, Public)

void UDBDCheatManager::DBD_ShowGameInstalledPrompt()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_ShowGameInstalledPrompt");

	UDBDCheatManager_DBD_ShowGameInstalledPrompt_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_ShowDebugSpawnBox
// (Final, Exec, Native, Public)
// Parameters:
// int                            itemCountPerBox                (Parm, ZeroConstructor, IsPlainOldData)
// float                          seconds                        (Parm, ZeroConstructor, IsPlainOldData)

void UDBDCheatManager::DBD_ShowDebugSpawnBox(int itemCountPerBox, float seconds)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_ShowDebugSpawnBox");

	UDBDCheatManager_DBD_ShowDebugSpawnBox_Params params;
	params.itemCountPerBox = itemCountPerBox;
	params.seconds = seconds;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_ShopCameraQuit
// (Final, Exec, Native, Public)

void UDBDCheatManager::DBD_ShopCameraQuit()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_ShopCameraQuit");

	UDBDCheatManager_DBD_ShopCameraQuit_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_ShopCameraMain
// (Final, Exec, Native, Public)

void UDBDCheatManager::DBD_ShopCameraMain()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_ShopCameraMain");

	UDBDCheatManager_DBD_ShopCameraMain_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_ShopCameraBox
// (Final, Exec, Native, Public)

void UDBDCheatManager::DBD_ShopCameraBox()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_ShopCameraBox");

	UDBDCheatManager_DBD_ShopCameraBox_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_SetWindowFreeCam
// (Final, Exec, Native, Public)
// Parameters:
// bool                           Enabled                        (Parm, ZeroConstructor, IsPlainOldData)

void UDBDCheatManager::DBD_SetWindowFreeCam(bool Enabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_SetWindowFreeCam");

	UDBDCheatManager_DBD_SetWindowFreeCam_Params params;
	params.Enabled = Enabled;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_SetUserBonusBloodpoints
// (Final, Exec, Native, Public)
// Parameters:
// int                            Points                         (Parm, ZeroConstructor, IsPlainOldData)

void UDBDCheatManager::DBD_SetUserBonusBloodpoints(int Points)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_SetUserBonusBloodpoints");

	UDBDCheatManager_DBD_SetUserBonusBloodpoints_Params params;
	params.Points = Points;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_SetUserBloodpoints
// (Final, Exec, Native, Public)
// Parameters:
// int                            Points                         (Parm, ZeroConstructor, IsPlainOldData)

void UDBDCheatManager::DBD_SetUserBloodpoints(int Points)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_SetUserBloodpoints");

	UDBDCheatManager_DBD_SetUserBloodpoints_Params params;
	params.Points = Points;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_SetTotalXp
// (Final, Exec, Native, Public)
// Parameters:
// int                            totalXp                        (Parm, ZeroConstructor, IsPlainOldData)

void UDBDCheatManager::DBD_SetTotalXp(int totalXp)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_SetTotalXp");

	UDBDCheatManager_DBD_SetTotalXp_Params params;
	params.totalXp = totalXp;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_SetSurvivorLeftCount
// (Final, Exec, Native, Public)
// Parameters:
// int                            Count                          (Parm, ZeroConstructor, IsPlainOldData)

void UDBDCheatManager::DBD_SetSurvivorLeftCount(int Count)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_SetSurvivorLeftCount");

	UDBDCheatManager_DBD_SetSurvivorLeftCount_Params params;
	params.Count = Count;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_SetStoreHitBoxesVisible
// (Final, Exec, Native, Public)
// Parameters:
// bool                           Value                          (Parm, ZeroConstructor, IsPlainOldData)

void UDBDCheatManager::DBD_SetStoreHitBoxesVisible(bool Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_SetStoreHitBoxesVisible");

	UDBDCheatManager_DBD_SetStoreHitBoxesVisible_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_SetSlasherAutoAttackOnCamperInteractFrameDelay
// (Final, Exec, Native, Public)
// Parameters:
// int                            frames                         (Parm, ZeroConstructor, IsPlainOldData)

void UDBDCheatManager::DBD_SetSlasherAutoAttackOnCamperInteractFrameDelay(int frames)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_SetSlasherAutoAttackOnCamperInteractFrameDelay");

	UDBDCheatManager_DBD_SetSlasherAutoAttackOnCamperInteractFrameDelay_Params params;
	params.frames = frames;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_SetRunVaultEnabled
// (Final, Exec, Native, Public)
// Parameters:
// bool                           Enabled                        (Parm, ZeroConstructor, IsPlainOldData)

void UDBDCheatManager::DBD_SetRunVaultEnabled(bool Enabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_SetRunVaultEnabled");

	UDBDCheatManager_DBD_SetRunVaultEnabled_Params params;
	params.Enabled = Enabled;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_SetReverseTraverseEnabled
// (Final, Exec, Native, Public)
// Parameters:
// bool                           Enabled                        (Parm, ZeroConstructor, IsPlainOldData)

void UDBDCheatManager::DBD_SetReverseTraverseEnabled(bool Enabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_SetReverseTraverseEnabled");

	UDBDCheatManager_DBD_SetReverseTraverseEnabled_Params params;
	params.Enabled = Enabled;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_SetRandomInputAmplitude
// (Final, Exec, Native, Public)
// Parameters:
// float                          Amplitude                      (Parm, ZeroConstructor, IsPlainOldData)

void UDBDCheatManager::DBD_SetRandomInputAmplitude(float Amplitude)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_SetRandomInputAmplitude");

	UDBDCheatManager_DBD_SetRandomInputAmplitude_Params params;
	params.Amplitude = Amplitude;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_SetPlayerLevel
// (Final, Exec, Native, Public)
// Parameters:
// int                            currentXp                      (Parm, ZeroConstructor, IsPlainOldData)
// int                            playerLevel                    (Parm, ZeroConstructor, IsPlainOldData)
// int                            Prestige                       (Parm, ZeroConstructor, IsPlainOldData)

void UDBDCheatManager::DBD_SetPlayerLevel(int currentXp, int playerLevel, int Prestige)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_SetPlayerLevel");

	UDBDCheatManager_DBD_SetPlayerLevel_Params params;
	params.currentXp = currentXp;
	params.playerLevel = playerLevel;
	params.Prestige = Prestige;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_SetPerchRadiusThreshold
// (Final, Exec, Native, Public)
// Parameters:
// float                          Threshold                      (Parm, ZeroConstructor, IsPlainOldData)

void UDBDCheatManager::DBD_SetPerchRadiusThreshold(float Threshold)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_SetPerchRadiusThreshold");

	UDBDCheatManager_DBD_SetPerchRadiusThreshold_Params params;
	params.Threshold = Threshold;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_SetOnHookDrainToNextStage
// (Final, Exec, Native, Public)
// Parameters:
// bool                           onHookDrainToNextStage         (Parm, ZeroConstructor, IsPlainOldData)

void UDBDCheatManager::DBD_SetOnHookDrainToNextStage(bool onHookDrainToNextStage)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_SetOnHookDrainToNextStage");

	UDBDCheatManager_DBD_SetOnHookDrainToNextStage_Params params;
	params.onHookDrainToNextStage = onHookDrainToNextStage;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_SetOfferingTriggersVisibility
// (Final, Exec, Native, Public)
// Parameters:
// bool                           IsVisible                      (Parm, ZeroConstructor, IsPlainOldData)

void UDBDCheatManager::DBD_SetOfferingTriggersVisibility(bool IsVisible)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_SetOfferingTriggersVisibility");

	UDBDCheatManager_DBD_SetOfferingTriggersVisibility_Params params;
	params.IsVisible = IsVisible;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_SetNewsContentUpdateTimer
// (Final, Exec, Native, Public)
// Parameters:
// float                          updateInSeconds                (Parm, ZeroConstructor, IsPlainOldData)
// bool                           repeatTimer                    (Parm, ZeroConstructor, IsPlainOldData)

void UDBDCheatManager::DBD_SetNewsContentUpdateTimer(float updateInSeconds, bool repeatTimer)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_SetNewsContentUpdateTimer");

	UDBDCheatManager_DBD_SetNewsContentUpdateTimer_Params params;
	params.updateInSeconds = updateInSeconds;
	params.repeatTimer = repeatTimer;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_SetMaxWalkSpeed
// (Final, Exec, Native, Public)
// Parameters:
// float                          MaxWalkSpeed                   (Parm, ZeroConstructor, IsPlainOldData)

void UDBDCheatManager::DBD_SetMaxWalkSpeed(float MaxWalkSpeed)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_SetMaxWalkSpeed");

	UDBDCheatManager_DBD_SetMaxWalkSpeed_Params params;
	params.MaxWalkSpeed = MaxWalkSpeed;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_SetLungeType
// (Final, Exec, Native, Public)
// Parameters:
// int                            lungeType                      (Parm, ZeroConstructor, IsPlainOldData)

void UDBDCheatManager::DBD_SetLungeType(int lungeType)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_SetLungeType");

	UDBDCheatManager_DBD_SetLungeType_Params params;
	params.lungeType = lungeType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_SetKillerHeadVisibility
// (Final, Exec, Native, Public)
// Parameters:
// bool                           Visible                        (Parm, ZeroConstructor, IsPlainOldData)

void UDBDCheatManager::DBD_SetKillerHeadVisibility(bool Visible)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_SetKillerHeadVisibility");

	UDBDCheatManager_DBD_SetKillerHeadVisibility_Params params;
	params.Visible = Visible;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_SetItemNormalizedEnergyLevel
// (Final, Exec, Native, Public)
// Parameters:
// float                          normalizedLevel                (Parm, ZeroConstructor, IsPlainOldData)

void UDBDCheatManager::DBD_SetItemNormalizedEnergyLevel(float normalizedLevel)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_SetItemNormalizedEnergyLevel");

	UDBDCheatManager_DBD_SetItemNormalizedEnergyLevel_Params params;
	params.normalizedLevel = normalizedLevel;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_SetItemEnergyLevel
// (Final, Exec, Native, Public)
// Parameters:
// float                          Level                          (Parm, ZeroConstructor, IsPlainOldData)

void UDBDCheatManager::DBD_SetItemEnergyLevel(float Level)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_SetItemEnergyLevel");

	UDBDCheatManager_DBD_SetItemEnergyLevel_Params params;
	params.Level = Level;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_SetHighestWeightSeenNews
// (Final, Exec, Native, Public)
// Parameters:
// int                            Value                          (Parm, ZeroConstructor, IsPlainOldData)

void UDBDCheatManager::DBD_SetHighestWeightSeenNews(int Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_SetHighestWeightSeenNews");

	UDBDCheatManager_DBD_SetHighestWeightSeenNews_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_SetHatchetVar
// (Final, Exec, Native, Public)
// Parameters:
// struct FName                   VarName                        (Parm, ZeroConstructor, IsPlainOldData)
// float                          Value                          (Parm, ZeroConstructor, IsPlainOldData)

void UDBDCheatManager::DBD_SetHatchetVar(const struct FName& VarName, float Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_SetHatchetVar");

	UDBDCheatManager_DBD_SetHatchetVar_Params params;
	params.VarName = VarName;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_SetFearMarketUpdateTimer
// (Final, Exec, Native, Public)
// Parameters:
// float                          updateInSeconds                (Parm, ZeroConstructor, IsPlainOldData)
// bool                           repeatTimer                    (Parm, ZeroConstructor, IsPlainOldData)

void UDBDCheatManager::DBD_SetFearMarketUpdateTimer(float updateInSeconds, bool repeatTimer)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_SetFearMarketUpdateTimer");

	UDBDCheatManager_DBD_SetFearMarketUpdateTimer_Params params;
	params.updateInSeconds = updateInSeconds;
	params.repeatTimer = repeatTimer;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_SetEthereal
// (Final, Exec, Native, Public)
// Parameters:
// bool                           Enabled                        (Parm, ZeroConstructor, IsPlainOldData)

void UDBDCheatManager::DBD_SetEthereal(bool Enabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_SetEthereal");

	UDBDCheatManager_DBD_SetEthereal_Params params;
	params.Enabled = Enabled;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_SetEnableHookSlashableZone
// (Final, Exec, Native, Public)
// Parameters:
// bool                           Enabled                        (Parm, ZeroConstructor, IsPlainOldData)

void UDBDCheatManager::DBD_SetEnableHookSlashableZone(bool Enabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_SetEnableHookSlashableZone");

	UDBDCheatManager_DBD_SetEnableHookSlashableZone_Params params;
	params.Enabled = Enabled;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_SetDebugSnapPoint
// (Final, Exec, Native, Public)
// Parameters:
// bool                           Enabled                        (Parm, ZeroConstructor, IsPlainOldData)

void UDBDCheatManager::DBD_SetDebugSnapPoint(bool Enabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_SetDebugSnapPoint");

	UDBDCheatManager_DBD_SetDebugSnapPoint_Params params;
	params.Enabled = Enabled;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_SetDebugPrintAvailableInteractions
// (Final, Exec, Native, Public)
// Parameters:
// bool                           Enabled                        (Parm, ZeroConstructor, IsPlainOldData)

void UDBDCheatManager::DBD_SetDebugPrintAvailableInteractions(bool Enabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_SetDebugPrintAvailableInteractions");

	UDBDCheatManager_DBD_SetDebugPrintAvailableInteractions_Params params;
	params.Enabled = Enabled;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_SetDebugFailAllInteractions
// (Final, Exec, Native, Public)
// Parameters:
// bool                           Enabled                        (Parm, ZeroConstructor, IsPlainOldData)

void UDBDCheatManager::DBD_SetDebugFailAllInteractions(bool Enabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_SetDebugFailAllInteractions");

	UDBDCheatManager_DBD_SetDebugFailAllInteractions_Params params;
	params.Enabled = Enabled;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_SetDebugCarry
// (Final, Exec, Native, Public)
// Parameters:
// bool                           Enabled                        (Parm, ZeroConstructor, IsPlainOldData)

void UDBDCheatManager::DBD_SetDebugCarry(bool Enabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_SetDebugCarry");

	UDBDCheatManager_DBD_SetDebugCarry_Params params;
	params.Enabled = Enabled;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_SetDate
// (Final, Exec, Native, Public)
// Parameters:
// class FString                  dateString                     (Parm, ZeroConstructor)

void UDBDCheatManager::DBD_SetDate(const class FString& dateString)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_SetDate");

	UDBDCheatManager_DBD_SetDate_Params params;
	params.dateString = dateString;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_SetCustomizationMesh
// (Final, Exec, Native, Public)
// Parameters:
// struct FName                   ItemName                       (Parm, ZeroConstructor, IsPlainOldData)

void UDBDCheatManager::DBD_SetCustomizationMesh(const struct FName& ItemName)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_SetCustomizationMesh");

	UDBDCheatManager_DBD_SetCustomizationMesh_Params params;
	params.ItemName = ItemName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_SetContinuousPrintState
// (Final, Exec, Native, Public)
// Parameters:
// bool                           Enabled                        (Parm, ZeroConstructor, IsPlainOldData)

void UDBDCheatManager::DBD_SetContinuousPrintState(bool Enabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_SetContinuousPrintState");

	UDBDCheatManager_DBD_SetContinuousPrintState_Params params;
	params.Enabled = Enabled;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_SetContinuousPrintDebug
// (Final, Exec, Native, Public)
// Parameters:
// bool                           Enabled                        (Parm, ZeroConstructor, IsPlainOldData)

void UDBDCheatManager::DBD_SetContinuousPrintDebug(bool Enabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_SetContinuousPrintDebug");

	UDBDCheatManager_DBD_SetContinuousPrintDebug_Params params;
	params.Enabled = Enabled;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_SetChunkProgress
// (Final, Exec, Native, Public)
// Parameters:
// int                            chunkProgress                  (Parm, ZeroConstructor, IsPlainOldData)

void UDBDCheatManager::DBD_SetChunkProgress(int chunkProgress)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_SetChunkProgress");

	UDBDCheatManager_DBD_SetChunkProgress_Params params;
	params.chunkProgress = chunkProgress;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_SetChunkingState
// (Final, Exec, Native, Public)
// Parameters:
// unsigned char                  chunkState                     (Parm, ZeroConstructor, IsPlainOldData)

void UDBDCheatManager::DBD_SetChunkingState(unsigned char chunkState)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_SetChunkingState");

	UDBDCheatManager_DBD_SetChunkingState_Params params;
	params.chunkState = chunkState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_SetCharacterStat
// (Final, Exec, Native, Public)
// Parameters:
// struct FName                   StatName                       (Parm, ZeroConstructor, IsPlainOldData)
// float                          amount                         (Parm, ZeroConstructor, IsPlainOldData)

void UDBDCheatManager::DBD_SetCharacterStat(const struct FName& StatName, float amount)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_SetCharacterStat");

	UDBDCheatManager_DBD_SetCharacterStat_Params params;
	params.StatName = StatName;
	params.amount = amount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_SetAutoItemInteractEnabled
// (Final, Exec, Native, Public)
// Parameters:
// bool                           Enabled                        (Parm, ZeroConstructor, IsPlainOldData)
// float                          duration                       (Parm, ZeroConstructor, IsPlainOldData)
// float                          Delay                          (Parm, ZeroConstructor, IsPlainOldData)

void UDBDCheatManager::DBD_SetAutoItemInteractEnabled(bool Enabled, float duration, float Delay)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_SetAutoItemInteractEnabled");

	UDBDCheatManager_DBD_SetAutoItemInteractEnabled_Params params;
	params.Enabled = Enabled;
	params.duration = duration;
	params.Delay = Delay;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_SetAutoInteractEnabled
// (Final, Exec, Native, Public)
// Parameters:
// bool                           Enabled                        (Parm, ZeroConstructor, IsPlainOldData)
// float                          duration                       (Parm, ZeroConstructor, IsPlainOldData)
// float                          Delay                          (Parm, ZeroConstructor, IsPlainOldData)

void UDBDCheatManager::DBD_SetAutoInteractEnabled(bool Enabled, float duration, float Delay)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_SetAutoInteractEnabled");

	UDBDCheatManager_DBD_SetAutoInteractEnabled_Params params;
	params.Enabled = Enabled;
	params.duration = duration;
	params.Delay = Delay;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_SetAuthoritativeMovement
// (Final, Exec, Native, Public)
// Parameters:
// bool                           Enabled                        (Parm, ZeroConstructor, IsPlainOldData)

void UDBDCheatManager::DBD_SetAuthoritativeMovement(bool Enabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_SetAuthoritativeMovement");

	UDBDCheatManager_DBD_SetAuthoritativeMovement_Params params;
	params.Enabled = Enabled;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_SetActiveGeneratorCount
// (Final, Exec, Native, Public)
// Parameters:
// int                            Count                          (Parm, ZeroConstructor, IsPlainOldData)

void UDBDCheatManager::DBD_SetActiveGeneratorCount(int Count)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_SetActiveGeneratorCount");

	UDBDCheatManager_DBD_SetActiveGeneratorCount_Params params;
	params.Count = Count;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_SelectSpawner
// (Final, Exec, Native, Public)
// Parameters:
// int                            Type                           (Parm, ZeroConstructor, IsPlainOldData)

void UDBDCheatManager::DBD_SelectSpawner(int Type)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_SelectSpawner");

	UDBDCheatManager_DBD_SelectSpawner_Params params;
	params.Type = Type;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_SelectSlasher
// (Final, Exec, Native, Public)
// Parameters:
// uint32_t                       slasherIndex                   (Parm, ZeroConstructor, IsPlainOldData)

void UDBDCheatManager::DBD_SelectSlasher(uint32_t slasherIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_SelectSlasher");

	UDBDCheatManager_DBD_SelectSlasher_Params params;
	params.slasherIndex = slasherIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_SelectCamper
// (Final, Exec, Native, Public)
// Parameters:
// uint32_t                       camperIndex                    (Parm, ZeroConstructor, IsPlainOldData)

void UDBDCheatManager::DBD_SelectCamper(uint32_t camperIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_SelectCamper");

	UDBDCheatManager_DBD_SelectCamper_Params params;
	params.camperIndex = camperIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_ReverseBearTrap_ForceTimer
// (Final, Exec, Native, Public)
// Parameters:
// bool                           Force                          (Parm, ZeroConstructor, IsPlainOldData)

void UDBDCheatManager::DBD_ReverseBearTrap_ForceTimer(bool Force)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_ReverseBearTrap_ForceTimer");

	UDBDCheatManager_DBD_ReverseBearTrap_ForceTimer_Params params;
	params.Force = Force;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_ReverseBearTrap_FastForward
// (Final, Exec, Native, Public)
// Parameters:
// float                          DeltaTime                      (Parm, ZeroConstructor, IsPlainOldData)

void UDBDCheatManager::DBD_ReverseBearTrap_FastForward(float DeltaTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_ReverseBearTrap_FastForward");

	UDBDCheatManager_DBD_ReverseBearTrap_FastForward_Params params;
	params.DeltaTime = DeltaTime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_ReverseBearTrap_Execute
// (Final, Exec, Native, Public)

void UDBDCheatManager::DBD_ReverseBearTrap_Execute()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_ReverseBearTrap_Execute");

	UDBDCheatManager_DBD_ReverseBearTrap_Execute_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_ResistentCamper
// (Final, Exec, Native, Public)

void UDBDCheatManager::DBD_ResistentCamper()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_ResistentCamper");

	UDBDCheatManager_DBD_ResistentCamper_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_ResetTutorialTips
// (Final, Exec, Native, Public)

void UDBDCheatManager::DBD_ResetTutorialTips()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_ResetTutorialTips");

	UDBDCheatManager_DBD_ResetTutorialTips_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_ResetSeason
// (Final, Exec, Native, Public)

void UDBDCheatManager::DBD_ResetSeason()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_ResetSeason");

	UDBDCheatManager_DBD_ResetSeason_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_ResetPlayerLevelAndXp
// (Final, Exec, Native, Public)

void UDBDCheatManager::DBD_ResetPlayerLevelAndXp()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_ResetPlayerLevelAndXp");

	UDBDCheatManager_DBD_ResetPlayerLevelAndXp_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_ResetPallets
// (Final, Exec, Native, Public)

void UDBDCheatManager::DBD_ResetPallets()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_ResetPallets");

	UDBDCheatManager_DBD_ResetPallets_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_ResetMeshRelativeOffSet
// (Final, Exec, Native, Public)

void UDBDCheatManager::DBD_ResetMeshRelativeOffSet()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_ResetMeshRelativeOffSet");

	UDBDCheatManager_DBD_ResetMeshRelativeOffSet_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_ResetHookStage
// (Final, Exec, Native, Public)

void UDBDCheatManager::DBD_ResetHookStage()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_ResetHookStage");

	UDBDCheatManager_DBD_ResetHookStage_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_ResetCharacterStat
// (Final, Exec, Native, Public)
// Parameters:
// struct FName                   StatName                       (Parm, ZeroConstructor, IsPlainOldData)

void UDBDCheatManager::DBD_ResetCharacterStat(const struct FName& StatName)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_ResetCharacterStat");

	UDBDCheatManager_DBD_ResetCharacterStat_Params params;
	params.StatName = StatName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_ResetCamera
// (Final, Exec, Native, Public)

void UDBDCheatManager::DBD_ResetCamera()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_ResetCamera");

	UDBDCheatManager_DBD_ResetCamera_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_ResetBloodpoints
// (Final, Exec, Native, Public)

void UDBDCheatManager::DBD_ResetBloodpoints()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_ResetBloodpoints");

	UDBDCheatManager_DBD_ResetBloodpoints_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_ResetAllCharacterStats
// (Final, Exec, Native, Public)

void UDBDCheatManager::DBD_ResetAllCharacterStats()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_ResetAllCharacterStats");

	UDBDCheatManager_DBD_ResetAllCharacterStats_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_RemoveReverseBearTrap
// (Final, Exec, Native, Public)

void UDBDCheatManager::DBD_RemoveReverseBearTrap()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_RemoveReverseBearTrap");

	UDBDCheatManager_DBD_RemoveReverseBearTrap_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_RemoveHP
// (Final, Exec, Native, Public)

void UDBDCheatManager::DBD_RemoveHP()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_RemoveHP");

	UDBDCheatManager_DBD_RemoveHP_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_RemoveDust
// (Final, Exec, Native, Public)
// Parameters:
// int                            Count                          (Parm, ZeroConstructor, IsPlainOldData)

void UDBDCheatManager::DBD_RemoveDust(int Count)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_RemoveDust");

	UDBDCheatManager_DBD_RemoveDust_Params params;
	params.Count = Count;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_RemoveAllStatusEffects
// (Final, Exec, Native, Public)

void UDBDCheatManager::DBD_RemoveAllStatusEffects()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_RemoveAllStatusEffects");

	UDBDCheatManager_DBD_RemoveAllStatusEffects_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_RemoveAllPerks
// (Final, Exec, Native, Public)

void UDBDCheatManager::DBD_RemoveAllPerks()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_RemoveAllPerks");

	UDBDCheatManager_DBD_RemoveAllPerks_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_Ragdoll
// (Final, Exec, Native, Public)
// Parameters:
// struct FName                   RootBone                       (Parm, ZeroConstructor, IsPlainOldData)
// float                          Blend                          (Parm, ZeroConstructor, IsPlainOldData)

void UDBDCheatManager::DBD_Ragdoll(const struct FName& RootBone, float Blend)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_Ragdoll");

	UDBDCheatManager_DBD_Ragdoll_Params params;
	params.RootBone = RootBone;
	params.Blend = Blend;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_PutSurvivorToSleep
// (Final, Exec, Native, Public)

void UDBDCheatManager::DBD_PutSurvivorToSleep()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_PutSurvivorToSleep");

	UDBDCheatManager_DBD_PutSurvivorToSleep_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_ProcessOffering
// (Final, Exec, Native, Public)

void UDBDCheatManager::DBD_ProcessOffering()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_ProcessOffering");

	UDBDCheatManager_DBD_ProcessOffering_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_PrintSteamBuildIds
// (Final, Exec, Native, Public)

void UDBDCheatManager::DBD_PrintSteamBuildIds()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_PrintSteamBuildIds");

	UDBDCheatManager_DBD_PrintSteamBuildIds_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_PrintCurrentStateOnce
// (Final, Exec, Native, Public)

void UDBDCheatManager::DBD_PrintCurrentStateOnce()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_PrintCurrentStateOnce");

	UDBDCheatManager_DBD_PrintCurrentStateOnce_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_PlayMontage
// (Final, Exec, Native, Public)
// Parameters:
// struct FName                   MontageID                      (Parm, ZeroConstructor, IsPlainOldData)

void UDBDCheatManager::DBD_PlayMontage(const struct FName& MontageID)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_PlayMontage");

	UDBDCheatManager_DBD_PlayMontage_Params params;
	params.MontageID = MontageID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_PlayEntityTurn
// (Final, Exec, Native, Public)

void UDBDCheatManager::DBD_PlayEntityTurn()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_PlayEntityTurn");

	UDBDCheatManager_DBD_PlayEntityTurn_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_OptionToggleUseHeadphones
// (Final, Exec, Native, Public)

void UDBDCheatManager::DBD_OptionToggleUseHeadphones()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_OptionToggleUseHeadphones");

	UDBDCheatManager_DBD_OptionToggleUseHeadphones_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_OptionToggleMuteOnFocusLost
// (Final, Exec, Native, Public)

void UDBDCheatManager::DBD_OptionToggleMuteOnFocusLost()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_OptionToggleMuteOnFocusLost");

	UDBDCheatManager_DBD_OptionToggleMuteOnFocusLost_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_OptionToggleMuteMusic
// (Final, Exec, Native, Public)

void UDBDCheatManager::DBD_OptionToggleMuteMusic()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_OptionToggleMuteMusic");

	UDBDCheatManager_DBD_OptionToggleMuteMusic_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_OptionToggleInvertY
// (Final, Exec, Native, Public)

void UDBDCheatManager::DBD_OptionToggleInvertY()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_OptionToggleInvertY");

	UDBDCheatManager_DBD_OptionToggleInvertY_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_OptionToggleFullScreen
// (Final, Exec, Native, Public)

void UDBDCheatManager::DBD_OptionToggleFullScreen()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_OptionToggleFullScreen");

	UDBDCheatManager_DBD_OptionToggleFullScreen_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_OptionToggleAutoAdjust
// (Final, Exec, Native, Public)

void UDBDCheatManager::DBD_OptionToggleAutoAdjust()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_OptionToggleAutoAdjust");

	UDBDCheatManager_DBD_OptionToggleAutoAdjust_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_OptionSetResolution
// (Final, Exec, Native, Public)
// Parameters:
// int                            Resolution                     (Parm, ZeroConstructor, IsPlainOldData)

void UDBDCheatManager::DBD_OptionSetResolution(int Resolution)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_OptionSetResolution");

	UDBDCheatManager_DBD_OptionSetResolution_Params params;
	params.Resolution = Resolution;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_OptionSetQualityLevel
// (Final, Exec, Native, Public)
// Parameters:
// uint32_t                       qualityLevel                   (Parm, ZeroConstructor, IsPlainOldData)

void UDBDCheatManager::DBD_OptionSetQualityLevel(uint32_t qualityLevel)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_OptionSetQualityLevel");

	UDBDCheatManager_DBD_OptionSetQualityLevel_Params params;
	params.qualityLevel = qualityLevel;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_OptionSetMainVolume
// (Final, Exec, Native, Public)
// Parameters:
// int                            Volume                         (Parm, ZeroConstructor, IsPlainOldData)

void UDBDCheatManager::DBD_OptionSetMainVolume(int Volume)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_OptionSetMainVolume");

	UDBDCheatManager_DBD_OptionSetMainVolume_Params params;
	params.Volume = Volume;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_OptionSetLanguage
// (Final, Exec, Native, Public)
// Parameters:
// class FString                  lang                           (Parm, ZeroConstructor)

void UDBDCheatManager::DBD_OptionSetLanguage(const class FString& lang)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_OptionSetLanguage");

	UDBDCheatManager_DBD_OptionSetLanguage_Params params;
	params.lang = lang;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_OpenStoreFromRoleSelection
// (Final, Exec, Native, Public)

void UDBDCheatManager::DBD_OpenStoreFromRoleSelection()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_OpenStoreFromRoleSelection");

	UDBDCheatManager_DBD_OpenStoreFromRoleSelection_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_OpenLogFolder
// (Final, Exec, Native, Public)

void UDBDCheatManager::DBD_OpenLogFolder()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_OpenLogFolder");

	UDBDCheatManager_DBD_OpenLogFolder_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_NewAuthToken
// (Final, Exec, Native, Public)

void UDBDCheatManager::DBD_NewAuthToken()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_NewAuthToken");

	UDBDCheatManager_DBD_NewAuthToken_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_Mute
// (Final, Exec, Native, Public)
// Parameters:
// bool                           mute                           (Parm, ZeroConstructor, IsPlainOldData)

void UDBDCheatManager::DBD_Mute(bool mute)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_Mute");

	UDBDCheatManager_DBD_Mute_Params params;
	params.mute = mute;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_MirrorsSteamValidateTransaction
// (Final, Exec, Native, Public, HasOutParms)
// Parameters:
// class FString                  orderId                        (Parm, ZeroConstructor)
// struct FName                   ItemId                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)

void UDBDCheatManager::DBD_MirrorsSteamValidateTransaction(const class FString& orderId, const struct FName& ItemId)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_MirrorsSteamValidateTransaction");

	UDBDCheatManager_DBD_MirrorsSteamValidateTransaction_Params params;
	params.orderId = orderId;
	params.ItemId = ItemId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_MirrorsSteamInitTransaction
// (Final, Exec, Native, Public, HasOutParms)
// Parameters:
// struct FName                   ItemId                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// class FString                  Description                    (Parm, ZeroConstructor)

void UDBDCheatManager::DBD_MirrorsSteamInitTransaction(const struct FName& ItemId, const class FString& Description)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_MirrorsSteamInitTransaction");

	UDBDCheatManager_DBD_MirrorsSteamInitTransaction_Params params;
	params.ItemId = ItemId;
	params.Description = Description;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_MirrorsSteamFinalizeTransaction
// (Final, Exec, Native, Public)
// Parameters:
// class FString                  orderId                        (Parm, ZeroConstructor)

void UDBDCheatManager::DBD_MirrorsSteamFinalizeTransaction(const class FString& orderId)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_MirrorsSteamFinalizeTransaction");

	UDBDCheatManager_DBD_MirrorsSteamFinalizeTransaction_Params params;
	params.orderId = orderId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_MirrorsReportPlayer
// (Final, Exec, Native, Public)
// Parameters:
// class FString                  reportedPlayerMirrorsId        (Parm, ZeroConstructor)

void UDBDCheatManager::DBD_MirrorsReportPlayer(const class FString& reportedPlayerMirrorsId)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_MirrorsReportPlayer");

	UDBDCheatManager_DBD_MirrorsReportPlayer_Params params;
	params.reportedPlayerMirrorsId = reportedPlayerMirrorsId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_MirrorsRefreshWallet
// (Final, Exec, Native, Public)

void UDBDCheatManager::DBD_MirrorsRefreshWallet()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_MirrorsRefreshWallet");

	UDBDCheatManager_DBD_MirrorsRefreshWallet_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_MirrorsPurchaseNonPremiumItem
// (Final, Exec, Native, Public)
// Parameters:
// struct FName                   objectId                       (Parm, ZeroConstructor, IsPlainOldData)
// double                         toPurchaseQuantity             (Parm, ZeroConstructor, IsPlainOldData)
// class FString                  currencyId                     (Parm, ZeroConstructor)

void UDBDCheatManager::DBD_MirrorsPurchaseNonPremiumItem(const struct FName& objectId, double toPurchaseQuantity, const class FString& currencyId)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_MirrorsPurchaseNonPremiumItem");

	UDBDCheatManager_DBD_MirrorsPurchaseNonPremiumItem_Params params;
	params.objectId = objectId;
	params.toPurchaseQuantity = toPurchaseQuantity;
	params.currencyId = currencyId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_MirrorsPurchaseCharacter
// (Final, Exec, Native, Public)
// Parameters:
// struct FName                   characterCatalogId             (Parm, ZeroConstructor, IsPlainOldData)
// class FString                  currencyId                     (Parm, ZeroConstructor)

void UDBDCheatManager::DBD_MirrorsPurchaseCharacter(const struct FName& characterCatalogId, const class FString& currencyId)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_MirrorsPurchaseCharacter");

	UDBDCheatManager_DBD_MirrorsPurchaseCharacter_Params params;
	params.characterCatalogId = characterCatalogId;
	params.currencyId = currencyId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_MirrorsPurchaseBundle
// (Final, Exec, Native, Public)
// Parameters:
// struct FName                   objectId                       (Parm, ZeroConstructor, IsPlainOldData)
// double                         toPurchaseQuantity             (Parm, ZeroConstructor, IsPlainOldData)
// class FString                  currencyId                     (Parm, ZeroConstructor)
// bool                           isPremium                      (Parm, ZeroConstructor, IsPlainOldData)

void UDBDCheatManager::DBD_MirrorsPurchaseBundle(const struct FName& objectId, double toPurchaseQuantity, const class FString& currencyId, bool isPremium)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_MirrorsPurchaseBundle");

	UDBDCheatManager_DBD_MirrorsPurchaseBundle_Params params;
	params.objectId = objectId;
	params.toPurchaseQuantity = toPurchaseQuantity;
	params.currencyId = currencyId;
	params.isPremium = isPremium;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_MirrorsOpenBlindPack
// (Final, Exec, Native, Public)
// Parameters:
// struct FName                   packId                         (Parm, ZeroConstructor, IsPlainOldData)

void UDBDCheatManager::DBD_MirrorsOpenBlindPack(const struct FName& packId)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_MirrorsOpenBlindPack");

	UDBDCheatManager_DBD_MirrorsOpenBlindPack_Params params;
	params.packId = packId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_MirrorsLoadPlayerData
// (Final, Exec, Native, Public)

void UDBDCheatManager::DBD_MirrorsLoadPlayerData()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_MirrorsLoadPlayerData");

	UDBDCheatManager_DBD_MirrorsLoadPlayerData_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_MirrorsLoadOutfits
// (Final, Exec, Native, Public)

void UDBDCheatManager::DBD_MirrorsLoadOutfits()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_MirrorsLoadOutfits");

	UDBDCheatManager_DBD_MirrorsLoadOutfits_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_MirrorsGetCharacterCustomizationItemData
// (Final, Exec, Native, Public)

void UDBDCheatManager::DBD_MirrorsGetCharacterCustomizationItemData()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_MirrorsGetCharacterCustomizationItemData");

	UDBDCheatManager_DBD_MirrorsGetCharacterCustomizationItemData_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_MirrorsGetAvailableBundles
// (Final, Exec, Native, Public)

void UDBDCheatManager::DBD_MirrorsGetAvailableBundles()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_MirrorsGetAvailableBundles");

	UDBDCheatManager_DBD_MirrorsGetAvailableBundles_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_MirrorsDropInventoryItem
// (Final, Exec, Native, Public)
// Parameters:
// class FString                  objectId                       (Parm, ZeroConstructor)
// int                            DropCount                      (Parm, ZeroConstructor, IsPlainOldData)

void UDBDCheatManager::DBD_MirrorsDropInventoryItem(const class FString& objectId, int DropCount)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_MirrorsDropInventoryItem");

	UDBDCheatManager_DBD_MirrorsDropInventoryItem_Params params;
	params.objectId = objectId;
	params.DropCount = DropCount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_MirrorsDropAllInventoryItems
// (Final, Exec, Native, Public)

void UDBDCheatManager::DBD_MirrorsDropAllInventoryItems()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_MirrorsDropAllInventoryItems");

	UDBDCheatManager_DBD_MirrorsDropAllInventoryItems_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_MirrorsConsumeItem
// (Final, Exec, Native, Public)
// Parameters:
// struct FName                   objectId                       (Parm, ZeroConstructor, IsPlainOldData)

void UDBDCheatManager::DBD_MirrorsConsumeItem(const struct FName& objectId)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_MirrorsConsumeItem");

	UDBDCheatManager_DBD_MirrorsConsumeItem_Params params;
	params.objectId = objectId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_MirrorsClaimMessageRewards
// (Final, Exec, Native, Public)

void UDBDCheatManager::DBD_MirrorsClaimMessageRewards()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_MirrorsClaimMessageRewards");

	UDBDCheatManager_DBD_MirrorsClaimMessageRewards_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_MayThereBeOutlines
// (Final, Exec, Native, Public)
// Parameters:
// class FString                  Value                          (Parm, ZeroConstructor)

void UDBDCheatManager::DBD_MayThereBeOutlines(const class FString& Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_MayThereBeOutlines");

	UDBDCheatManager_DBD_MayThereBeOutlines_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_LoadDarkPartAssetLibrary
// (Final, Exec, Native, Public)

void UDBDCheatManager::DBD_LoadDarkPartAssetLibrary()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_LoadDarkPartAssetLibrary");

	UDBDCheatManager_DBD_LoadDarkPartAssetLibrary_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_LoadCharacterAssetLibrary
// (Final, Exec, Native, Public)
// Parameters:
// int                            CharacterId                    (Parm, ZeroConstructor, IsPlainOldData)

void UDBDCheatManager::DBD_LoadCharacterAssetLibrary(int CharacterId)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_LoadCharacterAssetLibrary");

	UDBDCheatManager_DBD_LoadCharacterAssetLibrary_Params params;
	params.CharacterId = CharacterId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_LoadCatalogDataFromS3
// (Final, Exec, Native, Public)

void UDBDCheatManager::DBD_LoadCatalogDataFromS3()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_LoadCatalogDataFromS3");

	UDBDCheatManager_DBD_LoadCatalogDataFromS3_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_ListStatusEffects
// (Final, Exec, Native, Public)

void UDBDCheatManager::DBD_ListStatusEffects()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_ListStatusEffects");

	UDBDCheatManager_DBD_ListStatusEffects_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_ListPerks
// (Final, Exec, Native, Public)

void UDBDCheatManager::DBD_ListPerks()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_ListPerks");

	UDBDCheatManager_DBD_ListPerks_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_ListItemAddons
// (Final, Exec, Native, Public)

void UDBDCheatManager::DBD_ListItemAddons()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_ListItemAddons");

	UDBDCheatManager_DBD_ListItemAddons_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_ListInventory
// (Final, Exec, Native, Public)

void UDBDCheatManager::DBD_ListInventory()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_ListInventory");

	UDBDCheatManager_DBD_ListInventory_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_ListInteractionInZone
// (Final, Exec, Native, Public)

void UDBDCheatManager::DBD_ListInteractionInZone()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_ListInteractionInZone");

	UDBDCheatManager_DBD_ListInteractionInZone_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_ListDBStatusEffects
// (Final, Exec, Native, Public)

void UDBDCheatManager::DBD_ListDBStatusEffects()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_ListDBStatusEffects");

	UDBDCheatManager_DBD_ListDBStatusEffects_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_ListDBPerks
// (Final, Exec, Native, Public)

void UDBDCheatManager::DBD_ListDBPerks()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_ListDBPerks");

	UDBDCheatManager_DBD_ListDBPerks_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_ListDBOfferings
// (Final, Exec, Native, Public)

void UDBDCheatManager::DBD_ListDBOfferings()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_ListDBOfferings");

	UDBDCheatManager_DBD_ListDBOfferings_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_ListDBItems
// (Final, Exec, Native, Public)

void UDBDCheatManager::DBD_ListDBItems()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_ListDBItems");

	UDBDCheatManager_DBD_ListDBItems_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_ListDBItemAddons
// (Final, Exec, Native, Public)

void UDBDCheatManager::DBD_ListDBItemAddons()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_ListDBItemAddons");

	UDBDCheatManager_DBD_ListDBItemAddons_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_ListDBCustomizations
// (Final, Exec, Native, Public)

void UDBDCheatManager::DBD_ListDBCustomizations()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_ListDBCustomizations");

	UDBDCheatManager_DBD_ListDBCustomizations_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_ListAvailableInteractions
// (Final, Exec, Native, Public)

void UDBDCheatManager::DBD_ListAvailableInteractions()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_ListAvailableInteractions");

	UDBDCheatManager_DBD_ListAvailableInteractions_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_ListAllStatusEffects
// (Final, Exec, Native, Public)

void UDBDCheatManager::DBD_ListAllStatusEffects()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_ListAllStatusEffects");

	UDBDCheatManager_DBD_ListAllStatusEffects_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_ListAllPerks
// (Final, Exec, Native, Public)

void UDBDCheatManager::DBD_ListAllPerks()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_ListAllPerks");

	UDBDCheatManager_DBD_ListAllPerks_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_ListAllItemAddons
// (Final, Exec, Native, Public)

void UDBDCheatManager::DBD_ListAllItemAddons()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_ListAllItemAddons");

	UDBDCheatManager_DBD_ListAllItemAddons_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_LevelUp
// (Final, Exec, Native, Public)

void UDBDCheatManager::DBD_LevelUp()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_LevelUp");

	UDBDCheatManager_DBD_LevelUp_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_Kill
// (Final, Exec, Native, Public)
// Parameters:
// bool                           sacrificed                     (Parm, ZeroConstructor, IsPlainOldData)

void UDBDCheatManager::DBD_Kill(bool sacrificed)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_Kill");

	UDBDCheatManager_DBD_Kill_Params params;
	params.sacrificed = sacrificed;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_ItsAlive
// (Final, Exec, Native, Public)
// Parameters:
// bool                           Enabled                        (Parm, ZeroConstructor, IsPlainOldData)

void UDBDCheatManager::DBD_ItsAlive(bool Enabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_ItsAlive");

	UDBDCheatManager_DBD_ItsAlive_Params params;
	params.Enabled = Enabled;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_IsServerPositionUpdatesEnabled
// (Final, Exec, Native, Public)

void UDBDCheatManager::DBD_IsServerPositionUpdatesEnabled()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_IsServerPositionUpdatesEnabled");

	UDBDCheatManager_DBD_IsServerPositionUpdatesEnabled_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_ImportLocalSaveGame
// (Final, Exec, Native, Public)

void UDBDCheatManager::DBD_ImportLocalSaveGame()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_ImportLocalSaveGame");

	UDBDCheatManager_DBD_ImportLocalSaveGame_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_HookEscapeAutoSuccess
// (Final, Exec, Native, Public)
// Parameters:
// bool                           Enabled                        (Parm, ZeroConstructor, IsPlainOldData)

void UDBDCheatManager::DBD_HookEscapeAutoSuccess(bool Enabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_HookEscapeAutoSuccess");

	UDBDCheatManager_DBD_HookEscapeAutoSuccess_Params params;
	params.Enabled = Enabled;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_GrantInventoryItemOnLevelUp
// (Final, Exec, Native, Public)
// Parameters:
// class FString                  playerType                     (Parm, ZeroConstructor)
// class FString                  ItemId                         (Parm, ZeroConstructor)

void UDBDCheatManager::DBD_GrantInventoryItemOnLevelUp(const class FString& playerType, const class FString& ItemId)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_GrantInventoryItemOnLevelUp");

	UDBDCheatManager_DBD_GrantInventoryItemOnLevelUp_Params params;
	params.playerType = playerType;
	params.ItemId = ItemId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_GetSyncedUTCTime
// (Final, Exec, Native, Public)

void UDBDCheatManager::DBD_GetSyncedUTCTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_GetSyncedUTCTime");

	UDBDCheatManager_DBD_GetSyncedUTCTime_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_GetPlayerLevel
// (Final, Exec, Native, Public)

void UDBDCheatManager::DBD_GetPlayerLevel()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_GetPlayerLevel");

	UDBDCheatManager_DBD_GetPlayerLevel_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_GetHighestWeightSeenNews
// (Final, Exec, Native, Public)

void UDBDCheatManager::DBD_GetHighestWeightSeenNews()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_GetHighestWeightSeenNews");

	UDBDCheatManager_DBD_GetHighestWeightSeenNews_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_GetChunkingState
// (Final, Exec, Native, Public)

void UDBDCheatManager::DBD_GetChunkingState()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_GetChunkingState");

	UDBDCheatManager_DBD_GetChunkingState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_GenerateAuthToken
// (Final, Exec, Native, Public)

void UDBDCheatManager::DBD_GenerateAuthToken()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_GenerateAuthToken");

	UDBDCheatManager_DBD_GenerateAuthToken_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_ForceSkillChecks
// (Final, Exec, Native, Public)
// Parameters:
// bool                           Enabled                        (Parm, ZeroConstructor, IsPlainOldData)

void UDBDCheatManager::DBD_ForceSkillChecks(bool Enabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_ForceSkillChecks");

	UDBDCheatManager_DBD_ForceSkillChecks_Params params;
	params.Enabled = Enabled;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_ForceFlee
// (Final, Exec, Native, Public)
// Parameters:
// bool                           toward                         (Parm, ZeroConstructor, IsPlainOldData)

void UDBDCheatManager::DBD_ForceFlee(bool toward)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_ForceFlee");

	UDBDCheatManager_DBD_ForceFlee_Params params;
	params.toward = toward;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_ForceDisableSkillChecks
// (Final, Exec, Native, Public)
// Parameters:
// bool                           Enabled                        (Parm, ZeroConstructor, IsPlainOldData)

void UDBDCheatManager::DBD_ForceDisableSkillChecks(bool Enabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_ForceDisableSkillChecks");

	UDBDCheatManager_DBD_ForceDisableSkillChecks_Params params;
	params.Enabled = Enabled;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_ForceDisableFootIK
// (Final, Exec, Native, Public)
// Parameters:
// bool                           Enabled                        (Parm, ZeroConstructor, IsPlainOldData)

void UDBDCheatManager::DBD_ForceDisableFootIK(bool Enabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_ForceDisableFootIK");

	UDBDCheatManager_DBD_ForceDisableFootIK_Params params;
	params.Enabled = Enabled;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_ForceBackendUnreachable
// (Final, Exec, Native, Public)
// Parameters:
// int                            Force                          (Parm, ZeroConstructor, IsPlainOldData)

void UDBDCheatManager::DBD_ForceBackendUnreachable(int Force)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_ForceBackendUnreachable");

	UDBDCheatManager_DBD_ForceBackendUnreachable_Params params;
	params.Force = Force;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_ExportLocalSaveGame
// (Final, Exec, Native, Public)

void UDBDCheatManager::DBD_ExportLocalSaveGame()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_ExportLocalSaveGame");

	UDBDCheatManager_DBD_ExportLocalSaveGame_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_EntitlementsInfo
// (Final, Exec, Native, Public)

void UDBDCheatManager::DBD_EntitlementsInfo()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_EntitlementsInfo");

	UDBDCheatManager_DBD_EntitlementsInfo_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_EnsureFail
// (Final, Exec, Native, Public)

void UDBDCheatManager::DBD_EnsureFail()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_EnsureFail");

	UDBDCheatManager_DBD_EnsureFail_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_EndGame
// (Final, Exec, Native, Public)

void UDBDCheatManager::DBD_EndGame()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_EndGame");

	UDBDCheatManager_DBD_EndGame_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_EnableStealth
// (Final, Exec, Native, Public)
// Parameters:
// bool                           Enabled                        (Parm, ZeroConstructor, IsPlainOldData)

void UDBDCheatManager::DBD_EnableStealth(bool Enabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_EnableStealth");

	UDBDCheatManager_DBD_EnableStealth_Params params;
	params.Enabled = Enabled;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_EnableServerPositionUpdates
// (Final, Exec, Native, Public)
// Parameters:
// bool                           Enabled                        (Parm, ZeroConstructor, IsPlainOldData)

void UDBDCheatManager::DBD_EnableServerPositionUpdates(bool Enabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_EnableServerPositionUpdates");

	UDBDCheatManager_DBD_EnableServerPositionUpdates_Params params;
	params.Enabled = Enabled;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_EnableLiveBackendWhenNotInShipping
// (Final, Exec, Native, Public)
// Parameters:
// bool                           Enabled                        (Parm, ZeroConstructor, IsPlainOldData)

void UDBDCheatManager::DBD_EnableLiveBackendWhenNotInShipping(bool Enabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_EnableLiveBackendWhenNotInShipping");

	UDBDCheatManager_DBD_EnableLiveBackendWhenNotInShipping_Params params;
	params.Enabled = Enabled;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_EnableDebugUnavailableInteractions
// (Final, Exec, Native, Public)
// Parameters:
// bool                           Enabled                        (Parm, ZeroConstructor, IsPlainOldData)

void UDBDCheatManager::DBD_EnableDebugUnavailableInteractions(bool Enabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_EnableDebugUnavailableInteractions");

	UDBDCheatManager_DBD_EnableDebugUnavailableInteractions_Params params;
	params.Enabled = Enabled;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_EnableCapsuleDynamicResize
// (Final, Exec, Native, Public)
// Parameters:
// bool                           Enabled                        (Parm, ZeroConstructor, IsPlainOldData)

void UDBDCheatManager::DBD_EnableCapsuleDynamicResize(bool Enabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_EnableCapsuleDynamicResize");

	UDBDCheatManager_DBD_EnableCapsuleDynamicResize_Params params;
	params.Enabled = Enabled;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_EarnXpAmount
// (Final, Exec, Native, Public)
// Parameters:
// int                            matchXp                        (Parm, ZeroConstructor, IsPlainOldData)

void UDBDCheatManager::DBD_EarnXpAmount(int matchXp)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_EarnXpAmount");

	UDBDCheatManager_DBD_EarnXpAmount_Params params;
	params.matchXp = matchXp;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_EarnPlayerXp
// (Final, Exec, Native, Public)
// Parameters:
// int                            matchTime                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           isFirstMatch                   (Parm, ZeroConstructor, IsPlainOldData)
// int                            consecutiveMatch               (Parm, ZeroConstructor, IsPlainOldData)
// class FString                  playerType                     (Parm, ZeroConstructor)
// class FString                  highestEmblemQuality           (Parm, ZeroConstructor)
// bool                           queueForTally                  (Parm, ZeroConstructor, IsPlainOldData)

void UDBDCheatManager::DBD_EarnPlayerXp(int matchTime, bool isFirstMatch, int consecutiveMatch, const class FString& playerType, const class FString& highestEmblemQuality, bool queueForTally)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_EarnPlayerXp");

	UDBDCheatManager_DBD_EarnPlayerXp_Params params;
	params.matchTime = matchTime;
	params.isFirstMatch = isFirstMatch;
	params.consecutiveMatch = consecutiveMatch;
	params.playerType = playerType;
	params.highestEmblemQuality = highestEmblemQuality;
	params.queueForTally = queueForTally;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_DropSurvivorItems
// (Final, Exec, Native, Public)

void UDBDCheatManager::DBD_DropSurvivorItems()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_DropSurvivorItems");

	UDBDCheatManager_DBD_DropSurvivorItems_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_DisplayPlayerStat
// (Final, Exec, Native, Public)
// Parameters:
// struct FName                   StatName                       (Parm, ZeroConstructor, IsPlainOldData)

void UDBDCheatManager::DBD_DisplayPlayerStat(const struct FName& StatName)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_DisplayPlayerStat");

	UDBDCheatManager_DBD_DisplayPlayerStat_Params params;
	params.StatName = StatName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_DisplayCharacterStat
// (Final, Exec, Native, Public)
// Parameters:
// struct FName                   StatName                       (Parm, ZeroConstructor, IsPlainOldData)

void UDBDCheatManager::DBD_DisplayCharacterStat(const struct FName& StatName)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_DisplayCharacterStat");

	UDBDCheatManager_DBD_DisplayCharacterStat_Params params;
	params.StatName = StatName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_DispatchOnPostItemAddonsCreation
// (Final, Exec, Native, Public)

void UDBDCheatManager::DBD_DispatchOnPostItemAddonsCreation()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_DispatchOnPostItemAddonsCreation");

	UDBDCheatManager_DBD_DispatchOnPostItemAddonsCreation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_DestroyAllMenuCharacter
// (Final, Exec, Native, Public)

void UDBDCheatManager::DBD_DestroyAllMenuCharacter()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_DestroyAllMenuCharacter");

	UDBDCheatManager_DBD_DestroyAllMenuCharacter_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_DeleteAllCharacterAssetLibrary
// (Final, Exec, Native, Public)

void UDBDCheatManager::DBD_DeleteAllCharacterAssetLibrary()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_DeleteAllCharacterAssetLibrary");

	UDBDCheatManager_DBD_DeleteAllCharacterAssetLibrary_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_DebugSetCustomizationMesh
// (Final, Exec, Native, Public)
// Parameters:
// struct FName                   ItemName                       (Parm, ZeroConstructor, IsPlainOldData)

void UDBDCheatManager::DBD_DebugSetCustomizationMesh(const struct FName& ItemName)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_DebugSetCustomizationMesh");

	UDBDCheatManager_DBD_DebugSetCustomizationMesh_Params params;
	params.ItemName = ItemName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_DebugPrintInteractionsInZone
// (Final, Exec, Native, Public)

void UDBDCheatManager::DBD_DebugPrintInteractionsInZone()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_DebugPrintInteractionsInZone");

	UDBDCheatManager_DBD_DebugPrintInteractionsInZone_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_DebugIsInterruptable
// (Final, Exec, Native, Public)
// Parameters:
// bool                           interruptable                  (Parm, ZeroConstructor, IsPlainOldData)

void UDBDCheatManager::DBD_DebugIsInterruptable(bool interruptable)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_DebugIsInterruptable");

	UDBDCheatManager_DBD_DebugIsInterruptable_Params params;
	params.interruptable = interruptable;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_DebugInteractionPriority
// (Final, Exec, Native, Public)
// Parameters:
// bool                           Enabled                        (Parm, ZeroConstructor, IsPlainOldData)

void UDBDCheatManager::DBD_DebugInteractionPriority(bool Enabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_DebugInteractionPriority");

	UDBDCheatManager_DBD_DebugInteractionPriority_Params params;
	params.Enabled = Enabled;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_CrashGameWithNullPtr
// (Final, Exec, Native, Public)

void UDBDCheatManager::DBD_CrashGameWithNullPtr()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_CrashGameWithNullPtr");

	UDBDCheatManager_DBD_CrashGameWithNullPtr_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_CrashGameWithCheck
// (Final, Exec, Native, Public)

void UDBDCheatManager::DBD_CrashGameWithCheck()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_CrashGameWithCheck");

	UDBDCheatManager_DBD_CrashGameWithCheck_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_ConsumeBloodwebs
// (Final, Exec, Native, Public)
// Parameters:
// int                            initialLevel                   (Parm, ZeroConstructor, IsPlainOldData)
// int                            Count                          (Parm, ZeroConstructor, IsPlainOldData)

void UDBDCheatManager::DBD_ConsumeBloodwebs(int initialLevel, int Count)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_ConsumeBloodwebs");

	UDBDCheatManager_DBD_ConsumeBloodwebs_Params params;
	params.initialLevel = initialLevel;
	params.Count = Count;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_CompleteEscapeRequirements
// (Final, Exec, Native, Public)

void UDBDCheatManager::DBD_CompleteEscapeRequirements()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_CompleteEscapeRequirements");

	UDBDCheatManager_DBD_CompleteEscapeRequirements_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_CloseSystemPromptAndResetStack
// (Final, Exec, Native, Public)

void UDBDCheatManager::DBD_CloseSystemPromptAndResetStack()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_CloseSystemPromptAndResetStack");

	UDBDCheatManager_DBD_CloseSystemPromptAndResetStack_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_ClearPotentialReferencesToChunksNotYetDownloaded
// (Final, Exec, Native, Public)

void UDBDCheatManager::DBD_ClearPotentialReferencesToChunksNotYetDownloaded()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_ClearPotentialReferencesToChunksNotYetDownloaded");

	UDBDCheatManager_DBD_ClearPotentialReferencesToChunksNotYetDownloaded_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_CheatChainsaw
// (Final, Exec, Native, Public)
// Parameters:
// bool                           Enabled                        (Parm, ZeroConstructor, IsPlainOldData)

void UDBDCheatManager::DBD_CheatChainsaw(bool Enabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_CheatChainsaw");

	UDBDCheatManager_DBD_CheatChainsaw_Params params;
	params.Enabled = Enabled;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_BuyBloodwebsLevel
// (Final, Exec, Native, Public)
// Parameters:
// int                            initialLevel                   (Parm, ZeroConstructor, IsPlainOldData)
// int                            Count                          (Parm, ZeroConstructor, IsPlainOldData)

void UDBDCheatManager::DBD_BuyBloodwebsLevel(int initialLevel, int Count)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_BuyBloodwebsLevel");

	UDBDCheatManager_DBD_BuyBloodwebsLevel_Params params;
	params.initialLevel = initialLevel;
	params.Count = Count;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_AutoWiggle
// (Final, Exec, Native, Public)

void UDBDCheatManager::DBD_AutoWiggle()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_AutoWiggle");

	UDBDCheatManager_DBD_AutoWiggle_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_AlwaysPounce
// (Final, Exec, Native, Public)
// Parameters:
// bool                           Enabled                        (Parm, ZeroConstructor, IsPlainOldData)

void UDBDCheatManager::DBD_AlwaysPounce(bool Enabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_AlwaysPounce");

	UDBDCheatManager_DBD_AlwaysPounce_Params params;
	params.Enabled = Enabled;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_AddToPlayerStat
// (Final, Exec, Native, Public)
// Parameters:
// struct FName                   StatName                       (Parm, ZeroConstructor, IsPlainOldData)
// float                          amount                         (Parm, ZeroConstructor, IsPlainOldData)

void UDBDCheatManager::DBD_AddToPlayerStat(const struct FName& StatName, float amount)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_AddToPlayerStat");

	UDBDCheatManager_DBD_AddToPlayerStat_Params params;
	params.StatName = StatName;
	params.amount = amount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_AddToCharacterStat
// (Final, Exec, Native, Public)
// Parameters:
// struct FName                   StatName                       (Parm, ZeroConstructor, IsPlainOldData)
// float                          amount                         (Parm, ZeroConstructor, IsPlainOldData)

void UDBDCheatManager::DBD_AddToCharacterStat(const struct FName& StatName, float amount)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_AddToCharacterStat");

	UDBDCheatManager_DBD_AddToCharacterStat_Params params;
	params.StatName = StatName;
	params.amount = amount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_AddOffering
// (Final, Exec, Native, Public)
// Parameters:
// struct FName                   Name                           (Parm, ZeroConstructor, IsPlainOldData)

void UDBDCheatManager::DBD_AddOffering(const struct FName& Name)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_AddOffering");

	UDBDCheatManager_DBD_AddOffering_Params params;
	params.Name = Name;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_AddHP
// (Final, Exec, Native, Public)

void UDBDCheatManager::DBD_AddHP()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_AddHP");

	UDBDCheatManager_DBD_AddHP_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_AddDust
// (Final, Exec, Native, Public)
// Parameters:
// int                            Count                          (Parm, ZeroConstructor, IsPlainOldData)

void UDBDCheatManager::DBD_AddDust(int Count)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_AddDust");

	UDBDCheatManager_DBD_AddDust_Params params;
	params.Count = Count;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_ActivateWeakenedMechanic
// (Final, Exec, Native, Public)
// Parameters:
// bool                           On                             (Parm, ZeroConstructor, IsPlainOldData)

void UDBDCheatManager::DBD_ActivateWeakenedMechanic(bool On)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_ActivateWeakenedMechanic");

	UDBDCheatManager_DBD_ActivateWeakenedMechanic_Params params;
	params.On = On;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDCheatManager.DBD_ActivateEscapeDoor
// (Final, Exec, Native, Public)

void UDBDCheatManager::DBD_ActivateEscapeDoor()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDCheatManager.DBD_ActivateEscapeDoor");

	UDBDCheatManager_DBD_ActivateEscapeDoor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDDiceRoller.GetRollResultByTunableValue
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                  RollingActor                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// struct FName                   TunableValueName               (Parm, ZeroConstructor, IsPlainOldData)
// float                          MultiplicativeModifier         (Parm, ZeroConstructor, IsPlainOldData)
// float                          AdditiveModifier               (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UDBDDiceRoller::STATIC_GetRollResultByTunableValue(class AActor* RollingActor, const struct FName& TunableValueName, float MultiplicativeModifier, float AdditiveModifier)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDDiceRoller.GetRollResultByTunableValue");

	UDBDDiceRoller_GetRollResultByTunableValue_Params params;
	params.RollingActor = RollingActor;
	params.TunableValueName = TunableValueName;
	params.MultiplicativeModifier = MultiplicativeModifier;
	params.AdditiveModifier = AdditiveModifier;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDDiceRoller.GetRollResultByDiceRollType
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class ADBDPlayer*              RollingPlayer                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<EDiceRollType>     DiceRollType                   (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UDBDDiceRoller::STATIC_GetRollResultByDiceRollType(class ADBDPlayer* RollingPlayer, TEnumAsByte<EDiceRollType> DiceRollType)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDDiceRoller.GetRollResultByDiceRollType");

	UDBDDiceRoller_GetRollResultByDiceRollType_Params params;
	params.RollingPlayer = RollingPlayer;
	params.DiceRollType = DiceRollType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDDiceRoller.CalculateTickedRollResult
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                  RollingActor                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// float                          BaseProbability                (Parm, ZeroConstructor, IsPlainOldData)
// float                          ticks                          (Parm, ZeroConstructor, IsPlainOldData)
// float                          MultiplicativeModifier         (Parm, ZeroConstructor, IsPlainOldData)
// float                          AdditiveModifier               (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UDBDDiceRoller::STATIC_CalculateTickedRollResult(class AActor* RollingActor, float BaseProbability, float ticks, float MultiplicativeModifier, float AdditiveModifier)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDDiceRoller.CalculateTickedRollResult");

	UDBDDiceRoller_CalculateTickedRollResult_Params params;
	params.RollingActor = RollingActor;
	params.BaseProbability = BaseProbability;
	params.ticks = ticks;
	params.MultiplicativeModifier = MultiplicativeModifier;
	params.AdditiveModifier = AdditiveModifier;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDDiceRoller.CalculateRollResult
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                  RollingActor                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// float                          BaseProbability                (Parm, ZeroConstructor, IsPlainOldData)
// float                          MultiplicativeModifier         (Parm, ZeroConstructor, IsPlainOldData)
// float                          AdditiveModifier               (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UDBDDiceRoller::STATIC_CalculateRollResult(class AActor* RollingActor, float BaseProbability, float MultiplicativeModifier, float AdditiveModifier)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDDiceRoller.CalculateRollResult");

	UDBDDiceRoller_CalculateRollResult_Params params;
	params.RollingActor = RollingActor;
	params.BaseProbability = BaseProbability;
	params.MultiplicativeModifier = MultiplicativeModifier;
	params.AdditiveModifier = AdditiveModifier;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDDiceRoller.CalculateOverTimeRollResult
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                  RollingActor                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// float                          BaseProbability                (Parm, ZeroConstructor, IsPlainOldData)
// float                          DeltaTime                      (Parm, ZeroConstructor, IsPlainOldData)
// float                          ExpectedTime                   (Parm, ZeroConstructor, IsPlainOldData)
// float                          MultiplicativeModifier         (Parm, ZeroConstructor, IsPlainOldData)
// float                          AdditiveModifier               (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UDBDDiceRoller::STATIC_CalculateOverTimeRollResult(class AActor* RollingActor, float BaseProbability, float DeltaTime, float ExpectedTime, float MultiplicativeModifier, float AdditiveModifier)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDDiceRoller.CalculateOverTimeRollResult");

	UDBDDiceRoller_CalculateOverTimeRollResult_Params params;
	params.RollingActor = RollingActor;
	params.BaseProbability = BaseProbability;
	params.DeltaTime = DeltaTime;
	params.ExpectedTime = ExpectedTime;
	params.MultiplicativeModifier = MultiplicativeModifier;
	params.AdditiveModifier = AdditiveModifier;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDEmblem_KillerChaser.OnChaseStart
// (Final, Native, Public)
// Parameters:
// class ACamperPlayer*           chasedPlayer                   (Parm, ZeroConstructor, IsPlainOldData)

void UDBDEmblem_KillerChaser::OnChaseStart(class ACamperPlayer* chasedPlayer)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDEmblem_KillerChaser.OnChaseStart");

	UDBDEmblem_KillerChaser_OnChaseStart_Params params;
	params.chasedPlayer = chasedPlayer;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDEmblem_KillerDevout.OnPlayerDisconnect
// (Final, Native, Public)
// Parameters:
// class ADBDPlayer*              Player                         (Parm, ZeroConstructor, IsPlainOldData)

void UDBDEmblem_KillerDevout::OnPlayerDisconnect(class ADBDPlayer* Player)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDEmblem_KillerDevout.OnPlayerDisconnect");

	UDBDEmblem_KillerDevout_OnPlayerDisconnect_Params params;
	params.Player = Player;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDEmblem_KillerMalicious.OnPlayerDisconnect
// (Final, Native, Public)
// Parameters:
// class ADBDPlayer*              Player                         (Parm, ZeroConstructor, IsPlainOldData)

void UDBDEmblem_KillerMalicious::OnPlayerDisconnect(class ADBDPlayer* Player)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDEmblem_KillerMalicious.OnPlayerDisconnect");

	UDBDEmblem_KillerMalicious_OnPlayerDisconnect_Params params;
	params.Player = Player;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDEmblem_SurvivorEvader.OnChaseStartEvent
// (Final, Native, Public)
// Parameters:
// class ACamperPlayer*           chasedPlayer                   (Parm, ZeroConstructor, IsPlainOldData)

void UDBDEmblem_SurvivorEvader::OnChaseStartEvent(class ACamperPlayer* chasedPlayer)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDEmblem_SurvivorEvader.OnChaseStartEvent");

	UDBDEmblem_SurvivorEvader_OnChaseStartEvent_Params params;
	params.chasedPlayer = chasedPlayer;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDEmblemEvaluatorComponent.OnPlayerGameplayEvent
// (Final, Native, Public)
// Parameters:
// TEnumAsByte<EDBDScoreTypes>    ScoreType                      (Parm, ZeroConstructor, IsPlainOldData)
// float                          amount                         (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  Instigator                     (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  Target                         (Parm, ZeroConstructor, IsPlainOldData)

void UDBDEmblemEvaluatorComponent::OnPlayerGameplayEvent(TEnumAsByte<EDBDScoreTypes> ScoreType, float amount, class AActor* Instigator, class AActor* Target)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDEmblemEvaluatorComponent.OnPlayerGameplayEvent");

	UDBDEmblemEvaluatorComponent_OnPlayerGameplayEvent_Params params;
	params.ScoreType = ScoreType;
	params.amount = amount;
	params.Instigator = Instigator;
	params.Target = Target;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDEmblemEvaluatorComponent.OnGameplayEvent
// (Final, Native, Public)
// Parameters:
// TEnumAsByte<EDBDScoreTypes>    ScoreType                      (Parm, ZeroConstructor, IsPlainOldData)
// float                          amount                         (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  Instigator                     (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  Target                         (Parm, ZeroConstructor, IsPlainOldData)

void UDBDEmblemEvaluatorComponent::OnGameplayEvent(TEnumAsByte<EDBDScoreTypes> ScoreType, float amount, class AActor* Instigator, class AActor* Target)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDEmblemEvaluatorComponent.OnGameplayEvent");

	UDBDEmblemEvaluatorComponent_OnGameplayEvent_Params params;
	params.ScoreType = ScoreType;
	params.amount = amount;
	params.Instigator = Instigator;
	params.Target = Target;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDGameState.TravelToKillerServer
// (Final, Native, Public)

void ADBDGameState::TravelToKillerServer()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameState.TravelToKillerServer");

	ADBDGameState_TravelToKillerServer_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDGameState.SortOfferings
// (Final, Native, Public)

void ADBDGameState::SortOfferings()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameState.SortOfferings");

	ADBDGameState_SortOfferings_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDGameState.ShouldDisplayMapName
// (Final, Native, Public, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ADBDGameState::ShouldDisplayMapName()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameState.ShouldDisplayMapName");

	ADBDGameState_ShouldDisplayMapName_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDGameState.SetupGameLoaded
// (Final, Native, Public)

void ADBDGameState::SetupGameLoaded()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameState.SetupGameLoaded");

	ADBDGameState_SetupGameLoaded_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDGameState.SetSlasher
// (Final, Native, Public)
// Parameters:
// class ASlasherPlayer*          SlasherPlayer                  (Parm, ZeroConstructor, IsPlainOldData)

void ADBDGameState::SetSlasher(class ASlasherPlayer* SlasherPlayer)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameState.SetSlasher");

	ADBDGameState_SetSlasher_Params params;
	params.SlasherPlayer = SlasherPlayer;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDGameState.SetPlayersReadyToStart
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           playersReadyToStart            (Parm, ZeroConstructor, IsPlainOldData)

void ADBDGameState::SetPlayersReadyToStart(bool playersReadyToStart)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameState.SetPlayersReadyToStart");

	ADBDGameState_SetPlayersReadyToStart_Params params;
	params.playersReadyToStart = playersReadyToStart;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDGameState.SetKillerIntroCompletedNormalized
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          completedAmount                (Parm, ZeroConstructor, IsPlainOldData)

void ADBDGameState::SetKillerIntroCompletedNormalized(float completedAmount)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameState.SetKillerIntroCompletedNormalized");

	ADBDGameState_SetKillerIntroCompletedNormalized_Params params;
	params.completedAmount = completedAmount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDGameState.SetGameSelectedOffering
// (Final, Native, Public, HasOutParms)
// Parameters:
// TArray<struct FSelectedOffering> Offerings                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)

void ADBDGameState::SetGameSelectedOffering(TArray<struct FSelectedOffering> Offerings)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameState.SetGameSelectedOffering");

	ADBDGameState_SetGameSelectedOffering_Params params;
	params.Offerings = Offerings;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDGameState.SetGameLevelLoaded
// (Final, Native, Public)

void ADBDGameState::SetGameLevelLoaded()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameState.SetGameLevelLoaded");

	ADBDGameState_SetGameLevelLoaded_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDGameState.SetDisplayMapName
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           Display                        (Parm, ZeroConstructor, IsPlainOldData)

void ADBDGameState::SetDisplayMapName(bool Display)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameState.SetDisplayMapName");

	ADBDGameState_SetDisplayMapName_Params params;
	params.Display = Display;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDGameState.SetBuiltLevelData
// (Final, Native, Public, HasOutParms)
// Parameters:
// struct FName                   ThemeName                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// struct FName                   ThemeWeather                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// class FString                  MapName                        (Parm, ZeroConstructor)
// int                            TileCount                      (Parm, ZeroConstructor, IsPlainOldData)
// TArray<struct FDependency>     LevelDependencies              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)

void ADBDGameState::SetBuiltLevelData(const struct FName& ThemeName, const struct FName& ThemeWeather, const class FString& MapName, int TileCount, TArray<struct FDependency> LevelDependencies)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameState.SetBuiltLevelData");

	ADBDGameState_SetBuiltLevelData_Params params;
	params.ThemeName = ThemeName;
	params.ThemeWeather = ThemeWeather;
	params.MapName = MapName;
	params.TileCount = TileCount;
	params.LevelDependencies = LevelDependencies;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDGameState.Server_UpdateGameRole
// (Final, Native, Public)

void ADBDGameState::Server_UpdateGameRole()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameState.Server_UpdateGameRole");

	ADBDGameState_Server_UpdateGameRole_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDGameState.ResetGameLevelLoaded
// (Final, Native, Public)

void ADBDGameState::ResetGameLevelLoaded()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameState.ResetGameLevelLoaded");

	ADBDGameState_ResetGameLevelLoaded_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDGameState.RemoveTrap
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AInteractable*           toRemove                       (Parm, ZeroConstructor, IsPlainOldData)

void ADBDGameState::RemoveTrap(class AInteractable* toRemove)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameState.RemoveTrap");

	ADBDGameState_RemoveTrap_Params params;
	params.toRemove = toRemove;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDGameState.RemoveHeartbeatEmitter
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                  toRemove                       (Parm, ZeroConstructor, IsPlainOldData)

void ADBDGameState::RemoveHeartbeatEmitter(class AActor* toRemove)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameState.RemoveHeartbeatEmitter");

	ADBDGameState_RemoveHeartbeatEmitter_Params params;
	params.toRemove = toRemove;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDGameState.OnRep_SurvivorLeft
// (Final, Native, Private)
// Parameters:
// int                            OldValue                       (Parm, ZeroConstructor, IsPlainOldData)

void ADBDGameState::OnRep_SurvivorLeft(int OldValue)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameState.OnRep_SurvivorLeft");

	ADBDGameState_OnRep_SurvivorLeft_Params params;
	params.OldValue = OldValue;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDGameState.OnRep_SessionId
// (Final, Native, Private, HasDefaults)
// Parameters:
// struct FGuid                   OldValue                       (Parm, ZeroConstructor, IsPlainOldData)

void ADBDGameState::OnRep_SessionId(const struct FGuid& OldValue)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameState.OnRep_SessionId");

	ADBDGameState_OnRep_SessionId_Params params;
	params.OldValue = OldValue;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDGameState.OnRep_ServerJoiningData
// (Final, Native, Private)

void ADBDGameState::OnRep_ServerJoiningData()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameState.OnRep_ServerJoiningData");

	ADBDGameState_OnRep_ServerJoiningData_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDGameState.OnRep_RequiredActivatedGeneratorCount
// (Final, Native, Private)
// Parameters:
// int                            oldRequiredActivatedGeneratorCount (Parm, ZeroConstructor, IsPlainOldData)

void ADBDGameState::OnRep_RequiredActivatedGeneratorCount(int oldRequiredActivatedGeneratorCount)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameState.OnRep_RequiredActivatedGeneratorCount");

	ADBDGameState_OnRep_RequiredActivatedGeneratorCount_Params params;
	params.oldRequiredActivatedGeneratorCount = oldRequiredActivatedGeneratorCount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDGameState.OnRep_PlayersReadyToStart
// (Final, Native, Protected)
// Parameters:
// bool                           OldValue                       (Parm, ZeroConstructor, IsPlainOldData)

void ADBDGameState::OnRep_PlayersReadyToStart(bool OldValue)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameState.OnRep_PlayersReadyToStart");

	ADBDGameState_OnRep_PlayersReadyToStart_Params params;
	params.OldValue = OldValue;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDGameState.OnRep_OnLevelReadyToPlay
// (Final, Native, Private)
// Parameters:
// bool                           OldValue                       (Parm, ZeroConstructor, IsPlainOldData)

void ADBDGameState::OnRep_OnLevelReadyToPlay(bool OldValue)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameState.OnRep_OnLevelReadyToPlay");

	ADBDGameState_OnRep_OnLevelReadyToPlay_Params params;
	params.OldValue = OldValue;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDGameState.OnRep_OnLevelLoaded
// (Final, Native, Protected)
// Parameters:
// bool                           OldValue                       (Parm, ZeroConstructor, IsPlainOldData)

void ADBDGameState::OnRep_OnLevelLoaded(bool OldValue)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameState.OnRep_OnLevelLoaded");

	ADBDGameState_OnRep_OnLevelLoaded_Params params;
	params.OldValue = OldValue;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDGameState.OnRep_OfferingSequenceReady
// (Final, Native, Protected)

void ADBDGameState::OnRep_OfferingSequenceReady()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameState.OnRep_OfferingSequenceReady");

	ADBDGameState_OnRep_OfferingSequenceReady_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDGameState.OnRep_HatchOpened
// (Final, Native, Private)
// Parameters:
// bool                           OldValue                       (Parm, ZeroConstructor, IsPlainOldData)

void ADBDGameState::OnRep_HatchOpened(bool OldValue)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameState.OnRep_HatchOpened");

	ADBDGameState_OnRep_HatchOpened_Params params;
	params.OldValue = OldValue;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDGameState.OnRep_GamePresetData
// (Final, Native, Private)

void ADBDGameState::OnRep_GamePresetData()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameState.OnRep_GamePresetData");

	ADBDGameState_OnRep_GamePresetData_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDGameState.OnRep_EscapeDoorActivated
// (Final, Native, Private)
// Parameters:
// bool                           OldValue                       (Parm, ZeroConstructor, IsPlainOldData)

void ADBDGameState::OnRep_EscapeDoorActivated(bool OldValue)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameState.OnRep_EscapeDoorActivated");

	ADBDGameState_OnRep_EscapeDoorActivated_Params params;
	params.OldValue = OldValue;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDGameState.OnRep_ActivatedGeneratorCount
// (Final, Native, Private)
// Parameters:
// int                            OldValue                       (Parm, ZeroConstructor, IsPlainOldData)

void ADBDGameState::OnRep_ActivatedGeneratorCount(int OldValue)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameState.OnRep_ActivatedGeneratorCount");

	ADBDGameState_OnRep_ActivatedGeneratorCount_Params params;
	params.OldValue = OldValue;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDGameState.Multicast_UpdateCharacterFromGamePreset
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// class ADBDPlayerState_Menu*    playerState_Menu               (Parm, ZeroConstructor, IsPlainOldData)
// struct FGamePresetData         GamePresetData                 (Parm)

void ADBDGameState::Multicast_UpdateCharacterFromGamePreset(class ADBDPlayerState_Menu* playerState_Menu, const struct FGamePresetData& GamePresetData)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameState.Multicast_UpdateCharacterFromGamePreset");

	ADBDGameState_Multicast_UpdateCharacterFromGamePreset_Params params;
	params.playerState_Menu = playerState_Menu;
	params.GamePresetData = GamePresetData;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDGameState.Multicast_SetServerLeftGame
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// bool                           hasServerLeftGame              (Parm, ZeroConstructor, IsPlainOldData)

void ADBDGameState::Multicast_SetServerLeftGame(bool hasServerLeftGame)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameState.Multicast_SetServerLeftGame");

	ADBDGameState_Multicast_SetServerLeftGame_Params params;
	params.hasServerLeftGame = hasServerLeftGame;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDGameState.Multicast_SetLostServerConnection
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// bool                           hasLostServerConnection        (Parm, ZeroConstructor, IsPlainOldData)

void ADBDGameState::Multicast_SetLostServerConnection(bool hasLostServerConnection)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameState.Multicast_SetLostServerConnection");

	ADBDGameState_Multicast_SetLostServerConnection_Params params;
	params.hasLostServerConnection = hasLostServerConnection;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDGameState.Multicast_SetGameLevelLoaded
// (Net, NetReliable, Native, Event, NetMulticast, Public)

void ADBDGameState::Multicast_SetGameLevelLoaded()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameState.Multicast_SetGameLevelLoaded");

	ADBDGameState_Multicast_SetGameLevelLoaded_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDGameState.Multicast_SetGameEnded
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// bool                           hasServerLeftGame              (Parm, ZeroConstructor, IsPlainOldData)

void ADBDGameState::Multicast_SetGameEnded(bool hasServerLeftGame)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameState.Multicast_SetGameEnded");

	ADBDGameState_Multicast_SetGameEnded_Params params;
	params.hasServerLeftGame = hasServerLeftGame;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDGameState.Multicast_SetBuiltLevelData
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// struct FName                   ThemeName                      (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// struct FName                   ThemeWeather                   (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// class FString                  MapName                        (Parm, ZeroConstructor)
// int                            TileCount                      (Parm, ZeroConstructor, IsPlainOldData)
// TArray<struct FDependency>     LevelDependencies              (ConstParm, Parm, ZeroConstructor, ReferenceParm)

void ADBDGameState::Multicast_SetBuiltLevelData(const struct FName& ThemeName, const struct FName& ThemeWeather, const class FString& MapName, int TileCount, TArray<struct FDependency> LevelDependencies)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameState.Multicast_SetBuiltLevelData");

	ADBDGameState_Multicast_SetBuiltLevelData_Params params;
	params.ThemeName = ThemeName;
	params.ThemeWeather = ThemeWeather;
	params.MapName = MapName;
	params.TileCount = TileCount;
	params.LevelDependencies = LevelDependencies;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDGameState.Multicast_KillerServerSearchFailed
// (Net, NetReliable, Native, Event, NetMulticast, Public)

void ADBDGameState::Multicast_KillerServerSearchFailed()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameState.Multicast_KillerServerSearchFailed");

	ADBDGameState_Multicast_KillerServerSearchFailed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDGameState.Multicast_KillerSearchStarted
// (Net, NetReliable, Native, Event, NetMulticast, Public)

void ADBDGameState::Multicast_KillerSearchStarted()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameState.Multicast_KillerSearchStarted");

	ADBDGameState_Multicast_KillerSearchStarted_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDGameState.Multicast_JoinKillerServerFailed
// (Net, NetReliable, Native, Event, NetMulticast, Public)

void ADBDGameState::Multicast_JoinKillerServerFailed()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameState.Multicast_JoinKillerServerFailed");

	ADBDGameState_Multicast_JoinKillerServerFailed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDGameState.KillerServerFound
// (Final, Native, Public, HasOutParms)
// Parameters:
// struct FServerJoiningData      joinParams                     (ConstParm, Parm, OutParm, ReferenceParm)

void ADBDGameState::KillerServerFound(const struct FServerJoiningData& joinParams)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameState.KillerServerFound");

	ADBDGameState_KillerServerFound_Params params;
	params.joinParams = joinParams;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDGameState.IsPlayerDistributionReady
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ADBDGameState::IsPlayerDistributionReady()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameState.IsPlayerDistributionReady");

	ADBDGameState_IsPlayerDistributionReady_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDGameState.IsOnePlayerLeft
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ADBDGameState::IsOnePlayerLeft()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameState.IsOnePlayerLeft");

	ADBDGameState_IsOnePlayerLeft_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDGameState.IsOfferingReceived
// (Final, Native, Public, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ADBDGameState::IsOfferingReceived()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameState.IsOfferingReceived");

	ADBDGameState_IsOfferingReceived_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDGameState.IsObsessionTargetAliveInLevel
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ADBDGameState::IsObsessionTargetAliveInLevel()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameState.IsObsessionTargetAliveInLevel");

	ADBDGameState_IsObsessionTargetAliveInLevel_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDGameState.IsObsessionTargetAlive
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ADBDGameState::IsObsessionTargetAlive()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameState.IsObsessionTargetAlive");

	ADBDGameState_IsObsessionTargetAlive_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDGameState.IsLightingGenerated
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ADBDGameState::IsLightingGenerated()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameState.IsLightingGenerated");

	ADBDGameState_IsLightingGenerated_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDGameState.IsLevelSetupDone
// (Final, Native, Public, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ADBDGameState::IsLevelSetupDone()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameState.IsLevelSetupDone");

	ADBDGameState_IsLevelSetupDone_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDGameState.IsLevelReadyToPlay
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ADBDGameState::IsLevelReadyToPlay()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameState.IsLevelReadyToPlay");

	ADBDGameState_IsLevelReadyToPlay_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDGameState.IsIntroCompleted
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ADBDGameState::IsIntroCompleted()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameState.IsIntroCompleted");

	ADBDGameState_IsIntroCompleted_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDGameState.IsHatchVisible
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ADBDGameState::IsHatchVisible()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameState.IsHatchVisible");

	ADBDGameState_IsHatchVisible_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDGameState.IsEscapeDoorOpen
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ADBDGameState::IsEscapeDoorOpen()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameState.IsEscapeDoorOpen");

	ADBDGameState_IsEscapeDoorOpen_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDGameState.IsEscapeDoorActivated
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ADBDGameState::IsEscapeDoorActivated()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameState.IsEscapeDoorActivated");

	ADBDGameState_IsEscapeDoorActivated_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDGameState.IntroCompleted
// (Final, Native, Public, BlueprintCallable)

void ADBDGameState::IntroCompleted()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameState.IntroCompleted");

	ADBDGameState_IntroCompleted_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDGameState.GetSurvivorLeft
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int ADBDGameState::GetSurvivorLeft()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameState.GetSurvivorLeft");

	ADBDGameState_GetSurvivorLeft_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDGameState.GetSelectedOfferings
// (Final, Native, Public, Const)
// Parameters:
// TArray<struct FSelectedOffering> ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

TArray<struct FSelectedOffering> ADBDGameState::GetSelectedOfferings()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameState.GetSelectedOfferings");

	ADBDGameState_GetSelectedOfferings_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDGameState.GetSelectedOffering
// (Final, Native, Public, HasOutParms, Const)
// Parameters:
// int                            Index                          (Parm, ZeroConstructor, IsPlainOldData)
// struct FSelectedOffering       SelectedOffering               (Parm, OutParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ADBDGameState::GetSelectedOffering(int Index, struct FSelectedOffering* SelectedOffering)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameState.GetSelectedOffering");

	ADBDGameState_GetSelectedOffering_Params params;
	params.Index = Index;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (SelectedOffering != nullptr)
		*SelectedOffering = params.SelectedOffering;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDGameState.GetRemainingGeneratorsNeeded
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int ADBDGameState::GetRemainingGeneratorsNeeded()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameState.GetRemainingGeneratorsNeeded");

	ADBDGameState_GetRemainingGeneratorsNeeded_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDGameState.GetPlayerStateByIDString
// (Final, Native, Public, Const)
// Parameters:
// class FString                  ID                             (Parm, ZeroConstructor)
// class ADBDPlayerState*         ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ADBDPlayerState* ADBDGameState::GetPlayerStateByIDString(const class FString& ID)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameState.GetPlayerStateByIDString");

	ADBDGameState_GetPlayerStateByIDString_Params params;
	params.ID = ID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDGameState.GetPlayersReadyToStart
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ADBDGameState::GetPlayersReadyToStart()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameState.GetPlayersReadyToStart");

	ADBDGameState_GetPlayersReadyToStart_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDGameState.GetPlayerRoleCounts
// (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            survivorCount                  (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// int                            killerCount                    (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// int                            SpectatorCount                 (Parm, OutParm, ZeroConstructor, IsPlainOldData)

void ADBDGameState::GetPlayerRoleCounts(int* survivorCount, int* killerCount, int* SpectatorCount)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameState.GetPlayerRoleCounts");

	ADBDGameState_GetPlayerRoleCounts_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (survivorCount != nullptr)
		*survivorCount = params.survivorCount;
	if (killerCount != nullptr)
		*killerCount = params.killerCount;
	if (SpectatorCount != nullptr)
		*SpectatorCount = params.SpectatorCount;
}


// Function DeadByDaylight.DBDGameState.GetObsessionTarget
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ACamperPlayer*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ACamperPlayer* ADBDGameState::GetObsessionTarget()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameState.GetObsessionTarget");

	ADBDGameState_GetObsessionTarget_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDGameState.GetNumberOfOtherActiveSurvivors
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ACamperPlayer*           exception                      (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int ADBDGameState::GetNumberOfOtherActiveSurvivors(class ACamperPlayer* exception)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameState.GetNumberOfOtherActiveSurvivors");

	ADBDGameState_GetNumberOfOtherActiveSurvivors_Params params;
	params.exception = exception;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDGameState.GetNumberOfActiveSurvivors
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int ADBDGameState::GetNumberOfActiveSurvivors()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameState.GetNumberOfActiveSurvivors");

	ADBDGameState_GetNumberOfActiveSurvivors_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDGameState.GetLocalPlayerState
// (Final, Native, Public, Const)
// Parameters:
// class ADBDPlayerState*         ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ADBDPlayerState* ADBDGameState::GetLocalPlayerState()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameState.GetLocalPlayerState");

	ADBDGameState_GetLocalPlayerState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDGameState.GetLocalPlayerPawn
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ADBDPlayer*              ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ADBDPlayer* ADBDGameState::GetLocalPlayerPawn()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameState.GetLocalPlayerPawn");

	ADBDGameState_GetLocalPlayerPawn_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDGameState.GetLocalPlayerBasePawn
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class APawn*                   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APawn* ADBDGameState::GetLocalPlayerBasePawn()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameState.GetLocalPlayerBasePawn");

	ADBDGameState_GetLocalPlayerBasePawn_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDGameState.GetLevelData
// (Final, Native, Public, Const)
// Parameters:
// struct FBuiltLevelData         ReturnValue                    (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm)

struct FBuiltLevelData ADBDGameState::GetLevelData()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameState.GetLevelData");

	ADBDGameState_GetLevelData_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDGameState.GetKillerIntroCompletedNormalized
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ADBDGameState::GetKillerIntroCompletedNormalized()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameState.GetKillerIntroCompletedNormalized");

	ADBDGameState_GetKillerIntroCompletedNormalized_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDGameState.GetKiller
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ASlasherPlayer*          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ASlasherPlayer* ADBDGameState::GetKiller()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameState.GetKiller");

	ADBDGameState_GetKiller_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDGameState.GetInGamePallets
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class APallet*>         ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<class APallet*> ADBDGameState::GetInGamePallets()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameState.GetInGamePallets");

	ADBDGameState_GetInGamePallets_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDGameState.GetInGameGenerators
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class AGenerator*>      ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<class AGenerator*> ADBDGameState::GetInGameGenerators()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameState.GetInGameGenerators");

	ADBDGameState_GetInGameGenerators_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDGameState.GetHeartbeatEmittersCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int ADBDGameState::GetHeartbeatEmittersCount()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameState.GetHeartbeatEmittersCount");

	ADBDGameState_GetHeartbeatEmittersCount_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDGameState.GetGameLevelLoaded
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ADBDGameState::GetGameLevelLoaded()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameState.GetGameLevelLoaded");

	ADBDGameState_GetGameLevelLoaded_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDGameState.Authority_SetSurvivorLeft
// (Final, Native, Public)
// Parameters:
// int                            survivorRemaining              (Parm, ZeroConstructor, IsPlainOldData)

void ADBDGameState::Authority_SetSurvivorLeft(int survivorRemaining)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameState.Authority_SetSurvivorLeft");

	ADBDGameState_Authority_SetSurvivorLeft_Params params;
	params.survivorRemaining = survivorRemaining;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDGameState.Authority_SetServerJoiningData
// (Final, Native, Public, HasOutParms)
// Parameters:
// struct FServerJoiningData      joiningData                    (ConstParm, Parm, OutParm, ReferenceParm)

void ADBDGameState::Authority_SetServerJoiningData(const struct FServerJoiningData& joiningData)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameState.Authority_SetServerJoiningData");

	ADBDGameState_Authority_SetServerJoiningData_Params params;
	params.joiningData = joiningData;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDGameState.Authority_SetLevelReadyToPlay
// (Final, Native, Public)

void ADBDGameState::Authority_SetLevelReadyToPlay()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameState.Authority_SetLevelReadyToPlay");

	ADBDGameState_Authority_SetLevelReadyToPlay_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDGameState.Authority_SetHatchOpen
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           OPENED                         (Parm, ZeroConstructor, IsPlainOldData)

void ADBDGameState::Authority_SetHatchOpen(bool OPENED)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameState.Authority_SetHatchOpen");

	ADBDGameState_Authority_SetHatchOpen_Params params;
	params.OPENED = OPENED;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDGameState.Authority_SetEscapeDoorOpened
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           OPENED                         (Parm, ZeroConstructor, IsPlainOldData)

void ADBDGameState::Authority_SetEscapeDoorOpened(bool OPENED)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameState.Authority_SetEscapeDoorOpened");

	ADBDGameState_Authority_SetEscapeDoorOpened_Params params;
	params.OPENED = OPENED;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDGameState.Authority_SetAllPlayerLoaded
// (Final, Native, Public)

void ADBDGameState::Authority_SetAllPlayerLoaded()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameState.Authority_SetAllPlayerLoaded");

	ADBDGameState_Authority_SetAllPlayerLoaded_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDGameState.Authority_EvaluateObsessionTarget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ADBDPlayer*              potentialTarget                (Parm, ZeroConstructor, IsPlainOldData)

void ADBDGameState::Authority_EvaluateObsessionTarget(class ADBDPlayer* potentialTarget)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameState.Authority_EvaluateObsessionTarget");

	ADBDGameState_Authority_EvaluateObsessionTarget_Params params;
	params.potentialTarget = potentialTarget;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDGameState.Authority_EscapeThroughHatch
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)

void ADBDGameState::Authority_EscapeThroughHatch()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameState.Authority_EscapeThroughHatch");

	ADBDGameState_Authority_EscapeThroughHatch_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDGameState.Authority_EnableObsession
// (Final, Native, Public, BlueprintCallable)

void ADBDGameState::Authority_EnableObsession()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameState.Authority_EnableObsession");

	ADBDGameState_Authority_EnableObsession_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDGameState.AddTrap
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AInteractable*           toAdd                          (Parm, ZeroConstructor, IsPlainOldData)

void ADBDGameState::AddTrap(class AInteractable* toAdd)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameState.AddTrap");

	ADBDGameState_AddTrap_Params params;
	params.toAdd = toAdd;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDGameState.AddHeartbeatEmitter
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                  toAdd                          (Parm, ZeroConstructor, IsPlainOldData)

void ADBDGameState::AddHeartbeatEmitter(class AActor* toAdd)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameState.AddHeartbeatEmitter");

	ADBDGameState_AddHeartbeatEmitter_Params params;
	params.toAdd = toAdd;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDGame_Lobby.DBD_ForceStartMatch
// (Final, Exec, Native, Public, BlueprintCallable)

void ADBDGame_Lobby::DBD_ForceStartMatch()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGame_Lobby.DBD_ForceStartMatch");

	ADBDGame_Lobby_DBD_ForceStartMatch_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDGameFlowUtilities.TriggerWorldFlowUpdate
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<EWorldFlowEvent>   worldFlowEvent                 (Parm, ZeroConstructor, IsPlainOldData)

void UDBDGameFlowUtilities::STATIC_TriggerWorldFlowUpdate(class UObject* WorldContextObject, TEnumAsByte<EWorldFlowEvent> worldFlowEvent)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameFlowUtilities.TriggerWorldFlowUpdate");

	UDBDGameFlowUtilities_TriggerWorldFlowUpdate_Params params;
	params.WorldContextObject = WorldContextObject;
	params.worldFlowEvent = worldFlowEvent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDGameFlowUtilities.TriggerUIFlowUpdate
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<EUIFlowEvent>      uiFlowEvent                    (Parm, ZeroConstructor, IsPlainOldData)

void UDBDGameFlowUtilities::STATIC_TriggerUIFlowUpdate(class UObject* WorldContextObject, TEnumAsByte<EUIFlowEvent> uiFlowEvent)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameFlowUtilities.TriggerUIFlowUpdate");

	UDBDGameFlowUtilities_TriggerUIFlowUpdate_Params params;
	params.WorldContextObject = WorldContextObject;
	params.uiFlowEvent = uiFlowEvent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.LevelParadise.ParadiseEntered
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FParadiseData           PlayerData                     (ConstParm, Parm, OutParm, ReferenceParm)

void ALevelParadise::ParadiseEntered(const struct FParadiseData& PlayerData)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.LevelParadise.ParadiseEntered");

	ALevelParadise_ParadiseEntered_Params params;
	params.PlayerData = PlayerData;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.LevelParadise.OnInterpolationDone
// (Final, Native, Private)

void ALevelParadise::OnInterpolationDone()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.LevelParadise.OnInterpolationDone");

	ALevelParadise_OnInterpolationDone_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.LevelParadise.EnterParadise
// (Event, Public, HasOutParms, BlueprintEvent)
// Parameters:
// struct FParadiseData           PlayerData                     (ConstParm, Parm, OutParm, ReferenceParm)

void ALevelParadise::EnterParadise(const struct FParadiseData& PlayerData)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.LevelParadise.EnterParadise");

	ALevelParadise_EnterParadise_Params params;
	params.PlayerData = PlayerData;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.ScreenBase.SetFadesOut
// (Final, Native, Public, Const)
// Parameters:
// bool                           fadesOut                       (Parm, ZeroConstructor, IsPlainOldData)

void UScreenBase::SetFadesOut(bool fadesOut)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.ScreenBase.SetFadesOut");

	UScreenBase_SetFadesOut_Params params;
	params.fadesOut = fadesOut;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.ScreenBase.OnStart
// (Final, Native, Public)

void UScreenBase::OnStart()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.ScreenBase.OnStart");

	UScreenBase_OnStart_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.ScreenBase.OnNavKey
// (Final, Native, Public)
// Parameters:
// class FString                  navKey                         (Parm, ZeroConstructor)

void UScreenBase::OnNavKey(const class FString& navKey)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.ScreenBase.OnNavKey");

	UScreenBase_OnNavKey_Params params;
	params.navKey = navKey;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.ScreenBase.OnEscape
// (Final, Native, Public)

void UScreenBase::OnEscape()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.ScreenBase.OnEscape");

	UScreenBase_OnEscape_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.ScreenBase.OnBack
// (Final, Native, Public)

void UScreenBase::OnBack()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.ScreenBase.OnBack");

	UScreenBase_OnBack_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.ScreenBase.OnAnimationUpdate
// (Final, Native, Public)
// Parameters:
// int                            isAnimationDone                (Parm, ZeroConstructor, IsPlainOldData)

void UScreenBase::OnAnimationUpdate(int isAnimationDone)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.ScreenBase.OnAnimationUpdate");

	UScreenBase_OnAnimationUpdate_Params params;
	params.isAnimationDone = isAnimationDone;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.RootMovie.SetCursorAsSticky
// (Final, Native, Public)
// Parameters:
// int                            isSticky                       (Parm, ZeroConstructor, IsPlainOldData)
// int                            lockVertical                   (Parm, ZeroConstructor, IsPlainOldData)
// int                            lockHorizontal                 (Parm, ZeroConstructor, IsPlainOldData)
// int                            moveByX                        (Parm, ZeroConstructor, IsPlainOldData)
// int                            moveByY                        (Parm, ZeroConstructor, IsPlainOldData)

void URootMovie::SetCursorAsSticky(int isSticky, int lockVertical, int lockHorizontal, int moveByX, int moveByY)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.RootMovie.SetCursorAsSticky");

	URootMovie_SetCursorAsSticky_Params params;
	params.isSticky = isSticky;
	params.lockVertical = lockVertical;
	params.lockHorizontal = lockHorizontal;
	params.moveByX = moveByX;
	params.moveByY = moveByY;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.RootMovie.RegisterView
// (Final, Native, Public)
// Parameters:
// class FString                  screenId                       (Parm, ZeroConstructor)
// class UGFxObject*              ScreenObject                   (Parm, ZeroConstructor, IsPlainOldData)

void URootMovie::RegisterView(const class FString& screenId, class UGFxObject* ScreenObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.RootMovie.RegisterView");

	URootMovie_RegisterView_Params params;
	params.screenId = screenId;
	params.ScreenObject = ScreenObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.RootMovie.RegisterUIControl
// (Final, Native, Public)
// Parameters:
// class UGFxObject*              flashObj                       (Parm, ZeroConstructor, IsPlainOldData)

void URootMovie::RegisterUIControl(class UGFxObject* flashObj)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.RootMovie.RegisterUIControl");

	URootMovie_RegisterUIControl_Params params;
	params.flashObj = flashObj;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.RootMovie.RegisterScreenControl
// (Final, Native, Public)
// Parameters:
// class UGFxObject*              flashObj                       (Parm, ZeroConstructor, IsPlainOldData)

void URootMovie::RegisterScreenControl(class UGFxObject* flashObj)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.RootMovie.RegisterScreenControl");

	URootMovie_RegisterScreenControl_Params params;
	params.flashObj = flashObj;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.RootMovie.PlaySound
// (Final, Native, Public)
// Parameters:
// class FString                  soundId                        (Parm, ZeroConstructor)

void URootMovie::PlaySound(const class FString& soundId)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.RootMovie.PlaySound");

	URootMovie_PlaySound_Params params;
	params.soundId = soundId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.RootMovie.OpenLinkInBrowser
// (Final, Native, Public)
// Parameters:
// class FString                  linkAddress                    (Parm, ZeroConstructor)

void URootMovie::OpenLinkInBrowser(const class FString& linkAddress)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.RootMovie.OpenLinkInBrowser");

	URootMovie_OpenLinkInBrowser_Params params;
	params.linkAddress = linkAddress;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.RootMovie.OnScreenReady
// (Final, Native, Public)
// Parameters:
// class FString                  screenId                       (Parm, ZeroConstructor)

void URootMovie::OnScreenReady(const class FString& screenId)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.RootMovie.OnScreenReady");

	URootMovie_OnScreenReady_Params params;
	params.screenId = screenId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.RootMovie.OnScreenLeave
// (Final, Native, Public)
// Parameters:
// class FString                  screenId                       (Parm, ZeroConstructor)

void URootMovie::OnScreenLeave(const class FString& screenId)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.RootMovie.OnScreenLeave");

	URootMovie_OnScreenLeave_Params params;
	params.screenId = screenId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.RootMovie.OnScreenEnter
// (Final, Native, Public)
// Parameters:
// class FString                  screenId                       (Parm, ZeroConstructor)

void URootMovie::OnScreenEnter(const class FString& screenId)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.RootMovie.OnScreenEnter");

	URootMovie_OnScreenEnter_Params params;
	params.screenId = screenId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.RootMovie.OnMovieClosed
// (Final, Native, Public)

void URootMovie::OnMovieClosed()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.RootMovie.OnMovieClosed");

	URootMovie_OnMovieClosed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.RootMovie.OnFlashReady
// (Final, Native, Public)

void URootMovie::OnFlashReady()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.RootMovie.OnFlashReady");

	URootMovie_OnFlashReady_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.RootMovie.OnAssert
// (Final, Native, Public)
// Parameters:
// int                            Type                           (Parm, ZeroConstructor, IsPlainOldData)
// class FString                  Message                        (Parm, ZeroConstructor)

void URootMovie::OnAssert(int Type, const class FString& Message)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.RootMovie.OnAssert");

	URootMovie_OnAssert_Params params;
	params.Type = Type;
	params.Message = Message;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDTimeUtilities.IsValidatedOnline
// (Final, Native, Public, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UDBDTimeUtilities::IsValidatedOnline()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDTimeUtilities.IsValidatedOnline");

	UDBDTimeUtilities_IsValidatedOnline_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDTimeUtilities.IsInitialized
// (Final, Native, Public, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UDBDTimeUtilities::IsInitialized()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDTimeUtilities.IsInitialized");

	UDBDTimeUtilities_IsInitialized_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDKeyDisplayInfo.IsExcludedKey
// (Final, Native, Public)
// Parameters:
// struct FKey                    Key                            (Parm)
// bool                           ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UDBDKeyDisplayInfo::IsExcludedKey(const struct FKey& Key)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDKeyDisplayInfo.IsExcludedKey");

	UDBDKeyDisplayInfo_IsExcludedKey_Params params;
	params.Key = Key;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDKeyDisplayInfo.GetKeyDisplayInfoForInteractionType
// (Final, Native, Public)
// Parameters:
// class UPlayerInput*            PlayerInput                    (Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<EPlayerRole>       PlayerRole                     (Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<EInputInteractionType> InteractionType                (Parm, ZeroConstructor, IsPlainOldData)
// bool                           useGamePad                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FKeyDisplayInfo         ReturnValue                    (ConstParm, Parm, OutParm, ReturnParm)

struct FKeyDisplayInfo UDBDKeyDisplayInfo::GetKeyDisplayInfoForInteractionType(class UPlayerInput* PlayerInput, TEnumAsByte<EPlayerRole> PlayerRole, TEnumAsByte<EInputInteractionType> InteractionType, bool useGamePad)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDKeyDisplayInfo.GetKeyDisplayInfoForInteractionType");

	UDBDKeyDisplayInfo_GetKeyDisplayInfoForInteractionType_Params params;
	params.PlayerInput = PlayerInput;
	params.PlayerRole = PlayerRole;
	params.InteractionType = InteractionType;
	params.useGamePad = useGamePad;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDKeyDisplayInfo.GetKeyDisplayInfo
// (Final, Native, Public)
// Parameters:
// struct FKey                    Key                            (Parm)
// struct FKeyDisplayInfo         ReturnValue                    (ConstParm, Parm, OutParm, ReturnParm)

struct FKeyDisplayInfo UDBDKeyDisplayInfo::GetKeyDisplayInfo(const struct FKey& Key)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDKeyDisplayInfo.GetKeyDisplayInfo");

	UDBDKeyDisplayInfo_GetKeyDisplayInfo_Params params;
	params.Key = Key;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDKeyDisplayInfo.GetFirstKeyForAction
// (Final, Native, Public)
// Parameters:
// class UPlayerInput*            PlayerInput                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FName                   ActionName                     (Parm, ZeroConstructor, IsPlainOldData)
// bool                           useGamePad                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FKey                    ReturnValue                    (ConstParm, Parm, OutParm, ReturnParm)

struct FKey UDBDKeyDisplayInfo::GetFirstKeyForAction(class UPlayerInput* PlayerInput, const struct FName& ActionName, bool useGamePad)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDKeyDisplayInfo.GetFirstKeyForAction");

	UDBDKeyDisplayInfo_GetFirstKeyForAction_Params params;
	params.PlayerInput = PlayerInput;
	params.ActionName = ActionName;
	params.useGamePad = useGamePad;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDKeyDisplayInfo.GetActionForInteractionType
// (Final, Native, Public)
// Parameters:
// TEnumAsByte<EPlayerRole>       PlayerRole                     (Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<EInputInteractionType> inputInteractionType           (Parm, ZeroConstructor, IsPlainOldData)
// bool                           useGamePad                     (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ignoreInteractMash             (Parm, ZeroConstructor, IsPlainOldData)
// struct FName                   ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FName UDBDKeyDisplayInfo::GetActionForInteractionType(TEnumAsByte<EPlayerRole> PlayerRole, TEnumAsByte<EInputInteractionType> inputInteractionType, bool useGamePad, bool ignoreInteractMash)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDKeyDisplayInfo.GetActionForInteractionType");

	UDBDKeyDisplayInfo_GetActionForInteractionType_Params params;
	params.PlayerRole = PlayerRole;
	params.inputInteractionType = inputInteractionType;
	params.useGamePad = useGamePad;
	params.ignoreInteractMash = ignoreInteractMash;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDGameInstance.StartOfferingSequence
// (Final, Native, Public)

void UDBDGameInstance::StartOfferingSequence()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameInstance.StartOfferingSequence");

	UDBDGameInstance_StartOfferingSequence_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDGameInstance.SimulatePerk
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<struct FName>           Perks                          (Parm, ZeroConstructor)
// int                            Level                          (Parm, ZeroConstructor, IsPlainOldData)

void UDBDGameInstance::SimulatePerk(TArray<struct FName> Perks, int Level)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameInstance.SimulatePerk");

	UDBDGameInstance_SimulatePerk_Params params;
	params.Perks = Perks;
	params.Level = Level;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDGameInstance.SimulateOfferingSequence
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// TArray<struct FName>           Offerings                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// bool                           playSequence                   (Parm, ZeroConstructor, IsPlainOldData)

void UDBDGameInstance::SimulateOfferingSequence(TArray<struct FName> Offerings, bool playSequence)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameInstance.SimulateOfferingSequence");

	UDBDGameInstance_SimulateOfferingSequence_Params params;
	params.Offerings = Offerings;
	params.playSequence = playSequence;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDGameInstance.RemoveActorKnowledgeCollection
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UActorKnowledgeCollection* collection                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UDBDGameInstance::RemoveActorKnowledgeCollection(class UActorKnowledgeCollection* collection)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameInstance.RemoveActorKnowledgeCollection");

	UDBDGameInstance_RemoveActorKnowledgeCollection_Params params;
	params.collection = collection;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDGameInstance.IsActorKnown
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ADBDPlayer*              knowledgePossessor             (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  possiblyKnownActor             (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UDBDGameInstance::IsActorKnown(class ADBDPlayer* knowledgePossessor, class AActor* possiblyKnownActor)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameInstance.IsActorKnown");

	UDBDGameInstance_IsActorKnown_Params params;
	params.knowledgePossessor = knowledgePossessor;
	params.possiblyKnownActor = possiblyKnownActor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDGameInstance.HasOfferingOfType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TEnumAsByte<EOfferingEffectType> Type                           (Parm, ZeroConstructor, IsPlainOldData)
// int                            PlayerId                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FName                   Tag                            (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UDBDGameInstance::HasOfferingOfType(TEnumAsByte<EOfferingEffectType> Type, int PlayerId, const struct FName& Tag)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameInstance.HasOfferingOfType");

	UDBDGameInstance_HasOfferingOfType_Params params;
	params.Type = Type;
	params.PlayerId = PlayerId;
	params.Tag = Tag;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDGameInstance.GotoSplashScreen
// (Final, Exec, Native, Public, BlueprintCallable)
// Parameters:
// bool                           showDefaultDialogueOnSplashScreen (Parm, ZeroConstructor, IsPlainOldData)

void UDBDGameInstance::GotoSplashScreen(bool showDefaultDialogueOnSplashScreen)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameInstance.GotoSplashScreen");

	UDBDGameInstance_GotoSplashScreen_Params params;
	params.showDefaultDialogueOnSplashScreen = showDefaultDialogueOnSplashScreen;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDGameInstance.GetSacrificeSequencer
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class USequencer*              ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class USequencer* UDBDGameInstance::GetSacrificeSequencer()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameInstance.GetSacrificeSequencer");

	UDBDGameInstance_GetSacrificeSequencer_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDGameInstance.GetPlayerLevelManager
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UDBDPlayerLevelManager*  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UDBDPlayerLevelManager* UDBDGameInstance::GetPlayerLevelManager()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameInstance.GetPlayerLevelManager");

	UDBDGameInstance_GetPlayerLevelManager_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDGameInstance.GetMaxSurvivorCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UDBDGameInstance::GetMaxSurvivorCount()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameInstance.GetMaxSurvivorCount");

	UDBDGameInstance_GetMaxSurvivorCount_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDGameInstance.GetMapActorDB
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UMapActorDB*             ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UMapActorDB* UDBDGameInstance::GetMapActorDB()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameInstance.GetMapActorDB");

	UDBDGameInstance_GetMapActorDB_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDGameInstance.GetLocalPlayerController
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class APlayerController*       ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APlayerController* UDBDGameInstance::GetLocalPlayerController()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameInstance.GetLocalPlayerController");

	UDBDGameInstance_GetLocalPlayerController_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDGameInstance.GetLocalPlayer
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ULocalPlayer*            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ULocalPlayer* UDBDGameInstance::GetLocalPlayer()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameInstance.GetLocalPlayer");

	UDBDGameInstance_GetLocalPlayer_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDGameInstance.GetLocallyControlledCharacter
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ADBDPlayer*              ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ADBDPlayer* UDBDGameInstance::GetLocallyControlledCharacter()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameInstance.GetLocallyControlledCharacter");

	UDBDGameInstance_GetLocallyControlledCharacter_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDGameInstance.GetLocalEventManager
// (Final, Native, Public, Const)
// Parameters:
// class ULocalEventManager*      ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ULocalEventManager* UDBDGameInstance::GetLocalEventManager()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameInstance.GetLocalEventManager");

	UDBDGameInstance_GetLocalEventManager_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDGameInstance.GetLightInterpolator
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class ULightingInterpolator*   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ULightingInterpolator* UDBDGameInstance::GetLightInterpolator()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameInstance.GetLightInterpolator");

	UDBDGameInstance_GetLightInterpolator_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDGameInstance.GetLightingHelper
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class ULightingHelper*         ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ULightingHelper* UDBDGameInstance::GetLightingHelper()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameInstance.GetLightingHelper");

	UDBDGameInstance_GetLightingHelper_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDGameInstance.GetLevelLighting
// (Final, Native, Public)
// Parameters:
// class ABaseSky*                ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ABaseSky* UDBDGameInstance::GetLevelLighting()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameInstance.GetLevelLighting");

	UDBDGameInstance_GetLevelLighting_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDGameInstance.GetInGameSurvivors
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class ACamperPlayer*>   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<class ACamperPlayer*> UDBDGameInstance::GetInGameSurvivors()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameInstance.GetInGameSurvivors");

	UDBDGameInstance_GetInGameSurvivors_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDGameInstance.GetInGamePlayers
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class ADBDPlayer*>      ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<class ADBDPlayer*> UDBDGameInstance::GetInGamePlayers()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameInstance.GetInGamePlayers");

	UDBDGameInstance_GetInGamePlayers_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDGameInstance.GetInGameKillers
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class ASlasherPlayer*>  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<class ASlasherPlayer*> UDBDGameInstance::GetInGameKillers()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameInstance.GetInGameKillers");

	UDBDGameInstance_GetInGameKillers_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDGameInstance.GetInGameKiller
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ASlasherPlayer*          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ASlasherPlayer* UDBDGameInstance::GetInGameKiller()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameInstance.GetInGameKiller");

	UDBDGameInstance_GetInGameKiller_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDGameInstance.GetGameEventDispatcher
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UGameEventDispatcher*    ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UGameEventDispatcher* UDBDGameInstance::GetGameEventDispatcher()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameInstance.GetGameEventDispatcher");

	UDBDGameInstance_GetGameEventDispatcher_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDGameInstance.GetDeadOrDisconnectedCampersCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ADBDPlayerState*         exception                      (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UDBDGameInstance::GetDeadOrDisconnectedCampersCount(class ADBDPlayerState* exception)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameInstance.GetDeadOrDisconnectedCampersCount");

	UDBDGameInstance_GetDeadOrDisconnectedCampersCount_Params params;
	params.exception = exception;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDGameInstance.GenerateBloodWebForCurrentCharacter
// (Final, Native, Public)

void UDBDGameInstance::GenerateBloodWebForCurrentCharacter()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameInstance.GenerateBloodWebForCurrentCharacter");

	UDBDGameInstance_GenerateBloodWebForCurrentCharacter_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDGameInstance.ForceCloseGame
// (Final, Native, Static, Public)

void UDBDGameInstance::STATIC_ForceCloseGame()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameInstance.ForceCloseGame");

	UDBDGameInstance_ForceCloseGame_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDGameInstance.FireSoundEvent
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// class AActor*                  Instigator                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 Location                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// bool                           shouldTrack                    (Parm, ZeroConstructor, IsPlainOldData)
// float                          audibleRange                   (Parm, ZeroConstructor, IsPlainOldData)
// class ADBDPlayer*              instigatingPlayer              (Parm, ZeroConstructor, IsPlainOldData)
// bool                           isQuickAction                  (Parm, ZeroConstructor, IsPlainOldData)

void UDBDGameInstance::FireSoundEvent(class AActor* Instigator, const struct FVector& Location, bool shouldTrack, float audibleRange, class ADBDPlayer* instigatingPlayer, bool isQuickAction)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameInstance.FireSoundEvent");

	UDBDGameInstance_FireSoundEvent_Params params;
	params.Instigator = Instigator;
	params.Location = Location;
	params.shouldTrack = shouldTrack;
	params.audibleRange = audibleRange;
	params.instigatingPlayer = instigatingPlayer;
	params.isQuickAction = isQuickAction;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDGameInstance.EndLoadingScreen
// (Final, Native, Public)

void UDBDGameInstance::EndLoadingScreen()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameInstance.EndLoadingScreen");

	UDBDGameInstance_EndLoadingScreen_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDGameInstance.DBDToggleLightingLoaded
// (Final, Exec, Native, Public, BlueprintCallable)

void UDBDGameInstance::DBDToggleLightingLoaded()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameInstance.DBDToggleLightingLoaded");

	UDBDGameInstance_DBDToggleLightingLoaded_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDGameInstance.DBDResetSaveData
// (Final, Exec, Native, Public, BlueprintCallable)

void UDBDGameInstance::DBDResetSaveData()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameInstance.DBDResetSaveData");

	UDBDGameInstance_DBDResetSaveData_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDGameInstance.DBDLogFindSessions
// (Final, Exec, Native, Public, BlueprintCallable)
// Parameters:
// int                            searchType                     (Parm, ZeroConstructor, IsPlainOldData)
// int                            Rank                           (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ignoreVersion                  (Parm, ZeroConstructor, IsPlainOldData)

void UDBDGameInstance::DBDLogFindSessions(int searchType, int Rank, bool ignoreVersion)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameInstance.DBDLogFindSessions");

	UDBDGameInstance_DBDLogFindSessions_Params params;
	params.searchType = searchType;
	params.Rank = Rank;
	params.ignoreVersion = ignoreVersion;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDGameInstance.DBDForceSave
// (Final, Exec, Native, Public, BlueprintCallable)

void UDBDGameInstance::DBDForceSave()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameInstance.DBDForceSave");

	UDBDGameInstance_DBDForceSave_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDGameInstance.DBDForceLoad
// (Final, Exec, Native, Public, BlueprintCallable)

void UDBDGameInstance::DBDForceLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameInstance.DBDForceLoad");

	UDBDGameInstance_DBDForceLoad_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDGameInstance.DBDDeleteLocalSaveFile
// (Final, Exec, Native, Public, BlueprintCallable)

void UDBDGameInstance::DBDDeleteLocalSaveFile()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameInstance.DBDDeleteLocalSaveFile");

	UDBDGameInstance_DBDDeleteLocalSaveFile_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDGameInstance.DBDApplyOfferingModification
// (Final, Exec, Native, Public, BlueprintCallable)
// Parameters:
// float                          lightModifier                  (Parm, ZeroConstructor, IsPlainOldData)
// float                          fogModifier                    (Parm, ZeroConstructor, IsPlainOldData)

void UDBDGameInstance::DBDApplyOfferingModification(float lightModifier, float fogModifier)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameInstance.DBDApplyOfferingModification");

	UDBDGameInstance_DBDApplyOfferingModification_Params params;
	params.lightModifier = lightModifier;
	params.fogModifier = fogModifier;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDGameInstance.DBD_UpdateSteamInventory
// (Final, Exec, Native, Public, BlueprintCallable)

void UDBDGameInstance::DBD_UpdateSteamInventory()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameInstance.DBD_UpdateSteamInventory");

	UDBDGameInstance_DBD_UpdateSteamInventory_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDGameInstance.DBD_ToggleOnlineRole
// (Final, Exec, Native, Public, BlueprintCallable)

void UDBDGameInstance::DBD_ToggleOnlineRole()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameInstance.DBD_ToggleOnlineRole");

	UDBDGameInstance_DBD_ToggleOnlineRole_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDGameInstance.DBD_TestTickedDiceRoll
// (Final, Exec, Native, Public, BlueprintCallable)
// Parameters:
// float                          BaseProbability                (Parm, ZeroConstructor, IsPlainOldData)
// float                          ticks                          (Parm, ZeroConstructor, IsPlainOldData)
// float                          MultiplicativeModifier         (Parm, ZeroConstructor, IsPlainOldData)
// float                          AdditiveModifier               (Parm, ZeroConstructor, IsPlainOldData)

void UDBDGameInstance::DBD_TestTickedDiceRoll(float BaseProbability, float ticks, float MultiplicativeModifier, float AdditiveModifier)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameInstance.DBD_TestTickedDiceRoll");

	UDBDGameInstance_DBD_TestTickedDiceRoll_Params params;
	params.BaseProbability = BaseProbability;
	params.ticks = ticks;
	params.MultiplicativeModifier = MultiplicativeModifier;
	params.AdditiveModifier = AdditiveModifier;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDGameInstance.DBD_TestSaveFile
// (Final, Exec, Native, Public)
// Parameters:
// class FString                  Name                           (Parm, ZeroConstructor)

void UDBDGameInstance::DBD_TestSaveFile(const class FString& Name)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameInstance.DBD_TestSaveFile");

	UDBDGameInstance_DBD_TestSaveFile_Params params;
	params.Name = Name;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDGameInstance.DBD_TestRegion
// (Final, Exec, Native, Public)

void UDBDGameInstance::DBD_TestRegion()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameInstance.DBD_TestRegion");

	UDBDGameInstance_DBD_TestRegion_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDGameInstance.DBD_TestDiceRoll
// (Final, Exec, Native, Public, BlueprintCallable)
// Parameters:
// float                          BaseProbability                (Parm, ZeroConstructor, IsPlainOldData)
// float                          MultiplicativeModifier         (Parm, ZeroConstructor, IsPlainOldData)
// float                          AdditiveModifier               (Parm, ZeroConstructor, IsPlainOldData)

void UDBDGameInstance::DBD_TestDiceRoll(float BaseProbability, float MultiplicativeModifier, float AdditiveModifier)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameInstance.DBD_TestDiceRoll");

	UDBDGameInstance_DBD_TestDiceRoll_Params params;
	params.BaseProbability = BaseProbability;
	params.MultiplicativeModifier = MultiplicativeModifier;
	params.AdditiveModifier = AdditiveModifier;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDGameInstance.DBD_StartQuickPlay
// (Final, Exec, Native, Private, BlueprintCallable)

void UDBDGameInstance::DBD_StartQuickPlay()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameInstance.DBD_StartQuickPlay");

	UDBDGameInstance_DBD_StartQuickPlay_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDGameInstance.DBD_ShowErrorPopupAndGoBackToSplashScreen
// (Final, Exec, Native, Private)

void UDBDGameInstance::DBD_ShowErrorPopupAndGoBackToSplashScreen()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameInstance.DBD_ShowErrorPopupAndGoBackToSplashScreen");

	UDBDGameInstance_DBD_ShowErrorPopupAndGoBackToSplashScreen_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDGameInstance.DBD_ShowErrorPopup
// (Final, Exec, Native, Private)

void UDBDGameInstance::DBD_ShowErrorPopup()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameInstance.DBD_ShowErrorPopup");

	UDBDGameInstance_DBD_ShowErrorPopup_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDGameInstance.DBD_SetStatsUploadEnabled
// (Final, Exec, Native, Public, BlueprintCallable)
// Parameters:
// bool                           Enabled                        (Parm, ZeroConstructor, IsPlainOldData)

void UDBDGameInstance::DBD_SetStatsUploadEnabled(bool Enabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameInstance.DBD_SetStatsUploadEnabled");

	UDBDGameInstance_DBD_SetStatsUploadEnabled_Params params;
	params.Enabled = Enabled;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDGameInstance.DBD_SetFearMarketDate
// (Final, Exec, Native, Public, BlueprintCallable)
// Parameters:
// class FString                  dateString                     (Parm, ZeroConstructor)

void UDBDGameInstance::DBD_SetFearMarketDate(const class FString& dateString)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameInstance.DBD_SetFearMarketDate");

	UDBDGameInstance_DBD_SetFearMarketDate_Params params;
	params.dateString = dateString;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDGameInstance.DBD_SetCursorStickySpeed
// (Final, Exec, Native, Public, BlueprintCallable)
// Parameters:
// float                          Value                          (Parm, ZeroConstructor, IsPlainOldData)

void UDBDGameInstance::DBD_SetCursorStickySpeed(float Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameInstance.DBD_SetCursorStickySpeed");

	UDBDGameInstance_DBD_SetCursorStickySpeed_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDGameInstance.DBD_SetCursorStickIgnore
// (Final, Exec, Native, Public, BlueprintCallable)
// Parameters:
// float                          Value                          (Parm, ZeroConstructor, IsPlainOldData)

void UDBDGameInstance::DBD_SetCursorStickIgnore(float Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameInstance.DBD_SetCursorStickIgnore");

	UDBDGameInstance_DBD_SetCursorStickIgnore_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDGameInstance.DBD_SetCursorDefaultSpeed
// (Final, Exec, Native, Public, BlueprintCallable)
// Parameters:
// float                          Value                          (Parm, ZeroConstructor, IsPlainOldData)

void UDBDGameInstance::DBD_SetCursorDefaultSpeed(float Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameInstance.DBD_SetCursorDefaultSpeed");

	UDBDGameInstance_DBD_SetCursorDefaultSpeed_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDGameInstance.DBD_SendFriendInvite
// (Final, Exec, Native, Public, BlueprintCallable)

void UDBDGameInstance::DBD_SendFriendInvite()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameInstance.DBD_SendFriendInvite");

	UDBDGameInstance_DBD_SendFriendInvite_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDGameInstance.DBD_ResetInventory
// (Final, Exec, Native, Public, BlueprintCallable)

void UDBDGameInstance::DBD_ResetInventory()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameInstance.DBD_ResetInventory");

	UDBDGameInstance_DBD_ResetInventory_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDGameInstance.DBD_ResetCurrentAchievementStats
// (Final, Exec, Native, Public, BlueprintCallable)
// Parameters:
// bool                           andUpload                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           andUpdateData                  (Parm, ZeroConstructor, IsPlainOldData)

void UDBDGameInstance::DBD_ResetCurrentAchievementStats(bool andUpload, bool andUpdateData)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameInstance.DBD_ResetCurrentAchievementStats");

	UDBDGameInstance_DBD_ResetCurrentAchievementStats_Params params;
	params.andUpload = andUpload;
	params.andUpdateData = andUpdateData;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDGameInstance.DBD_ResetCurrentAchievementStat
// (Final, Exec, Native, Public, BlueprintCallable)
// Parameters:
// struct FName                   StatName                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           andUpload                      (Parm, ZeroConstructor, IsPlainOldData)

void UDBDGameInstance::DBD_ResetCurrentAchievementStat(const struct FName& StatName, bool andUpload)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameInstance.DBD_ResetCurrentAchievementStat");

	UDBDGameInstance_DBD_ResetCurrentAchievementStat_Params params;
	params.StatName = StatName;
	params.andUpload = andUpload;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDGameInstance.DBD_ResetAllRituals
// (Final, Exec, Native, Public, BlueprintCallable)

void UDBDGameInstance::DBD_ResetAllRituals()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameInstance.DBD_ResetAllRituals");

	UDBDGameInstance_DBD_ResetAllRituals_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDGameInstance.DBD_RemoveRitual
// (Final, Exec, Native, Public, BlueprintCallable)
// Parameters:
// struct FName                   toRemove                       (Parm, ZeroConstructor, IsPlainOldData)

void UDBDGameInstance::DBD_RemoveRitual(const struct FName& toRemove)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameInstance.DBD_RemoveRitual");

	UDBDGameInstance_DBD_RemoveRitual_Params params;
	params.toRemove = toRemove;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDGameInstance.DBD_PrintAudioConfig
// (Final, Exec, Native, Public, BlueprintCallable, Const)

void UDBDGameInstance::DBD_PrintAudioConfig()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameInstance.DBD_PrintAudioConfig");

	UDBDGameInstance_DBD_PrintAudioConfig_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDGameInstance.DBD_PIXEndCapture
// (Final, Exec, Native, Public)

void UDBDGameInstance::DBD_PIXEndCapture()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameInstance.DBD_PIXEndCapture");

	UDBDGameInstance_DBD_PIXEndCapture_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDGameInstance.DBD_PIXBeginCapture
// (Final, Exec, Native, Public)

void UDBDGameInstance::DBD_PIXBeginCapture()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameInstance.DBD_PIXBeginCapture");

	UDBDGameInstance_DBD_PIXBeginCapture_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDGameInstance.DBD_LogBloodWebDefinition
// (Final, Exec, Native, Public, BlueprintCallable)

void UDBDGameInstance::DBD_LogBloodWebDefinition()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameInstance.DBD_LogBloodWebDefinition");

	UDBDGameInstance_DBD_LogBloodWebDefinition_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDGameInstance.DBD_LeaveMatch
// (Final, Exec, Native, Private, BlueprintCallable)

void UDBDGameInstance::DBD_LeaveMatch()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameInstance.DBD_LeaveMatch");

	UDBDGameInstance_DBD_LeaveMatch_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDGameInstance.DBD_LaunchSurivorTutorial
// (Final, Exec, Native, Public)

void UDBDGameInstance::DBD_LaunchSurivorTutorial()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameInstance.DBD_LaunchSurivorTutorial");

	UDBDGameInstance_DBD_LaunchSurivorTutorial_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDGameInstance.DBD_LaunchKillerTutorial
// (Final, Exec, Native, Public)

void UDBDGameInstance::DBD_LaunchKillerTutorial()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameInstance.DBD_LaunchKillerTutorial");

	UDBDGameInstance_DBD_LaunchKillerTutorial_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDGameInstance.DBD_GetRegion
// (Final, Exec, Native, Public)

void UDBDGameInstance::DBD_GetRegion()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameInstance.DBD_GetRegion");

	UDBDGameInstance_DBD_GetRegion_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDGameInstance.DBD_GenerateNewRitual
// (Final, Exec, Native, Public, BlueprintCallable)
// Parameters:
// struct FName                   Name                           (Parm, ZeroConstructor, IsPlainOldData)

void UDBDGameInstance::DBD_GenerateNewRitual(const struct FName& Name)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameInstance.DBD_GenerateNewRitual");

	UDBDGameInstance_DBD_GenerateNewRitual_Params params;
	params.Name = Name;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDGameInstance.DBD_GenerateNewRandomRitual
// (Final, Exec, Native, Public, BlueprintCallable)

void UDBDGameInstance::DBD_GenerateNewRandomRitual()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameInstance.DBD_GenerateNewRandomRitual");

	UDBDGameInstance_DBD_GenerateNewRandomRitual_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDGameInstance.DBD_GenerateBloodWeb
// (Final, Exec, Native, Public, BlueprintCallable)
// Parameters:
// int                            Level                          (Parm, ZeroConstructor, IsPlainOldData)

void UDBDGameInstance::DBD_GenerateBloodWeb(int Level)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameInstance.DBD_GenerateBloodWeb");

	UDBDGameInstance_DBD_GenerateBloodWeb_Params params;
	params.Level = Level;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDGameInstance.DBD_DumpSessions
// (Final, Exec, Native, Public, BlueprintCallable)

void UDBDGameInstance::DBD_DumpSessions()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameInstance.DBD_DumpSessions");

	UDBDGameInstance_DBD_DumpSessions_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDGameInstance.DBD_DisplayCurrentAchievementStat
// (Final, Exec, Native, Public, BlueprintCallable)
// Parameters:
// struct FName                   StatName                       (Parm, ZeroConstructor, IsPlainOldData)

void UDBDGameInstance::DBD_DisplayCurrentAchievementStat(const struct FName& StatName)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameInstance.DBD_DisplayCurrentAchievementStat");

	UDBDGameInstance_DBD_DisplayCurrentAchievementStat_Params params;
	params.StatName = StatName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDGameInstance.DBD_DestroySteamInventory
// (Final, Exec, Native, Public)

void UDBDGameInstance::DBD_DestroySteamInventory()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameInstance.DBD_DestroySteamInventory");

	UDBDGameInstance_DBD_DestroySteamInventory_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDGameInstance.DBD_ClearInventory
// (Final, Exec, Native, Private, BlueprintCallable)

void UDBDGameInstance::DBD_ClearInventory()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameInstance.DBD_ClearInventory");

	UDBDGameInstance_DBD_ClearInventory_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDGameInstance.DBD_ClaimRitualRewardAtIndex
// (Final, Exec, Native, Public, BlueprintCallable)
// Parameters:
// int                            Index                          (Parm, ZeroConstructor, IsPlainOldData)

void UDBDGameInstance::DBD_ClaimRitualRewardAtIndex(int Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameInstance.DBD_ClaimRitualRewardAtIndex");

	UDBDGameInstance_DBD_ClaimRitualRewardAtIndex_Params params;
	params.Index = Index;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDGameInstance.DBD_ClaimRitualReward
// (Final, Exec, Native, Public, BlueprintCallable)
// Parameters:
// struct FName                   Name                           (Parm, ZeroConstructor, IsPlainOldData)

void UDBDGameInstance::DBD_ClaimRitualReward(const struct FName& Name)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameInstance.DBD_ClaimRitualReward");

	UDBDGameInstance_DBD_ClaimRitualReward_Params params;
	params.Name = Name;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDGameInstance.DBD_CheckForNewContent
// (Final, Exec, Native, Public, BlueprintCallable, Const)
// Parameters:
// class FString                  debugGameVersion               (Parm, ZeroConstructor)
// bool                           forceDisplay                   (Parm, ZeroConstructor, IsPlainOldData)

void UDBDGameInstance::DBD_CheckForNewContent(const class FString& debugGameVersion, bool forceDisplay)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameInstance.DBD_CheckForNewContent");

	UDBDGameInstance_DBD_CheckForNewContent_Params params;
	params.debugGameVersion = debugGameVersion;
	params.forceDisplay = forceDisplay;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDGameInstance.DBD_ChangeSteamOverlayPosition
// (Final, Exec, Native, Public, BlueprintCallable)
// Parameters:
// int                            Position                       (Parm, ZeroConstructor, IsPlainOldData)
// int                            VerticalOffset                 (Parm, ZeroConstructor, IsPlainOldData)
// int                            horizontalOffset               (Parm, ZeroConstructor, IsPlainOldData)

void UDBDGameInstance::DBD_ChangeSteamOverlayPosition(int Position, int VerticalOffset, int horizontalOffset)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameInstance.DBD_ChangeSteamOverlayPosition");

	UDBDGameInstance_DBD_ChangeSteamOverlayPosition_Params params;
	params.Position = Position;
	params.VerticalOffset = VerticalOffset;
	params.horizontalOffset = horizontalOffset;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDGameInstance.DBD_AssignNewRitual
// (Final, Exec, Native, Public, BlueprintCallable)

void UDBDGameInstance::DBD_AssignNewRitual()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameInstance.DBD_AssignNewRitual");

	UDBDGameInstance_DBD_AssignNewRitual_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDGameInstance.DBD_AnalyticsTest
// (Final, Exec, Native, Public, BlueprintCallable)

void UDBDGameInstance::DBD_AnalyticsTest()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameInstance.DBD_AnalyticsTest");

	UDBDGameInstance_DBD_AnalyticsTest_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDGameInstance.DBD_AnalyticsReset
// (Final, Exec, Native, Public, BlueprintCallable)

void UDBDGameInstance::DBD_AnalyticsReset()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameInstance.DBD_AnalyticsReset");

	UDBDGameInstance_DBD_AnalyticsReset_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDGameInstance.DBD_AddToRitual
// (Final, Exec, Native, Public, BlueprintCallable)
// Parameters:
// int                            Index                          (Parm, ZeroConstructor, IsPlainOldData)
// float                          Value                          (Parm, ZeroConstructor, IsPlainOldData)

void UDBDGameInstance::DBD_AddToRitual(int Index, float Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameInstance.DBD_AddToRitual");

	UDBDGameInstance_DBD_AddToRitual_Params params;
	params.Index = Index;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDGameInstance.DBD_AddToAchievementStat
// (Final, Exec, Native, Public, BlueprintCallable)
// Parameters:
// struct FName                   StatName                       (Parm, ZeroConstructor, IsPlainOldData)
// float                          amount                         (Parm, ZeroConstructor, IsPlainOldData)

void UDBDGameInstance::DBD_AddToAchievementStat(const struct FName& StatName, float amount)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameInstance.DBD_AddToAchievementStat");

	UDBDGameInstance_DBD_AddToAchievementStat_Params params;
	params.StatName = StatName;
	params.amount = amount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDGameInstance.DBD_AddSlasherPips
// (Final, Exec, Native, Public, BlueprintCallable)
// Parameters:
// int                            Count                          (Parm, ZeroConstructor, IsPlainOldData)

void UDBDGameInstance::DBD_AddSlasherPips(int Count)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameInstance.DBD_AddSlasherPips");

	UDBDGameInstance_DBD_AddSlasherPips_Params params;
	params.Count = Count;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDGameInstance.DBD_AddPips
// (Final, Exec, Native, Public, BlueprintCallable)
// Parameters:
// int                            camperPipCount                 (Parm, ZeroConstructor, IsPlainOldData)
// int                            slasherPipCount                (Parm, ZeroConstructor, IsPlainOldData)

void UDBDGameInstance::DBD_AddPips(int camperPipCount, int slasherPipCount)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameInstance.DBD_AddPips");

	UDBDGameInstance_DBD_AddPips_Params params;
	params.camperPipCount = camperPipCount;
	params.slasherPipCount = slasherPipCount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDGameInstance.DBD_AddPerkToInventory
// (Final, Exec, Native, Private, BlueprintCallable)
// Parameters:
// struct FName                   PerkID                         (Parm, ZeroConstructor, IsPlainOldData)

void UDBDGameInstance::DBD_AddPerkToInventory(const struct FName& PerkID)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameInstance.DBD_AddPerkToInventory");

	UDBDGameInstance_DBD_AddPerkToInventory_Params params;
	params.PerkID = PerkID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDGameInstance.DBD_AddOfferingToInventory
// (Final, Exec, Native, Private, BlueprintCallable)
// Parameters:
// struct FName                   ItemId                         (Parm, ZeroConstructor, IsPlainOldData)

void UDBDGameInstance::DBD_AddOfferingToInventory(const struct FName& ItemId)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameInstance.DBD_AddOfferingToInventory");

	UDBDGameInstance_DBD_AddOfferingToInventory_Params params;
	params.ItemId = ItemId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDGameInstance.DBD_AddItemToInventory
// (Final, Exec, Native, Private, BlueprintCallable)
// Parameters:
// struct FName                   ItemId                         (Parm, ZeroConstructor, IsPlainOldData)

void UDBDGameInstance::DBD_AddItemToInventory(const struct FName& ItemId)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameInstance.DBD_AddItemToInventory");

	UDBDGameInstance_DBD_AddItemToInventory_Params params;
	params.ItemId = ItemId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDGameInstance.DBD_AddItemAddonToInventory
// (Final, Exec, Native, Private, BlueprintCallable)
// Parameters:
// struct FName                   ItemAddonID                    (Parm, ZeroConstructor, IsPlainOldData)

void UDBDGameInstance::DBD_AddItemAddonToInventory(const struct FName& ItemAddonID)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameInstance.DBD_AddItemAddonToInventory");

	UDBDGameInstance_DBD_AddItemAddonToInventory_Params params;
	params.ItemAddonID = ItemAddonID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDGameInstance.DBD_AddFearTokens
// (Final, Exec, Native, Public, BlueprintCallable)
// Parameters:
// int                            Count                          (Parm, ZeroConstructor, IsPlainOldData)

void UDBDGameInstance::DBD_AddFearTokens(int Count)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameInstance.DBD_AddFearTokens");

	UDBDGameInstance_DBD_AddFearTokens_Params params;
	params.Count = Count;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDGameInstance.DBD_AddEverythingToInventory
// (Final, Exec, Native, Private, BlueprintCallable)

void UDBDGameInstance::DBD_AddEverythingToInventory()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameInstance.DBD_AddEverythingToInventory");

	UDBDGameInstance_DBD_AddEverythingToInventory_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDGameInstance.DBD_AddCamperPips
// (Final, Exec, Native, Public, BlueprintCallable)
// Parameters:
// int                            Count                          (Parm, ZeroConstructor, IsPlainOldData)

void UDBDGameInstance::DBD_AddCamperPips(int Count)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameInstance.DBD_AddCamperPips");

	UDBDGameInstance_DBD_AddCamperPips_Params params;
	params.Count = Count;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDGameInstance.DBD_AddBloodPoints
// (Final, Exec, Native, Public, BlueprintCallable)
// Parameters:
// int                            Count                          (Parm, ZeroConstructor, IsPlainOldData)

void UDBDGameInstance::DBD_AddBloodPoints(int Count)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameInstance.DBD_AddBloodPoints");

	UDBDGameInstance_DBD_AddBloodPoints_Params params;
	params.Count = Count;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDGameInstance.DBD_AddAllPerksToInventory
// (Final, Exec, Native, Private, BlueprintCallable)
// Parameters:
// int                            amount                         (Parm, ZeroConstructor, IsPlainOldData)

void UDBDGameInstance::DBD_AddAllPerksToInventory(int amount)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameInstance.DBD_AddAllPerksToInventory");

	UDBDGameInstance_DBD_AddAllPerksToInventory_Params params;
	params.amount = amount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDGameInstance.DBD_AddAllItemsAddonsOfferingsToInventory
// (Final, Exec, Native, Private, BlueprintCallable)
// Parameters:
// int                            amount                         (Parm, ZeroConstructor, IsPlainOldData)

void UDBDGameInstance::DBD_AddAllItemsAddonsOfferingsToInventory(int amount)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameInstance.DBD_AddAllItemsAddonsOfferingsToInventory");

	UDBDGameInstance_DBD_AddAllItemsAddonsOfferingsToInventory_Params params;
	params.amount = amount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDGameInstance.BeginLoadingScreen
// (Final, Native, Public)
// Parameters:
// class FString                  MapName                        (Parm, ZeroConstructor)

void UDBDGameInstance::BeginLoadingScreen(const class FString& MapName)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameInstance.BeginLoadingScreen");

	UDBDGameInstance_BeginLoadingScreen_Params params;
	params.MapName = MapName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDGameInstance.AddActorKnowledgeCollection
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UActorKnowledgeCollection* collection                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UDBDGameInstance::AddActorKnowledgeCollection(class UActorKnowledgeCollection* collection)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameInstance.AddActorKnowledgeCollection");

	UDBDGameInstance_AddActorKnowledgeCollection_Params params;
	params.collection = collection;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.TutorialsUtilities.GetTutorialsUtilities
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// class ATutorialsUtilities*     ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ATutorialsUtilities* ATutorialsUtilities::STATIC_GetTutorialsUtilities(class UObject* WorldContextObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.TutorialsUtilities.GetTutorialsUtilities");

	ATutorialsUtilities_GetTutorialsUtilities_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.TutorialGameState.TutorialEndReached
// (Final, Native, Public, BlueprintCallable)

void ATutorialGameState::TutorialEndReached()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.TutorialGameState.TutorialEndReached");

	ATutorialGameState_TutorialEndReached_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.TutorialGameState.SetEscapeRequirementsVisibility
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:
// bool                           IsVisible                      (Parm, ZeroConstructor, IsPlainOldData)

void ATutorialGameState::SetEscapeRequirementsVisibility(bool IsVisible)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.TutorialGameState.SetEscapeRequirementsVisibility");

	ATutorialGameState_SetEscapeRequirementsVisibility_Params params;
	params.IsVisible = IsVisible;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.TutorialGameState.IsTutorialStarted
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ATutorialGameState::IsTutorialStarted()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.TutorialGameState.IsTutorialStarted");

	ATutorialGameState_IsTutorialStarted_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.TutorialGameState.CompleteLocallyControlledCharacterIntros
// (Final, Native, Public, BlueprintCallable, Const)

void ATutorialGameState::CompleteLocallyControlledCharacterIntros()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.TutorialGameState.CompleteLocallyControlledCharacterIntros");

	ATutorialGameState_CompleteLocallyControlledCharacterIntros_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDGameUserSettings.SaveSettings
// (Native, Public, BlueprintCallable)

void UDBDGameUserSettings::SaveSettings()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDGameUserSettings.SaveSettings");

	UDBDGameUserSettings_SaveSettings_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDHud.RemoveStatusViewOnDestroy
// (Final, Native, Private)
// Parameters:
// class AActor*                  Actor                          (Parm, ZeroConstructor, IsPlainOldData)

void UDBDHud::RemoveStatusViewOnDestroy(class AActor* Actor)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDHud.RemoveStatusViewOnDestroy");

	UDBDHud_RemoveStatusViewOnDestroy_Params params;
	params.Actor = Actor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDMaterialBlueprintLibrary.SetVectorParameterValueOnMeshComponent
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UMeshComponent*          Mesh                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// struct FName                   ParameterName                  (Parm, ZeroConstructor, IsPlainOldData)
// struct FLinearColor            Value                          (Parm, ZeroConstructor, IsPlainOldData)

void UDBDMaterialBlueprintLibrary::STATIC_SetVectorParameterValueOnMeshComponent(class UMeshComponent* Mesh, const struct FName& ParameterName, const struct FLinearColor& Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDMaterialBlueprintLibrary.SetVectorParameterValueOnMeshComponent");

	UDBDMaterialBlueprintLibrary_SetVectorParameterValueOnMeshComponent_Params params;
	params.Mesh = Mesh;
	params.ParameterName = ParameterName;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDMaterialBlueprintLibrary.SetTransformParameterValueOnMeshComponent
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UMeshComponent*          Mesh                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// struct FName                   ParameterName                  (Parm, ZeroConstructor, IsPlainOldData)
// struct FTransform              Value                          (Parm, IsPlainOldData)

void UDBDMaterialBlueprintLibrary::STATIC_SetTransformParameterValueOnMeshComponent(class UMeshComponent* Mesh, const struct FName& ParameterName, const struct FTransform& Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDMaterialBlueprintLibrary.SetTransformParameterValueOnMeshComponent");

	UDBDMaterialBlueprintLibrary_SetTransformParameterValueOnMeshComponent_Params params;
	params.Mesh = Mesh;
	params.ParameterName = ParameterName;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDMaterialBlueprintLibrary.SetTransformParameterValueOnMaterialDynamic
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UMaterialInstanceDynamic* Material                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FName                   ParameterName                  (Parm, ZeroConstructor, IsPlainOldData)
// struct FTransform              Value                          (Parm, IsPlainOldData)

void UDBDMaterialBlueprintLibrary::STATIC_SetTransformParameterValueOnMaterialDynamic(class UMaterialInstanceDynamic* Material, const struct FName& ParameterName, const struct FTransform& Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDMaterialBlueprintLibrary.SetTransformParameterValueOnMaterialDynamic");

	UDBDMaterialBlueprintLibrary_SetTransformParameterValueOnMaterialDynamic_Params params;
	params.Material = Material;
	params.ParameterName = ParameterName;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDMaterialBlueprintLibrary.SetTransformParameterInverseValueOnMaterialDynamic
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UMaterialInstanceDynamic* Material                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FName                   ParameterName                  (Parm, ZeroConstructor, IsPlainOldData)
// struct FTransform              Value                          (Parm, IsPlainOldData)

void UDBDMaterialBlueprintLibrary::STATIC_SetTransformParameterInverseValueOnMaterialDynamic(class UMaterialInstanceDynamic* Material, const struct FName& ParameterName, const struct FTransform& Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDMaterialBlueprintLibrary.SetTransformParameterInverseValueOnMaterialDynamic");

	UDBDMaterialBlueprintLibrary_SetTransformParameterInverseValueOnMaterialDynamic_Params params;
	params.Material = Material;
	params.ParameterName = ParameterName;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDMaterialBlueprintLibrary.CreateDynamicMaterialInstanceForParticleSystem
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UParticleSystemComponent* System                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// TArray<class UMaterialInstanceDynamic*> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<class UMaterialInstanceDynamic*> UDBDMaterialBlueprintLibrary::STATIC_CreateDynamicMaterialInstanceForParticleSystem(class UParticleSystemComponent* System)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDMaterialBlueprintLibrary.CreateDynamicMaterialInstanceForParticleSystem");

	UDBDMaterialBlueprintLibrary_CreateDynamicMaterialInstanceForParticleSystem_Params params;
	params.System = System;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDMathBlueprintLibrary.VectorIntersect
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FVector                 OriginA                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// struct FVector                 ExtentA                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// struct FVector                 OriginB                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// struct FVector                 ExtentB                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UDBDMathBlueprintLibrary::STATIC_VectorIntersect(const struct FVector& OriginA, const struct FVector& ExtentA, const struct FVector& OriginB, const struct FVector& ExtentB)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDMathBlueprintLibrary.VectorIntersect");

	UDBDMathBlueprintLibrary_VectorIntersect_Params params;
	params.OriginA = OriginA;
	params.ExtentA = ExtentA;
	params.OriginB = OriginB;
	params.ExtentB = ExtentB;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDMathBlueprintLibrary.VectorAbsoluteValue
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FVector                 A                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FVector UDBDMathBlueprintLibrary::STATIC_VectorAbsoluteValue(const struct FVector& A)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDMathBlueprintLibrary.VectorAbsoluteValue");

	UDBDMathBlueprintLibrary_VectorAbsoluteValue_Params params;
	params.A = A;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDMathBlueprintLibrary.TransformToMatrix
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FTransform              A                              (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// TArray<struct FLinearColor>    ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<struct FLinearColor> UDBDMathBlueprintLibrary::STATIC_TransformToMatrix(const struct FTransform& A)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDMathBlueprintLibrary.TransformToMatrix");

	UDBDMathBlueprintLibrary_TransformToMatrix_Params params;
	params.A = A;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDObserverPlayer.Server_PlayerReady
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void ADBDObserverPlayer::Server_PlayerReady()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDObserverPlayer.Server_PlayerReady");

	ADBDObserverPlayer_Server_PlayerReady_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDOuterlineComponent.SetIntensity
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          Intensity                      (Parm, ZeroConstructor, IsPlainOldData)

void UDBDOuterlineComponent::SetIntensity(float Intensity)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDOuterlineComponent.SetIntensity");

	UDBDOuterlineComponent_SetIntensity_Params params;
	params.Intensity = Intensity;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDOutlineComponent.SetTargetColor
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FLinearColor            Color                          (Parm, ZeroConstructor, IsPlainOldData)

void UDBDOutlineComponent::SetTargetColor(const struct FLinearColor& Color)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDOutlineComponent.SetTargetColor");

	UDBDOutlineComponent_SetTargetColor_Params params;
	params.Color = Color;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDOutlineComponent.SetFadeTexture
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UTexture*                inFadeTexture                  (Parm, ZeroConstructor, IsPlainOldData)

void UDBDOutlineComponent::SetFadeTexture(class UTexture* inFadeTexture)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDOutlineComponent.SetFadeTexture");

	UDBDOutlineComponent_SetFadeTexture_Params params;
	params.inFadeTexture = inFadeTexture;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDOutlineComponent.SetFadeIntensity
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          fadeIntensity                  (Parm, ZeroConstructor, IsPlainOldData)

void UDBDOutlineComponent::SetFadeIntensity(float fadeIntensity)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDOutlineComponent.SetFadeIntensity");

	UDBDOutlineComponent_SetFadeIntensity_Params params;
	params.fadeIntensity = fadeIntensity;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDOutlineComponent.RefreshOutlineComponent
// (Final, Native, Public, BlueprintCallable)

void UDBDOutlineComponent::RefreshOutlineComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDOutlineComponent.RefreshOutlineComponent");

	UDBDOutlineComponent_RefreshOutlineComponent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayerController_Menu.TogglePlayerReadyState
// (Final, Native, Public)

void ADBDPlayerController_Menu::TogglePlayerReadyState()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayerController_Menu.TogglePlayerReadyState");

	ADBDPlayerController_Menu_TogglePlayerReadyState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayerController_Menu.SetPlayerReady
// (Final, Native, Public)
// Parameters:
// bool                           IsReady                        (Parm, ZeroConstructor, IsPlainOldData)

void ADBDPlayerController_Menu::SetPlayerReady(bool IsReady)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayerController_Menu.SetPlayerReady");

	ADBDPlayerController_Menu_SetPlayerReady_Params params;
	params.IsReady = IsReady;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayerController_Menu.Server_SetReadyToTravel
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void ADBDPlayerController_Menu::Server_SetReadyToTravel()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayerController_Menu.Server_SetReadyToTravel");

	ADBDPlayerController_Menu_Server_SetReadyToTravel_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayerController_Menu.Server_SetPlayerReady
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// bool                           IsReady                        (Parm, ZeroConstructor, IsPlainOldData)

void ADBDPlayerController_Menu::Server_SetPlayerReady(bool IsReady)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayerController_Menu.Server_SetPlayerReady");

	ADBDPlayerController_Menu_Server_SetPlayerReady_Params params;
	params.IsReady = IsReady;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayerController_Menu.Server_SetPlayerLoadout
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// struct FPlayerLoadoutData      desiredLoadout                 (Parm)

void ADBDPlayerController_Menu::Server_SetPlayerLoadout(const struct FPlayerLoadoutData& desiredLoadout)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayerController_Menu.Server_SetPlayerLoadout");

	ADBDPlayerController_Menu_Server_SetPlayerLoadout_Params params;
	params.desiredLoadout = desiredLoadout;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayerController_Menu.Server_SetEquipedPerks
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// TArray<struct FName>           perkIds                        (ConstParm, Parm, ZeroConstructor, ReferenceParm)
// TArray<int>                    perkLevels                     (ConstParm, Parm, ZeroConstructor, ReferenceParm)
// bool                           callOnRep                      (Parm, ZeroConstructor, IsPlainOldData)

void ADBDPlayerController_Menu::Server_SetEquipedPerks(TArray<struct FName> perkIds, TArray<int> perkLevels, bool callOnRep)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayerController_Menu.Server_SetEquipedPerks");

	ADBDPlayerController_Menu_Server_SetEquipedPerks_Params params;
	params.perkIds = perkIds;
	params.perkLevels = perkLevels;
	params.callOnRep = callOnRep;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayerController_Menu.Server_SetCustomizationMesh
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// struct FName                   combinedItemId                 (Parm, ZeroConstructor, IsPlainOldData)

void ADBDPlayerController_Menu::Server_SetCustomizationMesh(const struct FName& combinedItemId)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayerController_Menu.Server_SetCustomizationMesh");

	ADBDPlayerController_Menu_Server_SetCustomizationMesh_Params params;
	params.combinedItemId = combinedItemId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayerController_Menu.Server_SetCharacterLevel
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// int                            CharacterLevel                 (Parm, ZeroConstructor, IsPlainOldData)
// int                            PrestigeLevel                  (Parm, ZeroConstructor, IsPlainOldData)
// bool                           callOnRep                      (Parm, ZeroConstructor, IsPlainOldData)

void ADBDPlayerController_Menu::Server_SetCharacterLevel(int CharacterLevel, int PrestigeLevel, bool callOnRep)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayerController_Menu.Server_SetCharacterLevel");

	ADBDPlayerController_Menu_Server_SetCharacterLevel_Params params;
	params.CharacterLevel = CharacterLevel;
	params.PrestigeLevel = PrestigeLevel;
	params.callOnRep = callOnRep;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDPlayerController_Menu.Server_SetCharacterData
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// int                            CharacterIndex                 (Parm, ZeroConstructor, IsPlainOldData)
// struct FPlayerDataSync         PlayerDataSync                 (ConstParm, Parm, ReferenceParm)

void ADBDPlayerController_Menu::Server_SetCharacterData(int CharacterIndex, const struct FPlayerDataSync& PlayerDataSync)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDPlayerController_Menu.Server_SetCharacterData");

	ADBDPlayerController_Menu_Server_SetCharacterData_Params params;
	params.CharacterIndex = CharacterIndex;
	params.PlayerDataSync = PlayerDataSync;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDSpringArmComponent.IgnoreActor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                  Actor                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bShouldIgnore                  (Parm, ZeroConstructor, IsPlainOldData)

void UDBDSpringArmComponent::IgnoreActor(class AActor* Actor, bool bShouldIgnore)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDSpringArmComponent.IgnoreActor");

	UDBDSpringArmComponent_IgnoreActor_Params params;
	params.Actor = Actor;
	params.bShouldIgnore = bShouldIgnore;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDSpringArmComponent.ClearIgnoreActors
// (Final, Native, Public, BlueprintCallable)

void UDBDSpringArmComponent::ClearIgnoreActors()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDSpringArmComponent.ClearIgnoreActors");

	UDBDSpringArmComponent_ClearIgnoreActors_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDSurfaceTypeName.Convert
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<EPhysicalSurface>  surfaceType                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FName                   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FName UDBDSurfaceTypeName::STATIC_Convert(TEnumAsByte<EPhysicalSurface> surfaceType)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDSurfaceTypeName.Convert");

	UDBDSurfaceTypeName_Convert_Params params;
	params.surfaceType = surfaceType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDTimerComponent.Update
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          DeltaTime                      (Parm, ZeroConstructor, IsPlainOldData)

void UDBDTimerComponent::Update(float DeltaTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDTimerComponent.Update");

	UDBDTimerComponent_Update_Params params;
	params.DeltaTime = DeltaTime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDTimerComponent.Stop
// (Final, Native, Public, BlueprintCallable)

void UDBDTimerComponent::Stop()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDTimerComponent.Stop");

	UDBDTimerComponent_Stop_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDTimerComponent.ResetTo
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          Time                           (Parm, ZeroConstructor, IsPlainOldData)

void UDBDTimerComponent::ResetTo(float Time)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDTimerComponent.ResetTo");

	UDBDTimerComponent_ResetTo_Params params;
	params.Time = Time;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDTimerComponent.Reset
// (Final, Native, Public, BlueprintCallable)

void UDBDTimerComponent::Reset()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDTimerComponent.Reset");

	UDBDTimerComponent_Reset_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DBDTimerComponent.IsDone
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UDBDTimerComponent::IsDone()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDTimerComponent.IsDone");

	UDBDTimerComponent_IsDone_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDTimerComponent.GetTimeLeft
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UDBDTimerComponent::GetTimeLeft()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDTimerComponent.GetTimeLeft");

	UDBDTimerComponent_GetTimeLeft_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDTimerComponent.GetTimeElapsed
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UDBDTimerComponent::GetTimeElapsed()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDTimerComponent.GetTimeElapsed");

	UDBDTimerComponent_GetTimeElapsed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDTimerComponent.GetStartTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UDBDTimerComponent::GetStartTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDTimerComponent.GetStartTime");

	UDBDTimerComponent_GetStartTime_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDTimerComponent.GetPercentTimeLeft
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UDBDTimerComponent::GetPercentTimeLeft()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDTimerComponent.GetPercentTimeLeft");

	UDBDTimerComponent_GetPercentTimeLeft_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDTimerComponent.GetPercentTimeElapsed
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UDBDTimerComponent::GetPercentTimeElapsed()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDTimerComponent.GetPercentTimeElapsed");

	UDBDTimerComponent_GetPercentTimeElapsed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDUtilTimer.Update
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FDBDTimer               Timer                          (Parm, OutParm, ReferenceParm)
// float                          DeltaTime                      (Parm, ZeroConstructor, IsPlainOldData)

void UDBDUtilTimer::STATIC_Update(float DeltaTime, struct FDBDTimer* Timer)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDUtilTimer.Update");

	UDBDUtilTimer_Update_Params params;
	params.DeltaTime = DeltaTime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Timer != nullptr)
		*Timer = params.Timer;
}


// Function DeadByDaylight.DBDUtilTimer.Stop
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FDBDTimer               Timer                          (Parm, OutParm, ReferenceParm)

void UDBDUtilTimer::STATIC_Stop(struct FDBDTimer* Timer)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDUtilTimer.Stop");

	UDBDUtilTimer_Stop_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Timer != nullptr)
		*Timer = params.Timer;
}


// Function DeadByDaylight.DBDUtilTimer.ResetTo
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FDBDTimer               Timer                          (Parm, OutParm, ReferenceParm)
// float                          Time                           (Parm, ZeroConstructor, IsPlainOldData)

void UDBDUtilTimer::STATIC_ResetTo(float Time, struct FDBDTimer* Timer)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDUtilTimer.ResetTo");

	UDBDUtilTimer_ResetTo_Params params;
	params.Time = Time;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Timer != nullptr)
		*Timer = params.Timer;
}


// Function DeadByDaylight.DBDUtilTimer.Reset
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FDBDTimer               Timer                          (Parm, OutParm, ReferenceParm)

void UDBDUtilTimer::STATIC_Reset(struct FDBDTimer* Timer)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDUtilTimer.Reset");

	UDBDUtilTimer_Reset_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Timer != nullptr)
		*Timer = params.Timer;
}


// Function DeadByDaylight.DBDUtilTimer.IsDone
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FDBDTimer               Timer                          (Parm, OutParm, ReferenceParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UDBDUtilTimer::STATIC_IsDone(struct FDBDTimer* Timer)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDUtilTimer.IsDone");

	UDBDUtilTimer_IsDone_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Timer != nullptr)
		*Timer = params.Timer;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDUtilTimer.GetTimeLeft
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FDBDTimer               Timer                          (Parm, OutParm, ReferenceParm)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UDBDUtilTimer::STATIC_GetTimeLeft(struct FDBDTimer* Timer)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDUtilTimer.GetTimeLeft");

	UDBDUtilTimer_GetTimeLeft_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Timer != nullptr)
		*Timer = params.Timer;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDUtilTimer.GetTimeElapsed
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FDBDTimer               Timer                          (Parm, OutParm, ReferenceParm)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UDBDUtilTimer::STATIC_GetTimeElapsed(struct FDBDTimer* Timer)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDUtilTimer.GetTimeElapsed");

	UDBDUtilTimer_GetTimeElapsed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Timer != nullptr)
		*Timer = params.Timer;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDUtilTimer.GetStartTime
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FDBDTimer               Timer                          (Parm, OutParm, ReferenceParm)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UDBDUtilTimer::STATIC_GetStartTime(struct FDBDTimer* Timer)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDUtilTimer.GetStartTime");

	UDBDUtilTimer_GetStartTime_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Timer != nullptr)
		*Timer = params.Timer;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDUtilTimer.GetPercentTimeLeft
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FDBDTimer               Timer                          (Parm, OutParm, ReferenceParm)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UDBDUtilTimer::STATIC_GetPercentTimeLeft(struct FDBDTimer* Timer)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDUtilTimer.GetPercentTimeLeft");

	UDBDUtilTimer_GetPercentTimeLeft_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Timer != nullptr)
		*Timer = params.Timer;

	return params.ReturnValue;
}


// Function DeadByDaylight.DBDUtilTimer.GetPercentTimeElapsed
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FDBDTimer               Timer                          (Parm, OutParm, ReferenceParm)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UDBDUtilTimer::STATIC_GetPercentTimeElapsed(struct FDBDTimer* Timer)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DBDUtilTimer.GetPercentTimeElapsed");

	UDBDUtilTimer_GetPercentTimeElapsed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Timer != nullptr)
		*Timer = params.Timer;

	return params.ReturnValue;
}


// Function DeadByDaylight.EffectsLocator.OnLostActor
// (Event, Public, BlueprintEvent)
// Parameters:
// class AActor*                  lostActor                      (Parm, ZeroConstructor, IsPlainOldData)

void AEffectsLocator::OnLostActor(class AActor* lostActor)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.EffectsLocator.OnLostActor");

	AEffectsLocator_OnLostActor_Params params;
	params.lostActor = lostActor;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.EffectsLocator.OnLeaveCollisionArea
// (Final, Native, Public)
// Parameters:
// class AActor*                  OverlappedActor                (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData)

void AEffectsLocator::OnLeaveCollisionArea(class AActor* OverlappedActor, class AActor* OtherActor)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.EffectsLocator.OnLeaveCollisionArea");

	AEffectsLocator_OnLeaveCollisionArea_Params params;
	params.OverlappedActor = OverlappedActor;
	params.OtherActor = OtherActor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.EffectsLocator.OnFoundActor
// (Event, Public, BlueprintEvent)
// Parameters:
// class AActor*                  foundActor                     (Parm, ZeroConstructor, IsPlainOldData)

void AEffectsLocator::OnFoundActor(class AActor* foundActor)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.EffectsLocator.OnFoundActor");

	AEffectsLocator_OnFoundActor_Params params;
	params.foundActor = foundActor;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.EffectsLocator.OnEnterCollisionArea
// (Final, Native, Public)
// Parameters:
// class AActor*                  OverlappedActor                (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData)

void AEffectsLocator::OnEnterCollisionArea(class AActor* OverlappedActor, class AActor* OtherActor)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.EffectsLocator.OnEnterCollisionArea");

	AEffectsLocator_OnEnterCollisionArea_Params params;
	params.OverlappedActor = OverlappedActor;
	params.OtherActor = OtherActor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.EffectsLocator.OnActorTick
// (Event, Public, BlueprintEvent)
// Parameters:
// class UMaterialInstanceDynamic* actorMaterialInstanceDynamic   (Parm, ZeroConstructor, IsPlainOldData)

void AEffectsLocator::OnActorTick(class UMaterialInstanceDynamic* actorMaterialInstanceDynamic)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.EffectsLocator.OnActorTick");

	AEffectsLocator_OnActorTick_Params params;
	params.actorMaterialInstanceDynamic = actorMaterialInstanceDynamic;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.EventGeneratorComponent.OnGeneratorRepaired
// (Final, Native, Private)

void UEventGeneratorComponent::OnGeneratorRepaired()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.EventGeneratorComponent.OnGeneratorRepaired");

	UEventGeneratorComponent_OnGeneratorRepaired_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.ExposerCirclingComponent.SetIsCircling
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           circling                       (Parm, ZeroConstructor, IsPlainOldData)

void UExposerCirclingComponent::SetIsCircling(bool circling)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.ExposerCirclingComponent.SetIsCircling");

	UExposerCirclingComponent_SetIsCircling_Params params;
	params.circling = circling;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.ExposerCirclingComponent.Reset
// (Final, Native, Public, BlueprintCallable)

void UExposerCirclingComponent::Reset()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.ExposerCirclingComponent.Reset");

	UExposerCirclingComponent_Reset_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.ExposerInteriorZoneComponent.AddExposerSpawnPoint
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class USceneComponent*         Point                          (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UExposerInteriorZoneComponent::AddExposerSpawnPoint(class USceneComponent* Point)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.ExposerInteriorZoneComponent.AddExposerSpawnPoint");

	UExposerInteriorZoneComponent_AddExposerSpawnPoint_Params params;
	params.Point = Point;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.Firecracker.ShouldDeafen
// (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ADBDPlayer*              Player                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// float                          outDuration                    (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFirecracker::ShouldDeafen(class ADBDPlayer* Player, float* outDuration)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.Firecracker.ShouldDeafen");

	AFirecracker_ShouldDeafen_Params params;
	params.Player = Player;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (outDuration != nullptr)
		*outDuration = params.outDuration;

	return params.ReturnValue;
}


// Function DeadByDaylight.Firecracker.ShouldBlind
// (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ADBDPlayer*              Player                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// float                          outDuration                    (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFirecracker::ShouldBlind(class ADBDPlayer* Player, float* outDuration)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.Firecracker.ShouldBlind");

	AFirecracker_ShouldBlind_Params params;
	params.Player = Player;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (outDuration != nullptr)
		*outDuration = params.outDuration;

	return params.ReturnValue;
}


// Function DeadByDaylight.Firecracker.OnFuseBurnUpdate
// (Event, Protected, BlueprintEvent)
// Parameters:
// float                          DeltaSeconds                   (Parm, ZeroConstructor, IsPlainOldData)
// float                          fuseTimeLeftPercent            (Parm, ZeroConstructor, IsPlainOldData)

void AFirecracker::OnFuseBurnUpdate(float DeltaSeconds, float fuseTimeLeftPercent)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.Firecracker.OnFuseBurnUpdate");

	AFirecracker_OnFuseBurnUpdate_Params params;
	params.DeltaSeconds = DeltaSeconds;
	params.fuseTimeLeftPercent = fuseTimeLeftPercent;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.Firecracker.OnFuseBurnExit
// (Event, Protected, BlueprintEvent)

void AFirecracker::OnFuseBurnExit()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.Firecracker.OnFuseBurnExit");

	AFirecracker_OnFuseBurnExit_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.Firecracker.OnFuseBurnEnter
// (Event, Protected, BlueprintEvent)

void AFirecracker::OnFuseBurnEnter()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.Firecracker.OnFuseBurnEnter");

	AFirecracker_OnFuseBurnEnter_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.Firecracker.OnExplode
// (Event, Protected, BlueprintEvent)

void AFirecracker::OnExplode()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.Firecracker.OnExplode");

	AFirecracker_OnExplode_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.Firecracker.OnEffectsInitialized
// (Native, Event, Protected, BlueprintEvent)

void AFirecracker::OnEffectsInitialized()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.Firecracker.OnEffectsInitialized");

	AFirecracker_OnEffectsInitialized_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.Firecracker.Multicast_InitFromSpawner
// (Net, NetReliable, Native, Event, NetMulticast, Public, BlueprintCallable)
// Parameters:
// class ACollectable*            spawner                        (Parm, ZeroConstructor, IsPlainOldData)

void AFirecracker::Multicast_InitFromSpawner(class ACollectable* spawner)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.Firecracker.Multicast_InitFromSpawner");

	AFirecracker_Multicast_InitFromSpawner_Params params;
	params.spawner = spawner;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.Firecracker.HasModifierOfType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayTag            Type                           (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFirecracker::HasModifierOfType(const struct FGameplayTag& Type)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.Firecracker.HasModifierOfType");

	AFirecracker_HasModifierOfType_Params params;
	params.Type = Type;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.Firecracker.HasFlag
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayTag            flag                           (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFirecracker::HasFlag(const struct FGameplayTag& flag)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.Firecracker.HasFlag");

	AFirecracker_HasFlag_Params params;
	params.flag = flag;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.Firecracker.GetPlayerOwner
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ADBDPlayer*              ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ADBDPlayer* AFirecracker::GetPlayerOwner()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.Firecracker.GetPlayerOwner");

	AFirecracker_GetPlayerOwner_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.Firecracker.GetModifierValue
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayTag            Type                           (Parm)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFirecracker::GetModifierValue(const struct FGameplayTag& Type)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.Firecracker.GetModifierValue");

	AFirecracker_GetModifierValue_Params params;
	params.Type = Type;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.Firecracker.GetExplosionRange
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFirecracker::GetExplosionRange()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.Firecracker.GetExplosionRange");

	AFirecracker_GetExplosionRange_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.Firecracker.GetExplosionEffectDuration
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFirecracker::GetExplosionEffectDuration()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.Firecracker.GetExplosionEffectDuration");

	AFirecracker_GetExplosionEffectDuration_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.Firecracker.GetExplosionDelay
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFirecracker::GetExplosionDelay()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.Firecracker.GetExplosionDelay");

	AFirecracker_GetExplosionDelay_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.Firecracker.GetExploded
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFirecracker::GetExploded()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.Firecracker.GetExploded");

	AFirecracker_GetExploded_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.Firecracker.GetEffects
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class UGameplayModifierContainer*> ReturnValue                    (ConstParm, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

TArray<class UGameplayModifierContainer*> AFirecracker::GetEffects()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.Firecracker.GetEffects");

	AFirecracker_GetEffects_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.Firecracker.GetEffectArea
// (Native, Event, Protected, BlueprintEvent, Const)
// Parameters:
// class UPrimitiveComponent*     ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UPrimitiveComponent* AFirecracker::GetEffectArea()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.Firecracker.GetEffectArea");

	AFirecracker_GetEffectArea_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.Firecracker.GetDeafnessEffectDuration
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ADBDPlayer*              Player                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFirecracker::GetDeafnessEffectDuration(class ADBDPlayer* Player)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.Firecracker.GetDeafnessEffectDuration");

	AFirecracker_GetDeafnessEffectDuration_Params params;
	params.Player = Player;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.Firecracker.GetBlindnessEffectDuration
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ADBDPlayer*              Player                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFirecracker::GetBlindnessEffectDuration(class ADBDPlayer* Player)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.Firecracker.GetBlindnessEffectDuration");

	AFirecracker_GetBlindnessEffectDuration_Params params;
	params.Player = Player;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.FirecrackerEffectHandlerComponent.SetFirecrackerInRange
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AFirecracker*            Firecracker                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           inRange                        (Parm, ZeroConstructor, IsPlainOldData)

void UFirecrackerEffectHandlerComponent::SetFirecrackerInRange(class AFirecracker* Firecracker, bool inRange)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.FirecrackerEffectHandlerComponent.SetFirecrackerInRange");

	UFirecrackerEffectHandlerComponent_SetFirecrackerInRange_Params params;
	params.Firecracker = Firecracker;
	params.inRange = inRange;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.FirecrackerEffectHandlerComponent.OnFirecrackerDestroyed
// (Final, Native, Private)
// Parameters:
// class AActor*                  DestroyedActor                 (Parm, ZeroConstructor, IsPlainOldData)

void UFirecrackerEffectHandlerComponent::OnFirecrackerDestroyed(class AActor* DestroyedActor)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.FirecrackerEffectHandlerComponent.OnFirecrackerDestroyed");

	UFirecrackerEffectHandlerComponent_OnFirecrackerDestroyed_Params params;
	params.DestroyedActor = DestroyedActor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.FlashLightComponent.UsingCheapSpotLightOcclusion
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFlashLightComponent::UsingCheapSpotLightOcclusion()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.FlashLightComponent.UsingCheapSpotLightOcclusion");

	UFlashLightComponent_UsingCheapSpotLightOcclusion_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.FlashLightComponent.Server_UpdateTargetLitCharge
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// class AInteractable*           Target                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          DeltaSeconds                   (Parm, ZeroConstructor, IsPlainOldData)

void UFlashLightComponent::Server_UpdateTargetLitCharge(class AInteractable* Target, float DeltaSeconds)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.FlashLightComponent.Server_UpdateTargetLitCharge");

	UFlashLightComponent_Server_UpdateTargetLitCharge_Params params;
	params.Target = Target;
	params.DeltaSeconds = DeltaSeconds;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.FlashLightComponent.Server_StopBlindCharge
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// class AActor*                  effector                       (Parm, ZeroConstructor, IsPlainOldData)

void UFlashLightComponent::Server_StopBlindCharge(class AActor* effector)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.FlashLightComponent.Server_StopBlindCharge");

	UFlashLightComponent_Server_StopBlindCharge_Params params;
	params.effector = effector;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.FlashLightComponent.Server_StartBlindCharge
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// class AActor*                  effector                       (Parm, ZeroConstructor, IsPlainOldData)

void UFlashLightComponent::Server_StartBlindCharge(class AActor* effector)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.FlashLightComponent.Server_StartBlindCharge");

	UFlashLightComponent_Server_StartBlindCharge_Params params;
	params.effector = effector;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.FlashLightComponent.OnUseReleased
// (Final, Native, Public, BlueprintCallable)

void UFlashLightComponent::OnUseReleased()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.FlashLightComponent.OnUseReleased");

	UFlashLightComponent_OnUseReleased_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.FlashLightComponent.OnUse
// (Final, Native, Public, BlueprintCallable)

void UFlashLightComponent::OnUse()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.FlashLightComponent.OnUse");

	UFlashLightComponent_OnUse_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.FlashLightComponent.IsSlasherBlinded
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFlashLightComponent::IsSlasherBlinded()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.FlashLightComponent.IsSlasherBlinded");

	UFlashLightComponent_IsSlasherBlinded_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.FlashLightComponent.IsInUse
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFlashLightComponent::IsInUse()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.FlashLightComponent.IsInUse");

	UFlashLightComponent_IsInUse_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.FlashLightComponent.GetOcclusionDistance
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFlashLightComponent::GetOcclusionDistance()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.FlashLightComponent.GetOcclusionDistance");

	UFlashLightComponent_GetOcclusionDistance_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.FlashLightComponent.GetMaxAimingDistance
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFlashLightComponent::GetMaxAimingDistance()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.FlashLightComponent.GetMaxAimingDistance");

	UFlashLightComponent_GetMaxAimingDistance_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.FlashLightComponent.GetEffectiveTimeToInvisibilityBurnoutModifier
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFlashLightComponent::GetEffectiveTimeToInvisibilityBurnoutModifier()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.FlashLightComponent.GetEffectiveTimeToInvisibilityBurnoutModifier");

	UFlashLightComponent_GetEffectiveTimeToInvisibilityBurnoutModifier_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.FlashLightComponent.GetEffectiveTimeToBlindModifier
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFlashLightComponent::GetEffectiveTimeToBlindModifier()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.FlashLightComponent.GetEffectiveTimeToBlindModifier");

	UFlashLightComponent_GetEffectiveTimeToBlindModifier_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.FlashLightComponent.GetEffectiveBlindnessDuration
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFlashLightComponent::GetEffectiveBlindnessDuration()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.FlashLightComponent.GetEffectiveBlindnessDuration");

	UFlashLightComponent_GetEffectiveBlindnessDuration_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.FlashLightComponent.GetEffectiveBeamLength
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFlashLightComponent::GetEffectiveBeamLength()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.FlashLightComponent.GetEffectiveBeamLength");

	UFlashLightComponent_GetEffectiveBeamLength_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.FlashLightComponent.GetEffectiveBeamHalfAngle
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFlashLightComponent::GetEffectiveBeamHalfAngle()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.FlashLightComponent.GetEffectiveBeamHalfAngle");

	UFlashLightComponent_GetEffectiveBeamHalfAngle_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.FlashLightComponent.GetEffectiveAccuracy
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFlashLightComponent::GetEffectiveAccuracy()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.FlashLightComponent.GetEffectiveAccuracy");

	UFlashLightComponent_GetEffectiveAccuracy_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.FlashLightReceiverComponent.RemoveFlashLight
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFlashLightComponent*    flashLight                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UFlashLightReceiverComponent::RemoveFlashLight(class UFlashLightComponent* flashLight)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.FlashLightReceiverComponent.RemoveFlashLight");

	UFlashLightReceiverComponent_RemoveFlashLight_Params params;
	params.flashLight = flashLight;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.FlashLightReceiverComponent.IsInAnyFlashLightZone
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFlashLightReceiverComponent::IsInAnyFlashLightZone()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.FlashLightReceiverComponent.IsInAnyFlashLightZone");

	UFlashLightReceiverComponent_IsInAnyFlashLightZone_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.FlashLightReceiverComponent.IsActorInAnyFlashLightZone
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AActor*                  Target                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFlashLightReceiverComponent::STATIC_IsActorInAnyFlashLightZone(class AActor* Target)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.FlashLightReceiverComponent.IsActorInAnyFlashLightZone");

	UFlashLightReceiverComponent_IsActorInAnyFlashLightZone_Params params;
	params.Target = Target;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.FlashLightReceiverComponent.AddFlashLight
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFlashLightComponent*    flashLight                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UFlashLightReceiverComponent::AddFlashLight(class UFlashLightComponent* flashLight)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.FlashLightReceiverComponent.AddFlashLight");

	UFlashLightReceiverComponent_AddFlashLight_Params params;
	params.flashLight = flashLight;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.FootSteps.OnSoundTriggered
// (Final, Native, Private, HasDefaults)
// Parameters:
// class AActor*                  originator                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 Location                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           shouldTrack                    (Parm, ZeroConstructor, IsPlainOldData)
// float                          audibleRange                   (Parm, ZeroConstructor, IsPlainOldData)

void AFootSteps::OnSoundTriggered(class AActor* originator, const struct FVector& Location, bool shouldTrack, float audibleRange)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.FootSteps.OnSoundTriggered");

	AFootSteps_OnSoundTriggered_Params params;
	params.originator = originator;
	params.Location = Location;
	params.shouldTrack = shouldTrack;
	params.audibleRange = audibleRange;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.OnlineSystemHandler.ReservationComplete
// (Final, Native, Public)
// Parameters:
// int                            result                         (Parm, ZeroConstructor, IsPlainOldData)

void UOnlineSystemHandler::ReservationComplete(int result)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.OnlineSystemHandler.ReservationComplete");

	UOnlineSystemHandler_ReservationComplete_Params params;
	params.result = result;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.OnlineSystemHandler.OnHostConnectionFailure
// (Final, Native, Public)

void UOnlineSystemHandler::OnHostConnectionFailure()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.OnlineSystemHandler.OnHostConnectionFailure");

	UOnlineSystemHandler_OnHostConnectionFailure_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.OnlineSystemHandler.JoinSessionOnBeaconDestroyed
// (Final, Native, Public)
// Parameters:
// class AActor*                  DestroyedActor                 (Parm, ZeroConstructor, IsPlainOldData)

void UOnlineSystemHandler::JoinSessionOnBeaconDestroyed(class AActor* DestroyedActor)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.OnlineSystemHandler.JoinSessionOnBeaconDestroyed");

	UOnlineSystemHandler_JoinSessionOnBeaconDestroyed_Params params;
	params.DestroyedActor = DestroyedActor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.Perk.Multicast_InitializePerk
// (Net, NetReliable, Native, Event, NetMulticast, Public, NetValidate)
// Parameters:
// struct FName                   PerkID                         (Parm, ZeroConstructor, IsPlainOldData)
// int                            PerkLevel                      (Parm, ZeroConstructor, IsPlainOldData)

void UPerk::Multicast_InitializePerk(const struct FName& PerkID, int PerkLevel)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.Perk.Multicast_InitializePerk");

	UPerk_Multicast_InitializePerk_Params params;
	params.PerkID = PerkID;
	params.PerkLevel = PerkLevel;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.Perk.GetPerkLevel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UPerk::GetPerkLevel()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.Perk.GetPerkLevel");

	UPerk_GetPerkLevel_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.Perk.GetInventoryItemType
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TEnumAsByte<EInventoryItemType> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

TEnumAsByte<EInventoryItemType> UPerk::GetInventoryItemType()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.Perk.GetInventoryItemType");

	UPerk_GetInventoryItemType_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.Perk.GetGameplayModifierData
// (Native, Public)
// Parameters:
// struct FGameplayModifierData   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FGameplayModifierData UPerk::GetGameplayModifierData()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.Perk.GetGameplayModifierData");

	UPerk_GetGameplayModifierData_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.Perk.GetConstGameplayModifierData
// (Native, Public, Const)
// Parameters:
// struct FGameplayModifierData   ReturnValue                    (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm)

struct FGameplayModifierData UPerk::GetConstGameplayModifierData()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.Perk.GetConstGameplayModifierData");

	UPerk_GetConstGameplayModifierData_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.HexPerk.OnInitialized_Internal
// (Native, Public)

void UHexPerk::OnInitialized_Internal()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.HexPerk.OnInitialized_Internal");

	UHexPerk_OnInitialized_Internal_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.HexPerk.OnGameplayEvent
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// TEnumAsByte<EDBDScoreTypes>    gameplayEventType              (Parm, ZeroConstructor, IsPlainOldData)
// float                          amount                         (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  Instigator                     (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  Target                         (Parm, ZeroConstructor, IsPlainOldData)

void UHexPerk::OnGameplayEvent(TEnumAsByte<EDBDScoreTypes> gameplayEventType, float amount, class AActor* Instigator, class AActor* Target)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.HexPerk.OnGameplayEvent");

	UHexPerk_OnGameplayEvent_Params params;
	params.gameplayEventType = gameplayEventType;
	params.amount = amount;
	params.Instigator = Instigator;
	params.Target = Target;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.HexPerk.Multicast_SetTotemActor
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
// Parameters:
// class ATotem*                  aTotemActor                    (Parm, ZeroConstructor, IsPlainOldData)

void UHexPerk::Multicast_SetTotemActor(class ATotem* aTotemActor)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.HexPerk.Multicast_SetTotemActor");

	UHexPerk_Multicast_SetTotemActor_Params params;
	params.aTotemActor = aTotemActor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.HexPerk.IsCurseRevealedToPlayer
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            playerUniqueID                 (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UHexPerk::IsCurseRevealedToPlayer(int playerUniqueID)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.HexPerk.IsCurseRevealedToPlayer");

	UHexPerk_IsCurseRevealedToPlayer_Params params;
	params.playerUniqueID = playerUniqueID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.HexPerk.FireCursedStatusOnLocalPlayer
// (Final, Native, Protected, BlueprintCallable)

void UHexPerk::FireCursedStatusOnLocalPlayer()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.HexPerk.FireCursedStatusOnLocalPlayer");

	UHexPerk_FireCursedStatusOnLocalPlayer_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.HexPerk.Authority_SetCurseRevealedToPlayer
// (Final, BlueprintAuthorityOnly, Native, Protected, BlueprintCallable)
// Parameters:
// int                            playerUniqueID                 (Parm, ZeroConstructor, IsPlainOldData)
// bool                           Value                          (Parm, ZeroConstructor, IsPlainOldData)

void UHexPerk::Authority_SetCurseRevealedToPlayer(int playerUniqueID, bool Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.HexPerk.Authority_SetCurseRevealedToPlayer");

	UHexPerk_Authority_SetCurseRevealedToPlayer_Params params;
	params.playerUniqueID = playerUniqueID;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.HexPerk.Authority_BindToDullTotem
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UHexPerk::Authority_BindToDullTotem()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.HexPerk.Authority_BindToDullTotem");

	UHexPerk_Authority_BindToDullTotem_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.StakeOutPerk.Server_ConsumeToken
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)

void UStakeOutPerk::Server_ConsumeToken()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.StakeOutPerk.Server_ConsumeToken");

	UStakeOutPerk_Server_ConsumeToken_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.StakeOutPerk.Local_BroadcastConsumeToken
// (Final, Native, Public, BlueprintCallable)

void UStakeOutPerk::Local_BroadcastConsumeToken()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.StakeOutPerk.Local_BroadcastConsumeToken");

	UStakeOutPerk_Local_BroadcastConsumeToken_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.SurveillancePerk.HandleGeneratorIsDamagedChanged
// (Final, Native, Private)
// Parameters:
// class AGenerator*              Generator                      (Parm, ZeroConstructor, IsPlainOldData)

void USurveillancePerk::HandleGeneratorIsDamagedChanged(class AGenerator* Generator)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.SurveillancePerk.HandleGeneratorIsDamagedChanged");

	USurveillancePerk_HandleGeneratorIsDamagedChanged_Params params;
	params.Generator = Generator;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.StatusEffect.ShouldDisplayStatusEffectIcon
// (Native, Event, Protected, BlueprintEvent, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UStatusEffect::ShouldDisplayStatusEffectIcon()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.StatusEffect.ShouldDisplayStatusEffectIcon");

	UStatusEffect_ShouldDisplayStatusEffectIcon_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.StatusEffect.SetShouldDisplay
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           On                             (Parm, ZeroConstructor, IsPlainOldData)

void UStatusEffect::SetShouldDisplay(bool On)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.StatusEffect.SetShouldDisplay");

	UStatusEffect_SetShouldDisplay_Params params;
	params.On = On;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.StatusEffect.OnInitialized_Internal
// (Native, Public)

void UStatusEffect::OnInitialized_Internal()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.StatusEffect.OnInitialized_Internal");

	UStatusEffect_OnInitialized_Internal_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.StatusEffect.Multicast_SetRemainingLifetime
// (Net, NetReliable, Native, Event, NetMulticast, Protected)
// Parameters:
// float                          lifetime                       (Parm, ZeroConstructor, IsPlainOldData)

void UStatusEffect::Multicast_SetRemainingLifetime(float lifetime)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.StatusEffect.Multicast_SetRemainingLifetime");

	UStatusEffect_Multicast_SetRemainingLifetime_Params params;
	params.lifetime = lifetime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.StatusEffect.Multicast_InitializeStatusEffect
// (Net, NetReliable, Native, Event, NetMulticast, Public, NetValidate)
// Parameters:
// struct FName                   statusEffectID                 (Parm, ZeroConstructor, IsPlainOldData)
// class ADBDPlayer*              originatingPlayer              (Parm, ZeroConstructor, IsPlainOldData)
// float                          customParam                    (Parm, ZeroConstructor, IsPlainOldData)
// class UGameplayModifierContainer* originatingEffect              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UStatusEffect::Multicast_InitializeStatusEffect(const struct FName& statusEffectID, class ADBDPlayer* originatingPlayer, float customParam, class UGameplayModifierContainer* originatingEffect)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.StatusEffect.Multicast_InitializeStatusEffect");

	UStatusEffect_Multicast_InitializeStatusEffect_Params params;
	params.statusEffectID = statusEffectID;
	params.originatingPlayer = originatingPlayer;
	params.customParam = customParam;
	params.originatingEffect = originatingEffect;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.StatusEffect.InitializeLifetime
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          lifetime                       (Parm, ZeroConstructor, IsPlainOldData)

void UStatusEffect::InitializeLifetime(float lifetime)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.StatusEffect.InitializeLifetime");

	UStatusEffect_InitializeLifetime_Params params;
	params.lifetime = lifetime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.StatusEffect.GetStatusEffectCooldownRate
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UStatusEffect::GetStatusEffectCooldownRate()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.StatusEffect.GetStatusEffectCooldownRate");

	UStatusEffect_GetStatusEffectCooldownRate_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.StatusEffect.GetShouldDisplay
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UStatusEffect::GetShouldDisplay()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.StatusEffect.GetShouldDisplay");

	UStatusEffect_GetShouldDisplay_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.StatusEffect.GetOriginatingPlayer
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ADBDPlayer*              ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ADBDPlayer* UStatusEffect::GetOriginatingPlayer()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.StatusEffect.GetOriginatingPlayer");

	UStatusEffect_GetOriginatingPlayer_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.StatusEffect.GetGameplayModifierData
// (Native, Public)
// Parameters:
// struct FGameplayModifierData   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FGameplayModifierData UStatusEffect::GetGameplayModifierData()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.StatusEffect.GetGameplayModifierData");

	UStatusEffect_GetGameplayModifierData_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.StatusEffect.GetConstGameplayModifierData
// (Native, Public, Const)
// Parameters:
// struct FGameplayModifierData   ReturnValue                    (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm)

struct FGameplayModifierData UStatusEffect::GetConstGameplayModifierData()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.StatusEffect.GetConstGameplayModifierData");

	UStatusEffect_GetConstGameplayModifierData_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.StatusEffect.FireActiveStatusEffectEvent
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:
// float                          percentage                     (Parm, ZeroConstructor, IsPlainOldData)
// int                            LevelToDisplay                 (Parm, ZeroConstructor, IsPlainOldData)

void UStatusEffect::FireActiveStatusEffectEvent(float percentage, int LevelToDisplay)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.StatusEffect.FireActiveStatusEffectEvent");

	UStatusEffect_FireActiveStatusEffectEvent_Params params;
	params.percentage = percentage;
	params.LevelToDisplay = LevelToDisplay;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.StatusEffect.BroadcastOriginatorGameEventNotification
// (Final, Native, Protected, BlueprintCallable)

void UStatusEffect::BroadcastOriginatorGameEventNotification()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.StatusEffect.BroadcastOriginatorGameEventNotification");

	UStatusEffect_BroadcastOriginatorGameEventNotification_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.StatusEffect.BroadcastGameEventNotification
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// struct FGameplayNotificationData notificationData               (Parm)
// bool                           addToHistory                   (Parm, ZeroConstructor, IsPlainOldData)

void UStatusEffect::BroadcastGameEventNotification(const struct FGameplayNotificationData& notificationData, bool addToHistory)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.StatusEffect.BroadcastGameEventNotification");

	UStatusEffect_BroadcastGameEventNotification_Params params;
	params.notificationData = notificationData;
	params.addToHistory = addToHistory;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.StatusEffect.Authority_SetRemainingLifetime
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// float                          lifetime                       (Parm, ZeroConstructor, IsPlainOldData)

void UStatusEffect::Authority_SetRemainingLifetime(float lifetime)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.StatusEffect.Authority_SetRemainingLifetime");

	UStatusEffect_Authority_SetRemainingLifetime_Params params;
	params.lifetime = lifetime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.StatusEffect.Authority_RemoveSelf
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)

void UStatusEffect::Authority_RemoveSelf()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.StatusEffect.Authority_RemoveSelf");

	UStatusEffect_Authority_RemoveSelf_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.Bloodlust.Multicast_ResetBloodlust
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)

void UBloodlust::Multicast_ResetBloodlust()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.Bloodlust.Multicast_ResetBloodlust");

	UBloodlust_Multicast_ResetBloodlust_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.Bloodlust.GetBloodlustTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UBloodlust::GetBloodlustTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.Bloodlust.GetBloodlustTime");

	UBloodlust_GetBloodlustTime_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.GameplayModifierFunctionLibrary.SetPlayerGameplayModifier
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class ADBDPlayer*              targetPlayer                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FGameplayTag            ModifierType                   (Parm)
// float                          ModifierValue                  (Parm, ZeroConstructor, IsPlainOldData)

void UGameplayModifierFunctionLibrary::STATIC_SetPlayerGameplayModifier(class ADBDPlayer* targetPlayer, const struct FGameplayTag& ModifierType, float ModifierValue)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.GameplayModifierFunctionLibrary.SetPlayerGameplayModifier");

	UGameplayModifierFunctionLibrary_SetPlayerGameplayModifier_Params params;
	params.targetPlayer = targetPlayer;
	params.ModifierType = ModifierType;
	params.ModifierValue = ModifierValue;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.GameplayModifierFunctionLibrary.SetPlayerGameplayFlag
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class ADBDPlayer*              targetPlayer                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FGameplayTag            flagType                       (Parm)

void UGameplayModifierFunctionLibrary::STATIC_SetPlayerGameplayFlag(class ADBDPlayer* targetPlayer, const struct FGameplayTag& flagType)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.GameplayModifierFunctionLibrary.SetPlayerGameplayFlag");

	UGameplayModifierFunctionLibrary_SetPlayerGameplayFlag_Params params;
	params.targetPlayer = targetPlayer;
	params.flagType = flagType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.GameplayModifierFunctionLibrary.ClearPlayerGameplayModifier
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class ADBDPlayer*              targetPlayer                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FGameplayTag            ModifierType                   (Parm)

void UGameplayModifierFunctionLibrary::STATIC_ClearPlayerGameplayModifier(class ADBDPlayer* targetPlayer, const struct FGameplayTag& ModifierType)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.GameplayModifierFunctionLibrary.ClearPlayerGameplayModifier");

	UGameplayModifierFunctionLibrary_ClearPlayerGameplayModifier_Params params;
	params.targetPlayer = targetPlayer;
	params.ModifierType = ModifierType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.GameplayModifierFunctionLibrary.ClearPlayerGameplayFlag
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class ADBDPlayer*              targetPlayer                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FGameplayTag            flagType                       (Parm)

void UGameplayModifierFunctionLibrary::STATIC_ClearPlayerGameplayFlag(class ADBDPlayer* targetPlayer, const struct FGameplayTag& flagType)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.GameplayModifierFunctionLibrary.ClearPlayerGameplayFlag");

	UGameplayModifierFunctionLibrary_ClearPlayerGameplayFlag_Params params;
	params.targetPlayer = targetPlayer;
	params.flagType = flagType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.GameplayModifierFunctionLibrary.ClearAllPlayerGameplayModifiers
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class ADBDPlayer*              targetPlayer                   (Parm, ZeroConstructor, IsPlainOldData)

void UGameplayModifierFunctionLibrary::STATIC_ClearAllPlayerGameplayModifiers(class ADBDPlayer* targetPlayer)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.GameplayModifierFunctionLibrary.ClearAllPlayerGameplayModifiers");

	UGameplayModifierFunctionLibrary_ClearAllPlayerGameplayModifiers_Params params;
	params.targetPlayer = targetPlayer;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.GameplayModifierFunctionLibrary.ClearAllPlayerGameplayFlags
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class ADBDPlayer*              targetPlayer                   (Parm, ZeroConstructor, IsPlainOldData)

void UGameplayModifierFunctionLibrary::STATIC_ClearAllPlayerGameplayFlags(class ADBDPlayer* targetPlayer)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.GameplayModifierFunctionLibrary.ClearAllPlayerGameplayFlags");

	UGameplayModifierFunctionLibrary_ClearAllPlayerGameplayFlags_Params params;
	params.targetPlayer = targetPlayer;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.TimerGate.Update
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          DeltaTime                      (Parm, ZeroConstructor, IsPlainOldData)

void ATimerGate::Update(float DeltaTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.TimerGate.Update");

	ATimerGate_Update_Params params;
	params.DeltaTime = DeltaTime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.TimerGate.SetValues
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          TimerDuration                  (Parm, ZeroConstructor, IsPlainOldData)
// float                          RushGain                       (Parm, ZeroConstructor, IsPlainOldData)
// float                          RushBlockDuration              (Parm, ZeroConstructor, IsPlainOldData)

void ATimerGate::SetValues(float TimerDuration, float RushGain, float RushBlockDuration)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.TimerGate.SetValues");

	ATimerGate_SetValues_Params params;
	params.TimerDuration = TimerDuration;
	params.RushGain = RushGain;
	params.RushBlockDuration = RushBlockDuration;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.TimerGate.Rushed
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           success                        (Parm, ZeroConstructor, IsPlainOldData)

void ATimerGate::Rushed(bool success)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.TimerGate.Rushed");

	ATimerGate_Rushed_Params params;
	params.success = success;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.TimerGate.Reset
// (Final, Native, Public, BlueprintCallable)

void ATimerGate::Reset()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.TimerGate.Reset");

	ATimerGate_Reset_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.TimerGate.RemoveTime
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          Time                           (Parm, ZeroConstructor, IsPlainOldData)

void ATimerGate::RemoveTime(float Time)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.TimerGate.RemoveTime");

	ATimerGate_RemoveTime_Params params;
	params.Time = Time;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.TimerGate.AddTime
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          Time                           (Parm, ZeroConstructor, IsPlainOldData)

void ATimerGate::AddTime(float Time)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.TimerGate.AddTime");

	ATimerGate_AddTime_Params params;
	params.Time = Time;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.GateFactory.GetGate
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<EGateType>         GateType                       (Parm, ZeroConstructor, IsPlainOldData)
// class AGate*                   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AGate* AGateFactory::GetGate(TEnumAsByte<EGateType> GateType)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.GateFactory.GetGate");

	AGateFactory_GetGate_Params params;
	params.GateType = GateType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.GeneratorDrivenActor.SetSpawnedObject
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AGenerator*              Generator                      (Parm, ZeroConstructor, IsPlainOldData)

void AGeneratorDrivenActor::SetSpawnedObject(class AGenerator* Generator)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.GeneratorDrivenActor.SetSpawnedObject");

	AGeneratorDrivenActor_SetSpawnedObject_Params params;
	params.Generator = Generator;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.GeneratorDrivenActor.OnInitGeneratorDrivenActor
// (Event, Public, BlueprintEvent)
// Parameters:
// class AGenerator*              Generator                      (Parm, ZeroConstructor, IsPlainOldData)

void AGeneratorDrivenActor::OnInitGeneratorDrivenActor(class AGenerator* Generator)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.GeneratorDrivenActor.OnInitGeneratorDrivenActor");

	AGeneratorDrivenActor_OnInitGeneratorDrivenActor_Params params;
	params.Generator = Generator;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.GeneratorDrivenActor.OnActivateGeneratorDrivenActor
// (Event, Public, BlueprintEvent)

void AGeneratorDrivenActor::OnActivateGeneratorDrivenActor()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.GeneratorDrivenActor.OnActivateGeneratorDrivenActor");

	AGeneratorDrivenActor_OnActivateGeneratorDrivenActor_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.GeneratorDrivenActor.Multicast_ActivationChecked
// (Net, NetReliable, Native, Event, NetMulticast, Protected)
// Parameters:
// bool                           activated                      (Parm, ZeroConstructor, IsPlainOldData)

void AGeneratorDrivenActor::Multicast_ActivationChecked(bool activated)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.GeneratorDrivenActor.Multicast_ActivationChecked");

	AGeneratorDrivenActor_Multicast_ActivationChecked_Params params;
	params.activated = activated;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.CrowBomb.TriggerTakeOff
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                 triggerLocation                (Parm, ZeroConstructor, IsPlainOldData)

void ACrowBomb::TriggerTakeOff(const struct FVector& triggerLocation)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CrowBomb.TriggerTakeOff");

	ACrowBomb_TriggerTakeOff_Params params;
	params.triggerLocation = triggerLocation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.CrowBomb.TriggerLand
// (Final, Native, Public, BlueprintCallable)

void ACrowBomb::TriggerLand()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CrowBomb.TriggerLand");

	ACrowBomb_TriggerLand_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.HookAnalyticsBlueprintLibrary.IncrementHookSpawned
// (Final, Native, Static, Public, BlueprintCallable)

void UHookAnalyticsBlueprintLibrary::STATIC_IncrementHookSpawned()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.HookAnalyticsBlueprintLibrary.IncrementHookSpawned");

	UHookAnalyticsBlueprintLibrary_IncrementHookSpawned_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.Generator.SetShowRegressionOutline
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                           showRegressionOutline          (Parm, ZeroConstructor, IsPlainOldData)

void AGenerator::SetShowRegressionOutline(bool showRegressionOutline)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.Generator.SetShowRegressionOutline");

	AGenerator_SetShowRegressionOutline_Params params;
	params.showRegressionOutline = showRegressionOutline;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.Generator.SetGeneratorRegressionOutline
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                           shouldShowRegressionOutline    (Parm, ZeroConstructor, IsPlainOldData)

void AGenerator::SetGeneratorRegressionOutline(bool shouldShowRegressionOutline)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.Generator.SetGeneratorRegressionOutline");

	AGenerator_SetGeneratorRegressionOutline_Params params;
	params.shouldShowRegressionOutline = shouldShowRegressionOutline;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.Generator.SetComplete
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                           complete                       (Parm, ZeroConstructor, IsPlainOldData)

void AGenerator::SetComplete(bool complete)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.Generator.SetComplete");

	AGenerator_SetComplete_Params params;
	params.complete = complete;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.Generator.OnEscapeDoorActivated
// (Event, Protected, BlueprintEvent)

void AGenerator::OnEscapeDoorActivated()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.Generator.OnEscapeDoorActivated");

	AGenerator_OnEscapeDoorActivated_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.Generator.GetMapActorComponent
// (Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class UMapActorComponent*      ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UMapActorComponent* AGenerator::GetMapActorComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.Generator.GetMapActorComponent");

	AGenerator_GetMapActorComponent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.Generator.GetIsDamaged
// (Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AGenerator::GetIsDamaged()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.Generator.GetIsDamaged");

	AGenerator_GetIsDamaged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.Generator.BroadcastIsDamagedChangedEvent
// (Final, Native, Protected, BlueprintCallable)

void AGenerator::BroadcastIsDamagedChangedEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.Generator.BroadcastIsDamagedChangedEvent");

	AGenerator_BroadcastIsDamagedChangedEvent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.Generator.BroadcastGeneratorRepairedBySurvivor
// (Final, Native, Protected, BlueprintCallable, Const)
// Parameters:
// class ADBDPlayer*              repairingSurvivor              (Parm, ZeroConstructor, IsPlainOldData)

void AGenerator::BroadcastGeneratorRepairedBySurvivor(class ADBDPlayer* repairingSurvivor)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.Generator.BroadcastGeneratorRepairedBySurvivor");

	AGenerator_BroadcastGeneratorRepairedBySurvivor_Params params;
	params.repairingSurvivor = repairingSurvivor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.Generator.BroadcastGeneratorRepaired
// (Final, Native, Protected, BlueprintCallable, Const)

void AGenerator::BroadcastGeneratorRepaired()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.Generator.BroadcastGeneratorRepaired");

	AGenerator_BroadcastGeneratorRepaired_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.EscapeDoor.OnRep_Activated
// (Final, Native, Private)
// Parameters:
// bool                           oldActivated                   (Parm, ZeroConstructor, IsPlainOldData)

void AEscapeDoor::OnRep_Activated(bool oldActivated)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.EscapeDoor.OnRep_Activated");

	AEscapeDoor_OnRep_Activated_Params params;
	params.oldActivated = oldActivated;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.EscapeDoor.OnExitActivationChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                           activated                      (Parm, ZeroConstructor, IsPlainOldData)

void AEscapeDoor::OnExitActivationChanged(bool activated)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.EscapeDoor.OnExitActivationChanged");

	AEscapeDoor_OnExitActivationChanged_Params params;
	params.activated = activated;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.Locker.UpdateDelayedDoorOpen
// (Event, Protected, BlueprintEvent)

void ALocker::UpdateDelayedDoorOpen()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.Locker.UpdateDelayedDoorOpen");

	ALocker_UpdateDelayedDoorOpen_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.Locker.IsSurvivorInLockerDead
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ALocker::IsSurvivorInLockerDead()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.Locker.IsSurvivorInLockerDead");

	ALocker_IsSurvivorInLockerDead_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.MeatHook.OnTickStruggle
// (Event, Protected, BlueprintEvent)
// Parameters:
// float                          DeltaTime                      (Parm, ZeroConstructor, IsPlainOldData)

void AMeatHook::OnTickStruggle(float DeltaTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.MeatHook.OnTickStruggle");

	AMeatHook_OnTickStruggle_Params params;
	params.DeltaTime = DeltaTime;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.MeatHook.OnStruggleExit
// (Event, Protected, BlueprintEvent)

void AMeatHook::OnStruggleExit()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.MeatHook.OnStruggleExit");

	AMeatHook_OnStruggleExit_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.MeatHook.OnStruggleEnter
// (Event, Protected, BlueprintEvent)

void AMeatHook::OnStruggleEnter()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.MeatHook.OnStruggleEnter");

	AMeatHook_OnStruggleEnter_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.MeatHook.OnSacrificeOut
// (Event, Protected, BlueprintEvent)

void AMeatHook::OnSacrificeOut()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.MeatHook.OnSacrificeOut");

	AMeatHook_OnSacrificeOut_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.MeatHook.OnSacrificeIn
// (Event, Protected, BlueprintEvent)

void AMeatHook::OnSacrificeIn()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.MeatHook.OnSacrificeIn");

	AMeatHook_OnSacrificeIn_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.MeatHook.OnReactionIn
// (Event, Protected, BlueprintEvent)

void AMeatHook::OnReactionIn()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.MeatHook.OnReactionIn");

	AMeatHook_OnReactionIn_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.MeatHook.OnReaction
// (Event, Protected, BlueprintEvent)

void AMeatHook::OnReaction()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.MeatHook.OnReaction");

	AMeatHook_OnReaction_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.MeatHook.OnHookingExit
// (Event, Protected, BlueprintEvent)

void AMeatHook::OnHookingExit()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.MeatHook.OnHookingExit");

	AMeatHook_OnHookingExit_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.MeatHook.OnHookingEnter
// (Event, Protected, BlueprintEvent)

void AMeatHook::OnHookingEnter()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.MeatHook.OnHookingEnter");

	AMeatHook_OnHookingEnter_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.MeatHook.OnHookedSurvivorAttacked
// (Final, Native, Protected)

void AMeatHook::OnHookedSurvivorAttacked()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.MeatHook.OnHookedSurvivorAttacked");

	AMeatHook_OnHookedSurvivorAttacked_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.MeatHook.OnHookedIdle
// (Event, Protected, BlueprintEvent)

void AMeatHook::OnHookedIdle()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.MeatHook.OnHookedIdle");

	AMeatHook_OnHookedIdle_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.MeatHook.OnHookedExit
// (Event, Protected, BlueprintEvent)

void AMeatHook::OnHookedExit()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.MeatHook.OnHookedExit");

	AMeatHook_OnHookedExit_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.MeatHook.OnHookedEnter
// (Event, Protected, BlueprintEvent)

void AMeatHook::OnHookedEnter()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.MeatHook.OnHookedEnter");

	AMeatHook_OnHookedEnter_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.MeatHook.OnEscapeAttemptSuccessful
// (Event, Protected, BlueprintEvent)
// Parameters:
// class ACamperPlayer*           survivor                       (Parm, ZeroConstructor, IsPlainOldData)

void AMeatHook::OnEscapeAttemptSuccessful(class ACamperPlayer* survivor)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.MeatHook.OnEscapeAttemptSuccessful");

	AMeatHook_OnEscapeAttemptSuccessful_Params params;
	params.survivor = survivor;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.MeatHook.OnAutoRepair
// (Event, Protected, BlueprintEvent)

void AMeatHook::OnAutoRepair()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.MeatHook.OnAutoRepair");

	AMeatHook_OnAutoRepair_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.MeatHook.Multicast_SetIsSacrificed
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
// Parameters:
// bool                           Value                          (Parm, ZeroConstructor, IsPlainOldData)

void AMeatHook::Multicast_SetIsSacrificed(bool Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.MeatHook.Multicast_SetIsSacrificed");

	AMeatHook_Multicast_SetIsSacrificed_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.MeatHook.Multicast_SetIsSabotaged
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
// Parameters:
// bool                           Value                          (Parm, ZeroConstructor, IsPlainOldData)

void AMeatHook::Multicast_SetIsSabotaged(bool Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.MeatHook.Multicast_SetIsSabotaged");

	AMeatHook_Multicast_SetIsSabotaged_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.MeatHook.Multicast_SetHookedSurvivor
// (Net, NetReliable, Native, Event, NetMulticast, Protected)
// Parameters:
// class ACamperPlayer*           survivor                       (Parm, ZeroConstructor, IsPlainOldData)

void AMeatHook::Multicast_SetHookedSurvivor(class ACamperPlayer* survivor)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.MeatHook.Multicast_SetHookedSurvivor");

	AMeatHook_Multicast_SetHookedSurvivor_Params params;
	params.survivor = survivor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.MeatHook.Multicast_EscapeAttemptResult
// (Net, NetReliable, Native, Event, NetMulticast, Protected)
// Parameters:
// bool                           result                         (Parm, ZeroConstructor, IsPlainOldData)

void AMeatHook::Multicast_EscapeAttemptResult(bool result)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.MeatHook.Multicast_EscapeAttemptResult");

	AMeatHook_Multicast_EscapeAttemptResult_Params params;
	params.result = result;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.MeatHook.GetMontagePlayer
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UMontagePlayer*          ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UMontagePlayer* AMeatHook::GetMontagePlayer()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.MeatHook.GetMontagePlayer");

	AMeatHook_GetMontagePlayer_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.MeatHook.GetMapActorNative
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class UMapActorComponent*      ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UMapActorComponent* AMeatHook::GetMapActorNative()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.MeatHook.GetMapActorNative");

	AMeatHook_GetMapActorNative_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.MeatHook.GetIsSacrificed
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AMeatHook::GetIsSacrificed()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.MeatHook.GetIsSacrificed");

	AMeatHook_GetIsSacrificed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.MeatHook.GetIsSabotaged
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AMeatHook::GetIsSabotaged()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.MeatHook.GetIsSabotaged");

	AMeatHook_GetIsSabotaged_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.MeatHook.GetIsBroken
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AMeatHook::GetIsBroken()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.MeatHook.GetIsBroken");

	AMeatHook_GetIsBroken_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.MeatHook.GetHookedSurvivor
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ACamperPlayer*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ACamperPlayer* AMeatHook::GetHookedSurvivor()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.MeatHook.GetHookedSurvivor");

	AMeatHook_GetHookedSurvivor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.MeatHook.CanUnhookSurvivor
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ACamperPlayer*           survivor                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AMeatHook::CanUnhookSurvivor(class ACamperPlayer* survivor)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.MeatHook.CanUnhookSurvivor");

	AMeatHook_CanUnhookSurvivor_Params params;
	params.survivor = survivor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.MeatHook.CanSurvivorStruggle
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ACamperPlayer*           survivor                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AMeatHook::CanSurvivorStruggle(class ACamperPlayer* survivor)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.MeatHook.CanSurvivorStruggle");

	AMeatHook_CanSurvivorStruggle_Params params;
	params.survivor = survivor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.MeatHook.CanSurvivorAttemptEscape
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ACamperPlayer*           survivor                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AMeatHook::CanSurvivorAttemptEscape(class ACamperPlayer* survivor)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.MeatHook.CanSurvivorAttemptEscape");

	AMeatHook_CanSurvivorAttemptEscape_Params params;
	params.survivor = survivor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.MeatHook.CanHookSurvivor
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AMeatHook::CanHookSurvivor()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.MeatHook.CanHookSurvivor");

	AMeatHook_CanHookSurvivor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.MeatHook.CanBeSabotaged
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AMeatHook::CanBeSabotaged()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.MeatHook.CanBeSabotaged");

	AMeatHook_CanBeSabotaged_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.MeatHook.Authority_SignalUnhookingEnter
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)

void AMeatHook::Authority_SignalUnhookingEnter()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.MeatHook.Authority_SignalUnhookingEnter");

	AMeatHook_Authority_SignalUnhookingEnter_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.MeatHook.Authority_SignalUnhookingCharged
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)

void AMeatHook::Authority_SignalUnhookingCharged()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.MeatHook.Authority_SignalUnhookingCharged");

	AMeatHook_Authority_SignalUnhookingCharged_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.MeatHook.Authority_SignalUnhookingAborted
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)

void AMeatHook::Authority_SignalUnhookingAborted()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.MeatHook.Authority_SignalUnhookingAborted");

	AMeatHook_Authority_SignalUnhookingAborted_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.MeatHook.Authority_SignalSurvivorAttemptingEscapeCharged
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)

void AMeatHook::Authority_SignalSurvivorAttemptingEscapeCharged()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.MeatHook.Authority_SignalSurvivorAttemptingEscapeCharged");

	AMeatHook_Authority_SignalSurvivorAttemptingEscapeCharged_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.MeatHook.Authority_SignalSurvivorAttemptingEscapeAborted
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)

void AMeatHook::Authority_SignalSurvivorAttemptingEscapeAborted()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.MeatHook.Authority_SignalSurvivorAttemptingEscapeAborted");

	AMeatHook_Authority_SignalSurvivorAttemptingEscapeAborted_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.MeatHook.Authority_SignalSurvivorAttemptingEscape
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)

void AMeatHook::Authority_SignalSurvivorAttemptingEscape()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.MeatHook.Authority_SignalSurvivorAttemptingEscape");

	AMeatHook_Authority_SignalSurvivorAttemptingEscape_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.MeatHook.Authority_SetIsSacrificed
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// bool                           Value                          (Parm, ZeroConstructor, IsPlainOldData)

void AMeatHook::Authority_SetIsSacrificed(bool Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.MeatHook.Authority_SetIsSacrificed");

	AMeatHook_Authority_SetIsSacrificed_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.MeatHook.Authority_SetIsSabotaged
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// bool                           Value                          (Parm, ZeroConstructor, IsPlainOldData)

void AMeatHook::Authority_SetIsSabotaged(bool Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.MeatHook.Authority_SetIsSabotaged");

	AMeatHook_Authority_SetIsSabotaged_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.MeatHook.Authority_SetHookedSurvivor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ACamperPlayer*           survivor                       (Parm, ZeroConstructor, IsPlainOldData)

void AMeatHook::Authority_SetHookedSurvivor(class ACamperPlayer* survivor)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.MeatHook.Authority_SetHookedSurvivor");

	AMeatHook_Authority_SetHookedSurvivor_Params params;
	params.survivor = survivor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.Pallet.UpdateIllusionaryPallet
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class USceneComponent*         IllusionaryPallet              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class USceneComponent*         SKPlankbool                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void APallet::UpdateIllusionaryPallet(class USceneComponent* IllusionaryPallet, class USceneComponent* SKPlankbool)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.Pallet.UpdateIllusionaryPallet");

	APallet_UpdateIllusionaryPallet_Params params;
	params.IllusionaryPallet = IllusionaryPallet;
	params.SKPlankbool = SKPlankbool;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.Pallet.ResetPallet
// (Event, Public, BlueprintEvent)

void APallet::ResetPallet()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.Pallet.ResetPallet");

	APallet_ResetPallet_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.Pallet.Multicast_ResetPallet
// (Net, NetReliable, Native, Event, NetMulticast, Public)

void APallet::Multicast_ResetPallet()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.Pallet.Multicast_ResetPallet");

	APallet_Multicast_ResetPallet_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.ReverseBearTrap.StopMontage
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void AReverseBearTrap::StopMontage()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.ReverseBearTrap.StopMontage");

	AReverseBearTrap_StopMontage_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.ReverseBearTrap.StopExecutionTimer
// (Final, Native, Public, BlueprintCallable)

void AReverseBearTrap::StopExecutionTimer()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.ReverseBearTrap.StopExecutionTimer");

	AReverseBearTrap_StopExecutionTimer_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.ReverseBearTrap.ShouldUpdateExecutionTimer
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AReverseBearTrap::ShouldUpdateExecutionTimer()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.ReverseBearTrap.ShouldUpdateExecutionTimer");

	AReverseBearTrap_ShouldUpdateExecutionTimer_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.ReverseBearTrap.SetVisible
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                           Visible                        (Parm, ZeroConstructor, IsPlainOldData)

void AReverseBearTrap::SetVisible(bool Visible)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.ReverseBearTrap.SetVisible");

	AReverseBearTrap_SetVisible_Params params;
	params.Visible = Visible;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.ReverseBearTrap.SetKeyID
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            keyID                          (Parm, ZeroConstructor, IsPlainOldData)

void AReverseBearTrap::SetKeyID(int keyID)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.ReverseBearTrap.SetKeyID");

	AReverseBearTrap_SetKeyID_Params params;
	params.keyID = keyID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.ReverseBearTrap.ResetExecutionTimer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          Time                           (Parm, ZeroConstructor, IsPlainOldData)

void AReverseBearTrap::ResetExecutionTimer(float Time)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.ReverseBearTrap.ResetExecutionTimer");

	AReverseBearTrap_ResetExecutionTimer_Params params;
	params.Time = Time;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.ReverseBearTrap.OnWarningLevelChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// int                            previousWarningLevel           (Parm, ZeroConstructor, IsPlainOldData)
// int                            currentWarningLevel            (Parm, ZeroConstructor, IsPlainOldData)

void AReverseBearTrap::OnWarningLevelChanged(int previousWarningLevel, int currentWarningLevel)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.ReverseBearTrap.OnWarningLevelChanged");

	AReverseBearTrap_OnWarningLevelChanged_Params params;
	params.previousWarningLevel = previousWarningLevel;
	params.currentWarningLevel = currentWarningLevel;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.ReverseBearTrap.OnExitWarningZone
// (Final, Native, Public, BlueprintCallable)

void AReverseBearTrap::OnExitWarningZone()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.ReverseBearTrap.OnExitWarningZone");

	AReverseBearTrap_OnExitWarningZone_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.ReverseBearTrap.OnEnterWarningZone
// (Final, Native, Public, BlueprintCallable)

void AReverseBearTrap::OnEnterWarningZone()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.ReverseBearTrap.OnEnterWarningZone");

	AReverseBearTrap_OnEnterWarningZone_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.ReverseBearTrap.OnDetachSurvivor
// (Event, Protected, BlueprintEvent)
// Parameters:
// class ACamperPlayer*           survivor                       (Parm, ZeroConstructor, IsPlainOldData)

void AReverseBearTrap::OnDetachSurvivor(class ACamperPlayer* survivor)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.ReverseBearTrap.OnDetachSurvivor");

	AReverseBearTrap_OnDetachSurvivor_Params params;
	params.survivor = survivor;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.ReverseBearTrap.OnAttachSurvivor
// (Event, Protected, BlueprintEvent)
// Parameters:
// class ACamperPlayer*           survivor                       (Parm, ZeroConstructor, IsPlainOldData)

void AReverseBearTrap::OnAttachSurvivor(class ACamperPlayer* survivor)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.ReverseBearTrap.OnAttachSurvivor");

	AReverseBearTrap_OnAttachSurvivor_Params params;
	params.survivor = survivor;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.ReverseBearTrap.NotifyDetachStarted
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ACamperPlayer*           survivor                       (Parm, ZeroConstructor, IsPlainOldData)

void AReverseBearTrap::NotifyDetachStarted(class ACamperPlayer* survivor)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.ReverseBearTrap.NotifyDetachStarted");

	AReverseBearTrap_NotifyDetachStarted_Params params;
	params.survivor = survivor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.ReverseBearTrap.IsInWarningZone
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AReverseBearTrap::IsInWarningZone()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.ReverseBearTrap.IsInWarningZone");

	AReverseBearTrap_IsInWarningZone_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.ReverseBearTrap.IsExecutionTimerDone
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AReverseBearTrap::IsExecutionTimerDone()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.ReverseBearTrap.IsExecutionTimerDone");

	AReverseBearTrap_IsExecutionTimerDone_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.ReverseBearTrap.IsExecutionTimerActive
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AReverseBearTrap::IsExecutionTimerActive()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.ReverseBearTrap.IsExecutionTimerActive");

	AReverseBearTrap_IsExecutionTimerActive_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.ReverseBearTrap.HasDetachStarted
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AReverseBearTrap::HasDetachStarted()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.ReverseBearTrap.HasDetachStarted");

	AReverseBearTrap_HasDetachStarted_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.ReverseBearTrap.GetWarningLevel
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AReverseBearTrap::GetWarningLevel()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.ReverseBearTrap.GetWarningLevel");

	AReverseBearTrap_GetWarningLevel_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.ReverseBearTrap.GetKeyID
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AReverseBearTrap::GetKeyID()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.ReverseBearTrap.GetKeyID");

	AReverseBearTrap_GetKeyID_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.ReverseBearTrap.GetExecutionTimerTimeLeft
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AReverseBearTrap::GetExecutionTimerTimeLeft()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.ReverseBearTrap.GetExecutionTimerTimeLeft");

	AReverseBearTrap_GetExecutionTimerTimeLeft_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.ReverseBearTrap.GetExecutionTimerPercentTimeElapsed
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AReverseBearTrap::GetExecutionTimerPercentTimeElapsed()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.ReverseBearTrap.GetExecutionTimerPercentTimeElapsed");

	AReverseBearTrap_GetExecutionTimerPercentTimeElapsed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.ReverseBearTrap.GetAttachedSurvivor
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ACamperPlayer*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ACamperPlayer* AReverseBearTrap::GetAttachedSurvivor()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.ReverseBearTrap.GetAttachedSurvivor");

	AReverseBearTrap_GetAttachedSurvivor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.ReverseBearTrap.DetachSurvivor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ACamperPlayer*           survivor                       (Parm, ZeroConstructor, IsPlainOldData)

void AReverseBearTrap::DetachSurvivor(class ACamperPlayer* survivor)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.ReverseBearTrap.DetachSurvivor");

	AReverseBearTrap_DetachSurvivor_Params params;
	params.survivor = survivor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.ReverseBearTrap.CanExecute
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AReverseBearTrap::CanExecute()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.ReverseBearTrap.CanExecute");

	AReverseBearTrap_CanExecute_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.ReverseBearTrap.AttachSurvivor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ACamperPlayer*           survivor                       (Parm, ZeroConstructor, IsPlainOldData)

void AReverseBearTrap::AttachSurvivor(class ACamperPlayer* survivor)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.ReverseBearTrap.AttachSurvivor");

	AReverseBearTrap_AttachSurvivor_Params params;
	params.survivor = survivor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.Searchable.SpawnObject
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ADBDPlayer*              Player                         (Parm, ZeroConstructor, IsPlainOldData)
// class ACollectable*            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ACollectable* ASearchable::SpawnObject(class ADBDPlayer* Player)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.Searchable.SpawnObject");

	ASearchable_SpawnObject_Params params;
	params.Player = Player;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.Totem.OnBoundToHex
// (Event, Public, BlueprintEvent)

void ATotem::OnBoundToHex()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.Totem.OnBoundToHex");

	ATotem_OnBoundToHex_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.Totem.Multicast_BindToHex
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// struct FName                   hexPerkID                      (Parm, ZeroConstructor, IsPlainOldData)

void ATotem::Multicast_BindToHex(const struct FName& hexPerkID)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.Totem.Multicast_BindToHex");

	ATotem_Multicast_BindToHex_Params params;
	params.hexPerkID = hexPerkID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.Totem.HasHex
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ATotem::HasHex()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.Totem.HasHex");

	ATotem_HasHex_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.InteractionDefinition.OnInterruptorUpdateStart
// (Event, Public, BlueprintEvent)
// Parameters:
// class UInterruptionDefinition* currentInterruption            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class ADBDPlayer*              interruptor                    (Parm, ZeroConstructor, IsPlainOldData)
// class ADBDPlayer*              interruptee                    (Parm, ZeroConstructor, IsPlainOldData)

void UInteractionDefinition::OnInterruptorUpdateStart(class UInterruptionDefinition* currentInterruption, class ADBDPlayer* interruptor, class ADBDPlayer* interruptee)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.InteractionDefinition.OnInterruptorUpdateStart");

	UInteractionDefinition_OnInterruptorUpdateStart_Params params;
	params.currentInterruption = currentInterruption;
	params.interruptor = interruptor;
	params.interruptee = interruptee;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.InteractionDefinition.OnInteractionUpdateTick
// (Event, Public, BlueprintEvent)
// Parameters:
// class ADBDPlayer*              Player                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          DeltaTime                      (Parm, ZeroConstructor, IsPlainOldData)

void UInteractionDefinition::OnInteractionUpdateTick(class ADBDPlayer* Player, float DeltaTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.InteractionDefinition.OnInteractionUpdateTick");

	UInteractionDefinition_OnInteractionUpdateTick_Params params;
	params.Player = Player;
	params.DeltaTime = DeltaTime;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.InteractionDefinition.OnInteractionUpdateStart
// (Event, Public, BlueprintEvent)
// Parameters:
// class ADBDPlayer*              Player                         (Parm, ZeroConstructor, IsPlainOldData)

void UInteractionDefinition::OnInteractionUpdateStart(class ADBDPlayer* Player)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.InteractionDefinition.OnInteractionUpdateStart");

	UInteractionDefinition_OnInteractionUpdateStart_Params params;
	params.Player = Player;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.InteractionDefinition.OnInteractionUpdateMontageReachedMiddle
// (Event, Public, BlueprintEvent)
// Parameters:
// class ADBDPlayer*              Player                         (Parm, ZeroConstructor, IsPlainOldData)

void UInteractionDefinition::OnInteractionUpdateMontageReachedMiddle(class ADBDPlayer* Player)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.InteractionDefinition.OnInteractionUpdateMontageReachedMiddle");

	UInteractionDefinition_OnInteractionUpdateMontageReachedMiddle_Params params;
	params.Player = Player;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.InteractionDefinition.OnInteractionUpdateEnd
// (Event, Public, BlueprintEvent)
// Parameters:
// class ADBDPlayer*              Player                         (Parm, ZeroConstructor, IsPlainOldData)

void UInteractionDefinition::OnInteractionUpdateEnd(class ADBDPlayer* Player)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.InteractionDefinition.OnInteractionUpdateEnd");

	UInteractionDefinition_OnInteractionUpdateEnd_Params params;
	params.Player = Player;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.InteractionDefinition.OnInteractionInterruptStarted
// (Event, Public, BlueprintEvent)
// Parameters:
// class ADBDPlayer*              Player                         (Parm, ZeroConstructor, IsPlainOldData)
// class UInterruptionDefinition* currentInterruption            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class ADBDPlayer*              interruptingPlayer             (Parm, ZeroConstructor, IsPlainOldData)

void UInteractionDefinition::OnInteractionInterruptStarted(class ADBDPlayer* Player, class UInterruptionDefinition* currentInterruption, class ADBDPlayer* interruptingPlayer)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.InteractionDefinition.OnInteractionInterruptStarted");

	UInteractionDefinition_OnInteractionInterruptStarted_Params params;
	params.Player = Player;
	params.currentInterruption = currentInterruption;
	params.interruptingPlayer = interruptingPlayer;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.InteractionDefinition.OnInteractionInterruptStart
// (Event, Public, BlueprintEvent)
// Parameters:
// class ADBDPlayer*              Player                         (Parm, ZeroConstructor, IsPlainOldData)
// class UInterruptionDefinition* currentInterruption            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class ADBDPlayer*              interruptingPlayer             (Parm, ZeroConstructor, IsPlainOldData)

void UInteractionDefinition::OnInteractionInterruptStart(class ADBDPlayer* Player, class UInterruptionDefinition* currentInterruption, class ADBDPlayer* interruptingPlayer)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.InteractionDefinition.OnInteractionInterruptStart");

	UInteractionDefinition_OnInteractionInterruptStart_Params params;
	params.Player = Player;
	params.currentInterruption = currentInterruption;
	params.interruptingPlayer = interruptingPlayer;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.InteractionDefinition.OnInteractionInterruptEnd
// (Event, Public, BlueprintEvent)
// Parameters:
// class ADBDPlayer*              Player                         (Parm, ZeroConstructor, IsPlainOldData)
// class UInterruptionDefinition* currentInterruption            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class ADBDPlayer*              interruptingPlayer             (Parm, ZeroConstructor, IsPlainOldData)

void UInteractionDefinition::OnInteractionInterruptEnd(class ADBDPlayer* Player, class UInterruptionDefinition* currentInterruption, class ADBDPlayer* interruptingPlayer)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.InteractionDefinition.OnInteractionInterruptEnd");

	UInteractionDefinition_OnInteractionInterruptEnd_Params params;
	params.Player = Player;
	params.currentInterruption = currentInterruption;
	params.interruptingPlayer = interruptingPlayer;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.InteractionDefinition.OnInteractionInit
// (Event, Public, BlueprintEvent)
// Parameters:
// class ADBDPlayer*              Player                         (Parm, ZeroConstructor, IsPlainOldData)

void UInteractionDefinition::OnInteractionInit(class ADBDPlayer* Player)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.InteractionDefinition.OnInteractionInit");

	UInteractionDefinition_OnInteractionInit_Params params;
	params.Player = Player;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.InteractionDefinition.OnInteractionFinished
// (Event, Public, BlueprintEvent)
// Parameters:
// class ADBDPlayer*              Player                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           hasInteractionStarted          (Parm, ZeroConstructor, IsPlainOldData)

void UInteractionDefinition::OnInteractionFinished(class ADBDPlayer* Player, bool hasInteractionStarted)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.InteractionDefinition.OnInteractionFinished");

	UInteractionDefinition_OnInteractionFinished_Params params;
	params.Player = Player;
	params.hasInteractionStarted = hasInteractionStarted;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.InteractionDefinition.OnInteractionExitStart
// (Event, Public, BlueprintEvent)
// Parameters:
// class ADBDPlayer*              Player                         (Parm, ZeroConstructor, IsPlainOldData)

void UInteractionDefinition::OnInteractionExitStart(class ADBDPlayer* Player)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.InteractionDefinition.OnInteractionExitStart");

	UInteractionDefinition_OnInteractionExitStart_Params params;
	params.Player = Player;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.InteractionDefinition.OnInteractionExitEnd
// (Event, Public, BlueprintEvent)
// Parameters:
// class ADBDPlayer*              Player                         (Parm, ZeroConstructor, IsPlainOldData)

void UInteractionDefinition::OnInteractionExitEnd(class ADBDPlayer* Player)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.InteractionDefinition.OnInteractionExitEnd");

	UInteractionDefinition_OnInteractionExitEnd_Params params;
	params.Player = Player;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.InteractionDefinition.OnInteractionEnterTick
// (Event, Public, BlueprintEvent)
// Parameters:
// class ADBDPlayer*              Player                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          DeltaTime                      (Parm, ZeroConstructor, IsPlainOldData)

void UInteractionDefinition::OnInteractionEnterTick(class ADBDPlayer* Player, float DeltaTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.InteractionDefinition.OnInteractionEnterTick");

	UInteractionDefinition_OnInteractionEnterTick_Params params;
	params.Player = Player;
	params.DeltaTime = DeltaTime;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.InteractionDefinition.OnInteractionEnterStart
// (Event, Public, BlueprintEvent)
// Parameters:
// class ADBDPlayer*              Player                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          actualSnapTime                 (Parm, ZeroConstructor, IsPlainOldData)

void UInteractionDefinition::OnInteractionEnterStart(class ADBDPlayer* Player, float actualSnapTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.InteractionDefinition.OnInteractionEnterStart");

	UInteractionDefinition_OnInteractionEnterStart_Params params;
	params.Player = Player;
	params.actualSnapTime = actualSnapTime;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.InteractionDefinition.OnInteractionEnterFailed
// (Event, Public, BlueprintEvent)
// Parameters:
// class ADBDPlayer*              Player                         (Parm, ZeroConstructor, IsPlainOldData)

void UInteractionDefinition::OnInteractionEnterFailed(class ADBDPlayer* Player)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.InteractionDefinition.OnInteractionEnterFailed");

	UInteractionDefinition_OnInteractionEnterFailed_Params params;
	params.Player = Player;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.InteractionDefinition.OnInteractionEnterEnd
// (Event, Public, BlueprintEvent)
// Parameters:
// class ADBDPlayer*              Player                         (Parm, ZeroConstructor, IsPlainOldData)

void UInteractionDefinition::OnInteractionEnterEnd(class ADBDPlayer* Player)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.InteractionDefinition.OnInteractionEnterEnd");

	UInteractionDefinition_OnInteractionEnterEnd_Params params;
	params.Player = Player;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.InteractionDefinition.OnInteractionCancelled
// (Event, Public, BlueprintEvent)
// Parameters:
// class ADBDPlayer*              Player                         (Parm, ZeroConstructor, IsPlainOldData)

void UInteractionDefinition::OnInteractionCancelled(class ADBDPlayer* Player)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.InteractionDefinition.OnInteractionCancelled");

	UInteractionDefinition_OnInteractionCancelled_Params params;
	params.Player = Player;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.InteractionDefinition.OnInteractionAnimNotifyEvent
// (Event, Public, BlueprintEvent)
// Parameters:
// struct FName                   NotifyId                       (Parm, ZeroConstructor, IsPlainOldData)
// class ADBDPlayer*              Player                         (Parm, ZeroConstructor, IsPlainOldData)

void UInteractionDefinition::OnInteractionAnimNotifyEvent(const struct FName& NotifyId, class ADBDPlayer* Player)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.InteractionDefinition.OnInteractionAnimNotifyEvent");

	UInteractionDefinition_OnInteractionAnimNotifyEvent_Params params;
	params.NotifyId = NotifyId;
	params.Player = Player;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.InteractionDefinition.IsSupportedCharacterType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ADBDPlayer*              Player                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UInteractionDefinition::IsSupportedCharacterType(class ADBDPlayer* Player)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.InteractionDefinition.IsSupportedCharacterType");

	UInteractionDefinition_IsSupportedCharacterType_Params params;
	params.Player = Player;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.InteractionDefinition.IsInterruptionPossible
// (Native, Event, Protected, BlueprintEvent, Const)
// Parameters:
// class ADBDPlayer*              interruptor                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// class ADBDPlayer*              interruptee                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// class UInterruptionDefinition* interruption                   (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UInteractionDefinition::IsInterruptionPossible(class ADBDPlayer* interruptor, class ADBDPlayer* interruptee, class UInterruptionDefinition* interruption)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.InteractionDefinition.IsInterruptionPossible");

	UInteractionDefinition_IsInterruptionPossible_Params params;
	params.interruptor = interruptor;
	params.interruptee = interruptee;
	params.interruption = interruption;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.InteractionDefinition.IsInteractionPossibleClient
// (Native, Event, Protected, BlueprintEvent, Const)
// Parameters:
// class ADBDPlayer*              Player                         (Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<EInputInteractionType> InteractionType                (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UInteractionDefinition::IsInteractionPossibleClient(class ADBDPlayer* Player, TEnumAsByte<EInputInteractionType> InteractionType)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.InteractionDefinition.IsInteractionPossibleClient");

	UInteractionDefinition_IsInteractionPossibleClient_Params params;
	params.Player = Player;
	params.InteractionType = InteractionType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.InteractionDefinition.IsInteractionPossibleBP
// (Native, Event, Protected, BlueprintEvent, Const)
// Parameters:
// class ADBDPlayer*              Player                         (Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<EInputInteractionType> InteractionType                (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UInteractionDefinition::IsInteractionPossibleBP(class ADBDPlayer* Player, TEnumAsByte<EInputInteractionType> InteractionType)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.InteractionDefinition.IsInteractionPossibleBP");

	UInteractionDefinition_IsInteractionPossibleBP_Params params;
	params.Player = Player;
	params.InteractionType = InteractionType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.InteractionDefinition.IsInteractionDone
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// class ADBDPlayer*              Player                         (Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<EInputInteractionType> InteractionType                (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UInteractionDefinition::IsInteractionDone(class ADBDPlayer* Player, TEnumAsByte<EInputInteractionType> InteractionType)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.InteractionDefinition.IsInteractionDone");

	UInteractionDefinition_IsInteractionDone_Params params;
	params.Player = Player;
	params.InteractionType = InteractionType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.InteractionDefinition.IsInputPressed
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ADBDPlayer*              Player                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UInteractionDefinition::IsInputPressed(class ADBDPlayer* Player)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.InteractionDefinition.IsInputPressed");

	UInteractionDefinition_IsInputPressed_Params params;
	params.Player = Player;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.InteractionDefinition.IsCharacterFacingInteractorDirection
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ADBDPlayer*              Player                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UInteractionDefinition::IsCharacterFacingInteractorDirection(class ADBDPlayer* Player)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.InteractionDefinition.IsCharacterFacingInteractorDirection");

	UInteractionDefinition_IsCharacterFacingInteractorDirection_Params params;
	params.Player = Player;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.InteractionDefinition.IsCancelable
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// class ADBDPlayer*              Player                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UInteractionDefinition::IsCancelable(class ADBDPlayer* Player)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.InteractionDefinition.IsCancelable");

	UInteractionDefinition_IsCancelable_Params params;
	params.Player = Player;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.InteractionDefinition.GetUpdateMontage
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class ADBDPlayer*              Player                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// struct FAnimationMontageDescriptor ReturnValue                    (Parm, OutParm, ReturnParm)

struct FAnimationMontageDescriptor UInteractionDefinition::GetUpdateMontage(class ADBDPlayer* Player)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.InteractionDefinition.GetUpdateMontage");

	UInteractionDefinition_GetUpdateMontage_Params params;
	params.Player = Player;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.InteractionDefinition.GetUpdateAnimationPlayRate
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ADBDPlayer*              Player                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UInteractionDefinition::GetUpdateAnimationPlayRate(class ADBDPlayer* Player)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.InteractionDefinition.GetUpdateAnimationPlayRate");

	UInteractionDefinition_GetUpdateAnimationPlayRate_Params params;
	params.Player = Player;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.InteractionDefinition.GetUpdateAnimationPlayBackDefinition
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ADBDPlayer*              Player                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           Follower                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FMontagePlaybackDefinition ReturnValue                    (Parm, OutParm, ReturnParm)

struct FMontagePlaybackDefinition UInteractionDefinition::GetUpdateAnimationPlayBackDefinition(class ADBDPlayer* Player, bool Follower)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.InteractionDefinition.GetUpdateAnimationPlayBackDefinition");

	UInteractionDefinition_GetUpdateAnimationPlayBackDefinition_Params params;
	params.Player = Player;
	params.Follower = Follower;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.InteractionDefinition.GetSnapTimeAtStart
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ADBDPlayer*              Player                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UInteractionDefinition::GetSnapTimeAtStart(class ADBDPlayer* Player)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.InteractionDefinition.GetSnapTimeAtStart");

	UInteractionDefinition_GetSnapTimeAtStart_Params params;
	params.Player = Player;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.InteractionDefinition.GetSnapTime
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class ADBDPlayer*              Player                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UInteractionDefinition::GetSnapTime(class ADBDPlayer* Player)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.InteractionDefinition.GetSnapTime");

	UInteractionDefinition_GetSnapTime_Params params;
	params.Player = Player;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.InteractionDefinition.GetSnapSocketName
// (Native, Event, Protected, BlueprintEvent, Const)
// Parameters:
// class ADBDPlayer*              Player                         (Parm, ZeroConstructor, IsPlainOldData)
// struct FName                   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FName UInteractionDefinition::GetSnapSocketName(class ADBDPlayer* Player)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.InteractionDefinition.GetSnapSocketName");

	UInteractionDefinition_GetSnapSocketName_Params params;
	params.Player = Player;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.InteractionDefinition.GetSnapPointRotationAtStart
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ADBDPlayer*              Player                         (Parm, ZeroConstructor, IsPlainOldData)
// struct FRotator                ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FRotator UInteractionDefinition::GetSnapPointRotationAtStart(class ADBDPlayer* Player)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.InteractionDefinition.GetSnapPointRotationAtStart");

	UInteractionDefinition_GetSnapPointRotationAtStart_Params params;
	params.Player = Player;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.InteractionDefinition.GetSnapPointRotation
// (Native, Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class ADBDPlayer*              Player                         (Parm, ZeroConstructor, IsPlainOldData)
// struct FRotator                ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FRotator UInteractionDefinition::GetSnapPointRotation(class ADBDPlayer* Player)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.InteractionDefinition.GetSnapPointRotation");

	UInteractionDefinition_GetSnapPointRotation_Params params;
	params.Player = Player;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.InteractionDefinition.GetSnapPointPositionAtStart
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ADBDPlayer*              Player                         (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FVector UInteractionDefinition::GetSnapPointPositionAtStart(class ADBDPlayer* Player)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.InteractionDefinition.GetSnapPointPositionAtStart");

	UInteractionDefinition_GetSnapPointPositionAtStart_Params params;
	params.Player = Player;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.InteractionDefinition.GetSnapPointPosition
// (Native, Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class ADBDPlayer*              Player                         (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FVector UInteractionDefinition::GetSnapPointPosition(class ADBDPlayer* Player)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.InteractionDefinition.GetSnapPointPosition");

	UInteractionDefinition_GetSnapPointPosition_Params params;
	params.Player = Player;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.InteractionDefinition.GetSnapDistanceAtStart
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ADBDPlayer*              Player                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UInteractionDefinition::GetSnapDistanceAtStart(class ADBDPlayer* Player)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.InteractionDefinition.GetSnapDistanceAtStart");

	UInteractionDefinition_GetSnapDistanceAtStart_Params params;
	params.Player = Player;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.InteractionDefinition.GetSnapDistance
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class ADBDPlayer*              Player                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UInteractionDefinition::GetSnapDistance(class ADBDPlayer* Player)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.InteractionDefinition.GetSnapDistance");

	UInteractionDefinition_GetSnapDistance_Params params;
	params.Player = Player;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.InteractionDefinition.GetPlayerDependancy
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class ADBDPlayer*              interactingPlayer              (Parm, ZeroConstructor, IsPlainOldData)
// class ADBDPlayer*              ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ADBDPlayer* UInteractionDefinition::GetPlayerDependancy(class ADBDPlayer* interactingPlayer)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.InteractionDefinition.GetPlayerDependancy");

	UInteractionDefinition_GetPlayerDependancy_Params params;
	params.interactingPlayer = interactingPlayer;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.InteractionDefinition.GetNavigationSpeedUpdate
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// float                          Time                           (Parm, ZeroConstructor, IsPlainOldData)
// class ADBDPlayer*              Player                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UInteractionDefinition::GetNavigationSpeedUpdate(float Time, class ADBDPlayer* Player)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.InteractionDefinition.GetNavigationSpeedUpdate");

	UInteractionDefinition_GetNavigationSpeedUpdate_Params params;
	params.Time = Time;
	params.Player = Player;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.InteractionDefinition.GetNavigationSpeedExit
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// float                          Time                           (Parm, ZeroConstructor, IsPlainOldData)
// class ADBDPlayer*              Player                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UInteractionDefinition::GetNavigationSpeedExit(float Time, class ADBDPlayer* Player)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.InteractionDefinition.GetNavigationSpeedExit");

	UInteractionDefinition_GetNavigationSpeedExit_Params params;
	params.Time = Time;
	params.Player = Player;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.InteractionDefinition.GetNavigationSpeedEnter
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// float                          Time                           (Parm, ZeroConstructor, IsPlainOldData)
// class ADBDPlayer*              Player                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UInteractionDefinition::GetNavigationSpeedEnter(float Time, class ADBDPlayer* Player)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.InteractionDefinition.GetNavigationSpeedEnter");

	UInteractionDefinition_GetNavigationSpeedEnter_Params params;
	params.Time = Time;
	params.Player = Player;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.InteractionDefinition.GetInterruptionDefinitions
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class UInterruptionDefinition*> ReturnValue                    (ConstParm, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

TArray<class UInterruptionDefinition*> UInteractionDefinition::GetInterruptionDefinitions()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.InteractionDefinition.GetInterruptionDefinitions");

	UInteractionDefinition_GetInterruptionDefinitions_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.InteractionDefinition.GetInteractor
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UInteractor*             ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UInteractor* UInteractionDefinition::GetInteractor()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.InteractionDefinition.GetInteractor");

	UInteractionDefinition_GetInteractor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.InteractionDefinition.GetInteractionTime
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ADBDPlayer*              Character                      (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UInteractionDefinition::GetInteractionTime(class ADBDPlayer* Character)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.InteractionDefinition.GetInteractionTime");

	UInteractionDefinition_GetInteractionTime_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.InteractionDefinition.GetInteractionText
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class ADBDPlayer*              Player                         (Parm, ZeroConstructor, IsPlainOldData)
// class FString                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

class FString UInteractionDefinition::GetInteractionText(class ADBDPlayer* Player)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.InteractionDefinition.GetInteractionText");

	UInteractionDefinition_GetInteractionText_Params params;
	params.Player = Player;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.InteractionDefinition.GetInteractionSpeedModifier
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// class ADBDPlayer*              Character                      (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UInteractionDefinition::GetInteractionSpeedModifier(class ADBDPlayer* Character)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.InteractionDefinition.GetInteractionSpeedModifier");

	UInteractionDefinition_GetInteractionSpeedModifier_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.InteractionDefinition.GetInteractionExitTime
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class ADBDPlayer*              Character                      (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UInteractionDefinition::GetInteractionExitTime(class ADBDPlayer* Character)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.InteractionDefinition.GetInteractionExitTime");

	UInteractionDefinition_GetInteractionExitTime_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.InteractionDefinition.GetInteractionDescriptionText
// (Final, Native, Public, Const)
// Parameters:
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText UInteractionDefinition::GetInteractionDescriptionText()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.InteractionDefinition.GetInteractionDescriptionText");

	UInteractionDefinition_GetInteractionDescriptionText_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.InteractionDefinition.GetInteractable
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AInteractable*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AInteractable* UInteractionDefinition::GetInteractable()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.InteractionDefinition.GetInteractable");

	UInteractionDefinition_GetInteractable_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.InteractionDefinition.GetFocalPointPosition
// (Native, Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class ADBDPlayer*              Player                         (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FVector UInteractionDefinition::GetFocalPointPosition(class ADBDPlayer* Player)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.InteractionDefinition.GetFocalPointPosition");

	UInteractionDefinition_GetFocalPointPosition_Params params;
	params.Player = Player;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.InteractionDefinition.GetExitMontage
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class ADBDPlayer*              Player                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// struct FAnimationMontageDescriptor ReturnValue                    (Parm, OutParm, ReturnParm)

struct FAnimationMontageDescriptor UInteractionDefinition::GetExitMontage(class ADBDPlayer* Player)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.InteractionDefinition.GetExitMontage");

	UInteractionDefinition_GetExitMontage_Params params;
	params.Player = Player;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.InteractionDefinition.GetExitAnimationPlayBackDefinition
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ADBDPlayer*              Player                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           Follower                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FMontagePlaybackDefinition ReturnValue                    (Parm, OutParm, ReturnParm)

struct FMontagePlaybackDefinition UInteractionDefinition::GetExitAnimationPlayBackDefinition(class ADBDPlayer* Player, bool Follower)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.InteractionDefinition.GetExitAnimationPlayBackDefinition");

	UInteractionDefinition_GetExitAnimationPlayBackDefinition_Params params;
	params.Player = Player;
	params.Follower = Follower;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.InteractionDefinition.GetEnterMontage
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class ADBDPlayer*              Player                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// struct FAnimationMontageDescriptor ReturnValue                    (Parm, OutParm, ReturnParm)

struct FAnimationMontageDescriptor UInteractionDefinition::GetEnterMontage(class ADBDPlayer* Player)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.InteractionDefinition.GetEnterMontage");

	UInteractionDefinition_GetEnterMontage_Params params;
	params.Player = Player;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.InteractionDefinition.GetEnterAnimationPlayBackDefinition
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ADBDPlayer*              Player                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           Follower                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FMontagePlaybackDefinition ReturnValue                    (Parm, OutParm, ReturnParm)

struct FMontagePlaybackDefinition UInteractionDefinition::GetEnterAnimationPlayBackDefinition(class ADBDPlayer* Player, bool Follower)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.InteractionDefinition.GetEnterAnimationPlayBackDefinition");

	UInteractionDefinition_GetEnterAnimationPlayBackDefinition_Params params;
	params.Player = Player;
	params.Follower = Follower;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.InteractionDefinition.GetAllowNavigation
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UInteractionDefinition::GetAllowNavigation()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.InteractionDefinition.GetAllowNavigation");

	UInteractionDefinition_GetAllowNavigation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.InteractionDefinition.GetActualSnapPointPositionAtStart
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ADBDPlayer*              Player                         (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FVector UInteractionDefinition::GetActualSnapPointPositionAtStart(class ADBDPlayer* Player)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.InteractionDefinition.GetActualSnapPointPositionAtStart");

	UInteractionDefinition_GetActualSnapPointPositionAtStart_Params params;
	params.Player = Player;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.InteractionDefinition.GetActualSnapPointPosition
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ADBDPlayer*              Player                         (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FVector UInteractionDefinition::GetActualSnapPointPosition(class ADBDPlayer* Player)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.InteractionDefinition.GetActualSnapPointPosition");

	UInteractionDefinition_GetActualSnapPointPosition_Params params;
	params.Player = Player;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.InteractionDefinition.GetActorsToIgnoreOverlap
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// TArray<class AActor*>          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<class AActor*> UInteractionDefinition::GetActorsToIgnoreOverlap()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.InteractionDefinition.GetActorsToIgnoreOverlap");

	UInteractionDefinition_GetActorsToIgnoreOverlap_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.InteractionDefinition.GetActorHeightDelta
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ADBDPlayer*              Player                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UInteractionDefinition::GetActorHeightDelta(class ADBDPlayer* Player)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.InteractionDefinition.GetActorHeightDelta");

	UInteractionDefinition_GetActorHeightDelta_Params params;
	params.Player = Player;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.InteractionDefinition.EndOverlapCallback
// (Final, Native, Public)
// Parameters:
// class UPrimitiveComponent*     HitComponent                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// int                            OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData)

void UInteractionDefinition::EndOverlapCallback(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.InteractionDefinition.EndOverlapCallback");

	UInteractionDefinition_EndOverlapCallback_Params params;
	params.HitComponent = HitComponent;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.InteractionDefinition.DoesPlayerHaveClearPath
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ADBDPlayer*              Player                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UInteractionDefinition::DoesPlayerHaveClearPath(class ADBDPlayer* Player)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.InteractionDefinition.DoesPlayerHaveClearPath");

	UInteractionDefinition_DoesPlayerHaveClearPath_Params params;
	params.Player = Player;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.InteractionDefinition.CompleteCharge
// (BlueprintAuthorityOnly, Native, Public, BlueprintCallable)

void UInteractionDefinition::CompleteCharge()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.InteractionDefinition.CompleteCharge");

	UInteractionDefinition_CompleteCharge_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.InteractionDefinition.CanOverrideInteraction
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class UInteractionDefinition*  Interaction                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UInteractionDefinition::CanOverrideInteraction(class UInteractionDefinition* Interaction)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.InteractionDefinition.CanOverrideInteraction");

	UInteractionDefinition_CanOverrideInteraction_Params params;
	params.Interaction = Interaction;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.InteractionDefinition.BeginOverlapCallback
// (Final, Native, Public, HasOutParms)
// Parameters:
// class UPrimitiveComponent*     HitComponent                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// int                            OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bFromSweep                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FHitResult              SweepResult                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void UInteractionDefinition::BeginOverlapCallback(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.InteractionDefinition.BeginOverlapCallback");

	UInteractionDefinition_BeginOverlapCallback_Params params;
	params.HitComponent = HitComponent;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;
	params.bFromSweep = bFromSweep;
	params.SweepResult = SweepResult;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.InteractionDefinition.AttachToZone
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UPrimitiveComponent*     zone                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UInteractionDefinition::AttachToZone(class UPrimitiveComponent* zone)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.InteractionDefinition.AttachToZone");

	UInteractionDefinition_AttachToZone_Params params;
	params.zone = zone;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.InteractionDefinition.AttachToInteractor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UInteractor*             Interactor                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UInteractionDefinition::AttachToInteractor(class UInteractor* Interactor)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.InteractionDefinition.AttachToInteractor");

	UInteractionDefinition_AttachToInteractor_Params params;
	params.Interactor = Interactor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.InteractionDefinition.AddMutuallyExclusiveInteraction
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UInteractionDefinition*  Interaction                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UInteractionDefinition::AddMutuallyExclusiveInteraction(class UInteractionDefinition* Interaction)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.InteractionDefinition.AddMutuallyExclusiveInteraction");

	UInteractionDefinition_AddMutuallyExclusiveInteraction_Params params;
	params.Interaction = Interaction;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.ChargeableInteractionDefinition.SetChargeableComponent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UChargeableComponent*    ChargeableComponent            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UChargeableInteractionDefinition::SetChargeableComponent(class UChargeableComponent* ChargeableComponent)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.ChargeableInteractionDefinition.SetChargeableComponent");

	UChargeableInteractionDefinition_SetChargeableComponent_Params params;
	params.ChargeableComponent = ChargeableComponent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.ChargeableInteractionDefinition.OnSkillCheckResponseAuthorityBP
// (Event, Public, BlueprintEvent)
// Parameters:
// class ADBDPlayer*              Player                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           success                        (Parm, ZeroConstructor, IsPlainOldData)
// bool                           Bonus                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           hadInput                       (Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<ESkillCheckCustomType> Type                           (Parm, ZeroConstructor, IsPlainOldData)

void UChargeableInteractionDefinition::OnSkillCheckResponseAuthorityBP(class ADBDPlayer* Player, bool success, bool Bonus, bool hadInput, TEnumAsByte<ESkillCheckCustomType> Type)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.ChargeableInteractionDefinition.OnSkillCheckResponseAuthorityBP");

	UChargeableInteractionDefinition_OnSkillCheckResponseAuthorityBP_Params params;
	params.Player = Player;
	params.success = success;
	params.Bonus = Bonus;
	params.hadInput = hadInput;
	params.Type = Type;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.ChargeableInteractionDefinition.OnSkillCheckResponseAuthority
// (Final, Native, Private)
// Parameters:
// bool                           success                        (Parm, ZeroConstructor, IsPlainOldData)
// bool                           Bonus                          (Parm, ZeroConstructor, IsPlainOldData)
// class ADBDPlayer*              Player                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           TriggerLoudNoise               (Parm, ZeroConstructor, IsPlainOldData)
// bool                           hadInput                       (Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<ESkillCheckCustomType> Type                           (Parm, ZeroConstructor, IsPlainOldData)

void UChargeableInteractionDefinition::OnSkillCheckResponseAuthority(bool success, bool Bonus, class ADBDPlayer* Player, bool TriggerLoudNoise, bool hadInput, TEnumAsByte<ESkillCheckCustomType> Type)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.ChargeableInteractionDefinition.OnSkillCheckResponseAuthority");

	UChargeableInteractionDefinition_OnSkillCheckResponseAuthority_Params params;
	params.success = success;
	params.Bonus = Bonus;
	params.Player = Player;
	params.TriggerLoudNoise = TriggerLoudNoise;
	params.hadInput = hadInput;
	params.Type = Type;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.ChargeableInteractionDefinition.OnSkillCheckResponseAestheticBP
// (Event, Public, BlueprintEvent)
// Parameters:
// class ADBDPlayer*              Player                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           success                        (Parm, ZeroConstructor, IsPlainOldData)
// bool                           Bonus                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           hadInput                       (Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<ESkillCheckCustomType> Type                           (Parm, ZeroConstructor, IsPlainOldData)

void UChargeableInteractionDefinition::OnSkillCheckResponseAestheticBP(class ADBDPlayer* Player, bool success, bool Bonus, bool hadInput, TEnumAsByte<ESkillCheckCustomType> Type)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.ChargeableInteractionDefinition.OnSkillCheckResponseAestheticBP");

	UChargeableInteractionDefinition_OnSkillCheckResponseAestheticBP_Params params;
	params.Player = Player;
	params.success = success;
	params.Bonus = Bonus;
	params.hadInput = hadInput;
	params.Type = Type;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.ChargeableInteractionDefinition.OnSkillCheckResponseAesthetic
// (Final, Native, Private)
// Parameters:
// bool                           success                        (Parm, ZeroConstructor, IsPlainOldData)
// bool                           Bonus                          (Parm, ZeroConstructor, IsPlainOldData)
// class ADBDPlayer*              Player                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           TriggerLoudNoise               (Parm, ZeroConstructor, IsPlainOldData)
// bool                           hadInput                       (Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<ESkillCheckCustomType> Type                           (Parm, ZeroConstructor, IsPlainOldData)

void UChargeableInteractionDefinition::OnSkillCheckResponseAesthetic(bool success, bool Bonus, class ADBDPlayer* Player, bool TriggerLoudNoise, bool hadInput, TEnumAsByte<ESkillCheckCustomType> Type)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.ChargeableInteractionDefinition.OnSkillCheckResponseAesthetic");

	UChargeableInteractionDefinition_OnSkillCheckResponseAesthetic_Params params;
	params.success = success;
	params.Bonus = Bonus;
	params.Player = Player;
	params.TriggerLoudNoise = TriggerLoudNoise;
	params.hadInput = hadInput;
	params.Type = Type;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.ChargeableInteractionDefinition.OnInteractionCompletionStateChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// class ADBDPlayer*              Player                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           complete                       (Parm, ZeroConstructor, IsPlainOldData)

void UChargeableInteractionDefinition::OnInteractionCompletionStateChanged(class ADBDPlayer* Player, bool complete)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.ChargeableInteractionDefinition.OnInteractionCompletionStateChanged");

	UChargeableInteractionDefinition_OnInteractionCompletionStateChanged_Params params;
	params.Player = Player;
	params.complete = complete;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.ChargeableInteractionDefinition.OnChargeableChangedBP
// (Event, Public, BlueprintEvent)
// Parameters:
// class UChargeableComponent*    oldChargeable                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class UChargeableComponent*    newChargeable                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UChargeableInteractionDefinition::OnChargeableChangedBP(class UChargeableComponent* oldChargeable, class UChargeableComponent* newChargeable)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.ChargeableInteractionDefinition.OnChargeableChangedBP");

	UChargeableInteractionDefinition_OnChargeableChangedBP_Params params;
	params.oldChargeable = oldChargeable;
	params.newChargeable = newChargeable;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.ChargeableInteractionDefinition.IsChargeComplete
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UChargeableInteractionDefinition::IsChargeComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.ChargeableInteractionDefinition.IsChargeComplete");

	UChargeableInteractionDefinition_IsChargeComplete_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.ChargeableInteractionDefinition.HasSkillCheckHappened
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UChargeableInteractionDefinition::HasSkillCheckHappened()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.ChargeableInteractionDefinition.HasSkillCheckHappened");

	UChargeableInteractionDefinition_HasSkillCheckHappened_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.ChargeableInteractionDefinition.GetTunableValue
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FName                   TunableValueID                 (Parm, ZeroConstructor, IsPlainOldData)
// float                          DefaultValue                   (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UChargeableInteractionDefinition::GetTunableValue(const struct FName& TunableValueID, float DefaultValue)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.ChargeableInteractionDefinition.GetTunableValue");

	UChargeableInteractionDefinition_GetTunableValue_Params params;
	params.TunableValueID = TunableValueID;
	params.DefaultValue = DefaultValue;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.ChargeableInteractionDefinition.GetTotalChargeModifier
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UChargeableInteractionDefinition::GetTotalChargeModifier()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.ChargeableInteractionDefinition.GetTotalChargeModifier");

	UChargeableInteractionDefinition_GetTotalChargeModifier_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.ChargeableInteractionDefinition.GetSuccessProbability
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UChargeableInteractionDefinition::GetSuccessProbability()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.ChargeableInteractionDefinition.GetSuccessProbability");

	UChargeableInteractionDefinition_GetSuccessProbability_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.ChargeableInteractionDefinition.GetSkillCheckProbability
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UChargeableInteractionDefinition::GetSkillCheckProbability()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.ChargeableInteractionDefinition.GetSkillCheckProbability");

	UChargeableInteractionDefinition_GetSkillCheckProbability_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.ChargeableInteractionDefinition.GetSkillCheckFailureTimePenalty
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UChargeableInteractionDefinition::GetSkillCheckFailureTimePenalty()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.ChargeableInteractionDefinition.GetSkillCheckFailureTimePenalty");

	UChargeableInteractionDefinition_GetSkillCheckFailureTimePenalty_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.ChargeableInteractionDefinition.GetSkillCheckFailurePercentPenalty
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ADBDPlayer*              Player                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UChargeableInteractionDefinition::GetSkillCheckFailurePercentPenalty(class ADBDPlayer* Player)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.ChargeableInteractionDefinition.GetSkillCheckFailurePercentPenalty");

	UChargeableInteractionDefinition_GetSkillCheckFailurePercentPenalty_Params params;
	params.Player = Player;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.ChargeableInteractionDefinition.GetSkillCheckDifficulityModifier
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UChargeableInteractionDefinition::GetSkillCheckDifficulityModifier()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.ChargeableInteractionDefinition.GetSkillCheckDifficulityModifier");

	UChargeableInteractionDefinition_GetSkillCheckDifficulityModifier_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.ChargeableInteractionDefinition.GetSkillCheckCharge
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// class ADBDPlayer*              Player                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           success                        (Parm, ZeroConstructor, IsPlainOldData)
// bool                           Bonus                          (Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<ESkillCheckCustomType> Type                           (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UChargeableInteractionDefinition::GetSkillCheckCharge(class ADBDPlayer* Player, bool success, bool Bonus, TEnumAsByte<ESkillCheckCustomType> Type)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.ChargeableInteractionDefinition.GetSkillCheckCharge");

	UChargeableInteractionDefinition_GetSkillCheckCharge_Params params;
	params.Player = Player;
	params.success = success;
	params.Bonus = Bonus;
	params.Type = Type;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.ChargeableInteractionDefinition.GetPipsPassed
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UChargeableInteractionDefinition::GetPipsPassed()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.ChargeableInteractionDefinition.GetPipsPassed");

	UChargeableInteractionDefinition_GetPipsPassed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.ChargeableInteractionDefinition.GetPerkMultiplier
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UChargeableInteractionDefinition::GetPerkMultiplier()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.ChargeableInteractionDefinition.GetPerkMultiplier");

	UChargeableInteractionDefinition_GetPerkMultiplier_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.ChargeableInteractionDefinition.GetOwningDBDPlayer
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ADBDPlayer*              ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ADBDPlayer* UChargeableInteractionDefinition::GetOwningDBDPlayer()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.ChargeableInteractionDefinition.GetOwningDBDPlayer");

	UChargeableInteractionDefinition_GetOwningDBDPlayer_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.ChargeableInteractionDefinition.GetMultiplicativeLuckBonus
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UChargeableInteractionDefinition::GetMultiplicativeLuckBonus()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.ChargeableInteractionDefinition.GetMultiplicativeLuckBonus");

	UChargeableInteractionDefinition_GetMultiplicativeLuckBonus_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.ChargeableInteractionDefinition.GetMaxCharge
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UChargeableInteractionDefinition::GetMaxCharge()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.ChargeableInteractionDefinition.GetMaxCharge");

	UChargeableInteractionDefinition_GetMaxCharge_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.ChargeableInteractionDefinition.GetItemEfficiencyModifier
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UChargeableInteractionDefinition::GetItemEfficiencyModifier()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.ChargeableInteractionDefinition.GetItemEfficiencyModifier");

	UChargeableInteractionDefinition_GetItemEfficiencyModifier_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.ChargeableInteractionDefinition.GetGoodSkillCheckSuccessPercentReward
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ADBDPlayer*              Player                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UChargeableInteractionDefinition::GetGoodSkillCheckSuccessPercentReward(class ADBDPlayer* Player)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.ChargeableInteractionDefinition.GetGoodSkillCheckSuccessPercentReward");

	UChargeableInteractionDefinition_GetGoodSkillCheckSuccessPercentReward_Params params;
	params.Player = Player;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.ChargeableInteractionDefinition.GetChargeAmountForTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          DeltaSeconds                   (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UChargeableInteractionDefinition::GetChargeAmountForTime(float DeltaSeconds)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.ChargeableInteractionDefinition.GetChargeAmountForTime");

	UChargeableInteractionDefinition_GetChargeAmountForTime_Params params;
	params.DeltaSeconds = DeltaSeconds;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.ChargeableInteractionDefinition.GetChargeableComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UChargeableComponent*    ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UChargeableComponent* UChargeableInteractionDefinition::GetChargeableComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.ChargeableInteractionDefinition.GetChargeableComponent");

	UChargeableInteractionDefinition_GetChargeableComponent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.ChargeableInteractionDefinition.GetBonusSkillCheckZoneSizeModifier
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UChargeableInteractionDefinition::GetBonusSkillCheckZoneSizeModifier()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.ChargeableInteractionDefinition.GetBonusSkillCheckZoneSizeModifier");

	UChargeableInteractionDefinition_GetBonusSkillCheckZoneSizeModifier_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.ChargeableInteractionDefinition.GetBonusSkillCheckSuccessPercentReward
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ADBDPlayer*              Player                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UChargeableInteractionDefinition::GetBonusSkillCheckSuccessPercentReward(class ADBDPlayer* Player)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.ChargeableInteractionDefinition.GetBonusSkillCheckSuccessPercentReward");

	UChargeableInteractionDefinition_GetBonusSkillCheckSuccessPercentReward_Params params;
	params.Player = Player;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.ChargeableInteractionDefinition.GetAdditiveLuckBonus
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UChargeableInteractionDefinition::GetAdditiveLuckBonus()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.ChargeableInteractionDefinition.GetAdditiveLuckBonus");

	UChargeableInteractionDefinition_GetAdditiveLuckBonus_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.ChargeableInteractionDefinition.Authority_ChargeWithItem
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// float                          DeltaSeconds                   (Parm, ZeroConstructor, IsPlainOldData)
// class ACollectable*            Item                           (Parm, ZeroConstructor, IsPlainOldData)

void UChargeableInteractionDefinition::Authority_ChargeWithItem(float DeltaSeconds, class ACollectable* Item)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.ChargeableInteractionDefinition.Authority_ChargeWithItem");

	UChargeableInteractionDefinition_Authority_ChargeWithItem_Params params;
	params.DeltaSeconds = DeltaSeconds;
	params.Item = Item;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.ChargeableInteractionDefinition.AddCharge
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// float                          DeltaSeconds                   (Parm, ZeroConstructor, IsPlainOldData)

void UChargeableInteractionDefinition::AddCharge(float DeltaSeconds)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.ChargeableInteractionDefinition.AddCharge");

	UChargeableInteractionDefinition_AddCharge_Params params;
	params.DeltaSeconds = DeltaSeconds;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.InteractionProficiency.GetValue
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class UChargeableInteractionDefinition* chargeableInteraction          (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UInteractionProficiency::GetValue(class UChargeableInteractionDefinition* chargeableInteraction)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.InteractionProficiency.GetValue");

	UInteractionProficiency_GetValue_Params params;
	params.chargeableInteraction = chargeableInteraction;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.InteractionProficiency.GetType
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// float                          Value                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<EStatusEffectType> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

TEnumAsByte<EStatusEffectType> UInteractionProficiency::GetType(float Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.InteractionProficiency.GetType");

	UInteractionProficiency_GetType_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.InteractionProficiency.GetLevel
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class UChargeableInteractionDefinition* chargeableInteraction          (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UInteractionProficiency::GetLevel(class UChargeableInteractionDefinition* chargeableInteraction)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.InteractionProficiency.GetLevel");

	UInteractionProficiency_GetLevel_Params params;
	params.chargeableInteraction = chargeableInteraction;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.InteractionProficiency.GetIsActive
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class UChargeableInteractionDefinition* chargeableInteraction          (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UInteractionProficiency::GetIsActive(class UChargeableInteractionDefinition* chargeableInteraction)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.InteractionProficiency.GetIsActive");

	UInteractionProficiency_GetIsActive_Params params;
	params.chargeableInteraction = chargeableInteraction;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.Interactor.Multicast_ReservationStatus
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private, NetValidate)
// Parameters:
// class ADBDPlayer*              Player                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           Lock                           (Parm, ZeroConstructor, IsPlainOldData)

void UInteractor::Multicast_ReservationStatus(class ADBDPlayer* Player, bool Lock)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.Interactor.Multicast_ReservationStatus");

	UInteractor_Multicast_ReservationStatus_Params params;
	params.Player = Player;
	params.Lock = Lock;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.Interactor.Multicast_LockStatus
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private, NetValidate)
// Parameters:
// class ADBDPlayer*              Player                         (Parm, ZeroConstructor, IsPlainOldData)
// class UInteractionDefinition*  currentInteraction             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// bool                           Lock                           (Parm, ZeroConstructor, IsPlainOldData)

void UInteractor::Multicast_LockStatus(class ADBDPlayer* Player, class UInteractionDefinition* currentInteraction, bool Lock)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.Interactor.Multicast_LockStatus");

	UInteractor_Multicast_LockStatus_Params params;
	params.Player = Player;
	params.currentInteraction = currentInteraction;
	params.Lock = Lock;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.Interactor.IsInterruptionPossible
// (Final, Native, Public, Const)
// Parameters:
// class ADBDPlayer*              interruptor                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// class ADBDPlayer*              interruptee                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// class UInteractionDefinition*  definition                     (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class UInterruptionDefinition* interruption                   (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UInteractor::IsInterruptionPossible(class ADBDPlayer* interruptor, class ADBDPlayer* interruptee, class UInteractionDefinition* definition, class UInterruptionDefinition* interruption)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.Interactor.IsInterruptionPossible");

	UInteractor_IsInterruptionPossible_Params params;
	params.interruptor = interruptor;
	params.interruptee = interruptee;
	params.definition = definition;
	params.interruption = interruption;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.Interactor.IsInteracting
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UInteractor::IsInteracting()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.Interactor.IsInteracting");

	UInteractor_IsInteracting_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.Interactor.GetInteractionDefinitions
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class UInteractionDefinition*> ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<class UInteractionDefinition*> UInteractor::GetInteractionDefinitions()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.Interactor.GetInteractionDefinitions");

	UInteractor_GetInteractionDefinitions_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.Interactor.GetInteractingPlayer
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ADBDPlayer*              ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ADBDPlayer* UInteractor::GetInteractingPlayer()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.Interactor.GetInteractingPlayer");

	UInteractor_GetInteractingPlayer_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.Interactor.GetInteractable
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AInteractable*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AInteractable* UInteractor::GetInteractable()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.Interactor.GetInteractable");

	UInteractor_GetInteractable_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.Interactor.GetCurrentInteraction
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UInteractionDefinition*  ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UInteractionDefinition* UInteractor::GetCurrentInteraction()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.Interactor.GetCurrentInteraction");

	UInteractor_GetCurrentInteraction_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.Interactor.CanPerformInteraction
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ADBDPlayer*              Player                         (Parm, ZeroConstructor, IsPlainOldData)
// class UInteractionDefinition*  definition                     (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UInteractor::CanPerformInteraction(class ADBDPlayer* Player, class UInteractionDefinition* definition)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.Interactor.CanPerformInteraction");

	UInteractor_CanPerformInteraction_Params params;
	params.Player = Player;
	params.definition = definition;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.Interactor.BPPostInitializeComponents
// (Event, Public, BlueprintEvent)

void UInteractor::BPPostInitializeComponents()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.Interactor.BPPostInitializeComponents");

	UInteractor_BPPostInitializeComponents_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.InterruptionDefinition.SetInterruptorSnapPoint
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FTransform              Point                          (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void UInterruptionDefinition::SetInterruptorSnapPoint(const struct FTransform& Point)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.InterruptionDefinition.SetInterruptorSnapPoint");

	UInterruptionDefinition_SetInterruptorSnapPoint_Params params;
	params.Point = Point;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.InterruptionDefinition.SetInterrupteeSnapPoint
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FTransform              Point                          (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void UInterruptionDefinition::SetInterrupteeSnapPoint(const struct FTransform& Point)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.InterruptionDefinition.SetInterrupteeSnapPoint");

	UInterruptionDefinition_SetInterrupteeSnapPoint_Params params;
	params.Point = Point;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.InterruptionDefinition.OnInterruptionUpdateStart
// (Event, Public, BlueprintEvent)
// Parameters:
// class ADBDPlayer*              interruptor                    (Parm, ZeroConstructor, IsPlainOldData)
// class ADBDPlayer*              interruptee                    (Parm, ZeroConstructor, IsPlainOldData)

void UInterruptionDefinition::OnInterruptionUpdateStart(class ADBDPlayer* interruptor, class ADBDPlayer* interruptee)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.InterruptionDefinition.OnInterruptionUpdateStart");

	UInterruptionDefinition_OnInterruptionUpdateStart_Params params;
	params.interruptor = interruptor;
	params.interruptee = interruptee;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.InterruptionDefinition.OnInterruptionExitEnd
// (Event, Public, BlueprintEvent)
// Parameters:
// class ADBDPlayer*              interruptor                    (Parm, ZeroConstructor, IsPlainOldData)
// class ADBDPlayer*              interruptee                    (Parm, ZeroConstructor, IsPlainOldData)

void UInterruptionDefinition::OnInterruptionExitEnd(class ADBDPlayer* interruptor, class ADBDPlayer* interruptee)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.InterruptionDefinition.OnInterruptionExitEnd");

	UInterruptionDefinition_OnInterruptionExitEnd_Params params;
	params.interruptor = interruptor;
	params.interruptee = interruptee;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.InterruptionDefinition.OnInterruptionEnterStart
// (Event, Public, BlueprintEvent)
// Parameters:
// class ADBDPlayer*              interruptor                    (Parm, ZeroConstructor, IsPlainOldData)
// class ADBDPlayer*              interruptee                    (Parm, ZeroConstructor, IsPlainOldData)

void UInterruptionDefinition::OnInterruptionEnterStart(class ADBDPlayer* interruptor, class ADBDPlayer* interruptee)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.InterruptionDefinition.OnInterruptionEnterStart");

	UInterruptionDefinition_OnInterruptionEnterStart_Params params;
	params.interruptor = interruptor;
	params.interruptee = interruptee;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.InterruptionDefinition.IsUsingMontageFollower
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UInterruptionDefinition::IsUsingMontageFollower()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.InterruptionDefinition.IsUsingMontageFollower");

	UInterruptionDefinition_IsUsingMontageFollower_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.InterruptionDefinition.IsUsingAttack
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UInterruptionDefinition::IsUsingAttack()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.InterruptionDefinition.IsUsingAttack");

	UInterruptionDefinition_IsUsingAttack_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.InterruptionDefinition.IsInterruptionPossible
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// class ADBDPlayer*              interruptor                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// class ADBDPlayer*              interruptee                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UInterruptionDefinition::IsInterruptionPossible(class ADBDPlayer* interruptor, class ADBDPlayer* interruptee)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.InterruptionDefinition.IsInterruptionPossible");

	UInterruptionDefinition_IsInterruptionPossible_Params params;
	params.interruptor = interruptor;
	params.interruptee = interruptee;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.InterruptionDefinition.InteractionCheckHeightDelta
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ADBDPlayer*              interruptor                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// class ADBDPlayer*              interruptee                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UInterruptionDefinition::InteractionCheckHeightDelta(class ADBDPlayer* interruptor, class ADBDPlayer* interruptee)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.InterruptionDefinition.InteractionCheckHeightDelta");

	UInterruptionDefinition_InteractionCheckHeightDelta_Params params;
	params.interruptor = interruptor;
	params.interruptee = interruptee;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.InterruptionDefinition.GetInterruptionSnapPointRotationForInterruptor
// (Native, Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class ADBDPlayer*              interruptor                    (Parm, ZeroConstructor, IsPlainOldData)
// class ADBDPlayer*              interruptee                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FRotator                ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FRotator UInterruptionDefinition::GetInterruptionSnapPointRotationForInterruptor(class ADBDPlayer* interruptor, class ADBDPlayer* interruptee)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.InterruptionDefinition.GetInterruptionSnapPointRotationForInterruptor");

	UInterruptionDefinition_GetInterruptionSnapPointRotationForInterruptor_Params params;
	params.interruptor = interruptor;
	params.interruptee = interruptee;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.InterruptionDefinition.GetInterruptionSnapPointRotationForInterruptee
// (Native, Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class ADBDPlayer*              interruptor                    (Parm, ZeroConstructor, IsPlainOldData)
// class ADBDPlayer*              interruptee                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FRotator                ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FRotator UInterruptionDefinition::GetInterruptionSnapPointRotationForInterruptee(class ADBDPlayer* interruptor, class ADBDPlayer* interruptee)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.InterruptionDefinition.GetInterruptionSnapPointRotationForInterruptee");

	UInterruptionDefinition_GetInterruptionSnapPointRotationForInterruptee_Params params;
	params.interruptor = interruptor;
	params.interruptee = interruptee;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.InterruptionDefinition.GetInterruptionSnapPointPositionForInterruptor
// (Native, Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class ADBDPlayer*              interruptor                    (Parm, ZeroConstructor, IsPlainOldData)
// class ADBDPlayer*              interruptee                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FVector UInterruptionDefinition::GetInterruptionSnapPointPositionForInterruptor(class ADBDPlayer* interruptor, class ADBDPlayer* interruptee)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.InterruptionDefinition.GetInterruptionSnapPointPositionForInterruptor");

	UInterruptionDefinition_GetInterruptionSnapPointPositionForInterruptor_Params params;
	params.interruptor = interruptor;
	params.interruptee = interruptee;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.InterruptionDefinition.GetInterruptionSnapPointPositionForInterruptee
// (Native, Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class ADBDPlayer*              interruptor                    (Parm, ZeroConstructor, IsPlainOldData)
// class ADBDPlayer*              interruptee                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FVector UInterruptionDefinition::GetInterruptionSnapPointPositionForInterruptee(class ADBDPlayer* interruptor, class ADBDPlayer* interruptee)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.InterruptionDefinition.GetInterruptionSnapPointPositionForInterruptee");

	UInterruptionDefinition_GetInterruptionSnapPointPositionForInterruptee_Params params;
	params.interruptor = interruptor;
	params.interruptee = interruptee;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.InterruptionDefinition.GetInteractionDefinition
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UInteractionDefinition*  ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UInteractionDefinition* UInterruptionDefinition::GetInteractionDefinition()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.InterruptionDefinition.GetInteractionDefinition");

	UInterruptionDefinition_GetInteractionDefinition_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.InterruptionDefinition.GetInteractable
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AInteractable*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AInteractable* UInterruptionDefinition::GetInteractable()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.InterruptionDefinition.GetInteractable");

	UInterruptionDefinition_GetInteractable_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.InterruptionDefinition.CanInterruptWhileCarrying
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UInterruptionDefinition::CanInterruptWhileCarrying()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.InterruptionDefinition.CanInterruptWhileCarrying");

	UInterruptionDefinition_CanInterruptWhileCarrying_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.ItemVfx.SetEmittersVisibility
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                           Visible                        (Parm, ZeroConstructor, IsPlainOldData)

void AItemVfx::SetEmittersVisibility(bool Visible)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.ItemVfx.SetEmittersVisibility");

	AItemVfx_SetEmittersVisibility_Params params;
	params.Visible = Visible;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.ItemVfx.OnAttackEnd
// (Event, Public, BlueprintEvent)

void AItemVfx::OnAttackEnd()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.ItemVfx.OnAttackEnd");

	AItemVfx_OnAttackEnd_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.ItemVfx.OnAttackBegin
// (Event, Public, BlueprintEvent)

void AItemVfx::OnAttackBegin()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.ItemVfx.OnAttackBegin");

	AItemVfx_OnAttackBegin_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.ItemVfx.AttachToSkeletalMesh
// (Event, Public, BlueprintEvent)
// Parameters:
// class USkeletalMeshComponent*  SkeletonPart                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void AItemVfx::AttachToSkeletalMesh(class USkeletalMeshComponent* SkeletonPart)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.ItemVfx.AttachToSkeletalMesh");

	AItemVfx_AttachToSkeletalMesh_Params params;
	params.SkeletonPart = SkeletonPart;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.LightFollower.SetLeader
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ULightComponent*         leader                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// float                          maxIntensity                   (Parm, ZeroConstructor, IsPlainOldData)

void ULightFollower::SetLeader(class ULightComponent* leader, float maxIntensity)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.LightFollower.SetLeader");

	ULightFollower_SetLeader_Params params;
	params.leader = leader;
	params.maxIntensity = maxIntensity;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.LightFollower.AddFollower
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ULightComponent*         Follower                       (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void ULightFollower::AddFollower(class ULightComponent* Follower)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.LightFollower.AddFollower");

	ULightFollower_AddFollower_Params params;
	params.Follower = Follower;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.LightingHelper.SetPlayerExposureOffset
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          Value                          (Parm, ZeroConstructor, IsPlainOldData)

void ULightingHelper::SetPlayerExposureOffset(float Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.LightingHelper.SetPlayerExposureOffset");

	ULightingHelper_SetPlayerExposureOffset_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.LightingHelper.DBD_ModifyExposure
// (Final, Exec, Native, Private, BlueprintCallable)
// Parameters:
// float                          Value                          (Parm, ZeroConstructor, IsPlainOldData)

void ULightingHelper::DBD_ModifyExposure(float Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.LightingHelper.DBD_ModifyExposure");

	ULightingHelper_DBD_ModifyExposure_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.LightingInterpolator.LerpSkylight
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class USkyLightComponent*      Target                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class USkyLightComponent*      A                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class USkyLightComponent*      B                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// float                          Alpha                          (Parm, ZeroConstructor, IsPlainOldData)

void ULightingInterpolator::STATIC_LerpSkylight(class USkyLightComponent* Target, class USkyLightComponent* A, class USkyLightComponent* B, float Alpha)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.LightingInterpolator.LerpSkylight");

	ULightingInterpolator_LerpSkylight_Params params;
	params.Target = Target;
	params.A = A;
	params.B = B;
	params.Alpha = Alpha;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.LightingInterpolator.LerpLight
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class ULightComponent*         Target                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class ULightComponent*         A                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class ULightComponent*         B                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// float                          Alpha                          (Parm, ZeroConstructor, IsPlainOldData)

void ULightingInterpolator::STATIC_LerpLight(class ULightComponent* Target, class ULightComponent* A, class ULightComponent* B, float Alpha)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.LightingInterpolator.LerpLight");

	ULightingInterpolator_LerpLight_Params params;
	params.Target = Target;
	params.A = A;
	params.B = B;
	params.Alpha = Alpha;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.LightingInterpolator.LerpHeightFog
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UExponentialHeightFogComponent* Target                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class UExponentialHeightFogComponent* A                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class UExponentialHeightFogComponent* B                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// float                          Alpha                          (Parm, ZeroConstructor, IsPlainOldData)

void ULightingInterpolator::STATIC_LerpHeightFog(class UExponentialHeightFogComponent* Target, class UExponentialHeightFogComponent* A, class UExponentialHeightFogComponent* B, float Alpha)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.LightingInterpolator.LerpHeightFog");

	ULightingInterpolator_LerpHeightFog_Params params;
	params.Target = Target;
	params.A = A;
	params.B = B;
	params.Alpha = Alpha;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.LobbyLevel.SetLobbySubLevelLoaded
// (Final, Native, Protected, BlueprintCallable)

void ALobbyLevel::SetLobbySubLevelLoaded()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.LobbyLevel.SetLobbySubLevelLoaded");

	ALobbyLevel_SetLobbySubLevelLoaded_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.LobbyLevel.GetMainLobbySubLevelName
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FName                   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FName ALobbyLevel::GetMainLobbySubLevelName()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.LobbyLevel.GetMainLobbySubLevelName");

	ALobbyLevel_GetMainLobbySubLevelName_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.OfflineLobbyLevel.CheckDestroyingPawns
// (Final, Native, Protected)
// Parameters:
// class AActor*                  DestroyedActor                 (Parm, ZeroConstructor, IsPlainOldData)

void AOfflineLobbyLevel::CheckDestroyingPawns(class AActor* DestroyedActor)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.OfflineLobbyLevel.CheckDestroyingPawns");

	AOfflineLobbyLevel_CheckDestroyingPawns_Params params;
	params.DestroyedActor = DestroyedActor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.LocalPlayerTrackerComponent.TriggerOnLocallyObservedChanged
// (Final, Native, Public)

void ULocalPlayerTrackerComponent::TriggerOnLocallyObservedChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.LocalPlayerTrackerComponent.TriggerOnLocallyObservedChanged");

	ULocalPlayerTrackerComponent_TriggerOnLocallyObservedChanged_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.LoudNoiseHUDIndicator.AddTrackedNoise
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                 Location                       (Parm, ZeroConstructor, IsPlainOldData)
// float                          duration                       (Parm, ZeroConstructor, IsPlainOldData)

void ULoudNoiseHUDIndicator::AddTrackedNoise(const struct FVector& Location, float duration)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.LoudNoiseHUDIndicator.AddTrackedNoise");

	ULoudNoiseHUDIndicator_AddTrackedNoise_Params params;
	params.Location = Location;
	params.duration = duration;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.MapActorComponent.Multicast_SetDetectionEnabled
// (BlueprintAuthorityOnly, Net, NetReliable, Native, Event, NetMulticast, Public, BlueprintCallable)
// Parameters:
// bool                           Enabled                        (Parm, ZeroConstructor, IsPlainOldData)

void UMapActorComponent::Multicast_SetDetectionEnabled(bool Enabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.MapActorComponent.Multicast_SetDetectionEnabled");

	UMapActorComponent_Multicast_SetDetectionEnabled_Params params;
	params.Enabled = Enabled;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.MapActorComponent.IsKnownBy
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ADBDPlayer*              Character                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UMapActorComponent::IsKnownBy(class ADBDPlayer* Character)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.MapActorComponent.IsKnownBy");

	UMapActorComponent_IsKnownBy_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.MapActorComponent.GetDetectionEnabled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UMapActorComponent::GetDetectionEnabled()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.MapActorComponent.GetDetectionEnabled");

	UMapActorComponent_GetDetectionEnabled_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.MapActorDB.GetUniqueRandom
// (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<TEnumAsByte<EMapActorCategory>> Categories                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// int                            Count                          (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class AActor*>          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<class AActor*> UMapActorDB::GetUniqueRandom(TArray<TEnumAsByte<EMapActorCategory>> Categories, int Count)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.MapActorDB.GetUniqueRandom");

	UMapActorDB_GetUniqueRandom_Params params;
	params.Categories = Categories;
	params.Count = Count;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.MapActorDB.GetRandom
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TEnumAsByte<EMapActorCategory> Category                       (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AActor* UMapActorDB::GetRandom(TEnumAsByte<EMapActorCategory> Category)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.MapActorDB.GetRandom");

	UMapActorDB_GetRandom_Params params;
	params.Category = Category;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.MapActorDetectorComponent.SetDetectionPrimitive
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UPrimitiveComponent*     Primitive                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UMapActorDetectorComponent::SetDetectionPrimitive(class UPrimitiveComponent* Primitive)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.MapActorDetectorComponent.SetDetectionPrimitive");

	UMapActorDetectorComponent_SetDetectionPrimitive_Params params;
	params.Primitive = Primitive;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.MapActorDetectorComponent.OnOverlapEnter
// (Final, Native, Protected, HasOutParms)
// Parameters:
// class UPrimitiveComponent*     HitComponent                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// int                            OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bFromSweep                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FHitResult              SweepResult                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void UMapActorDetectorComponent::OnOverlapEnter(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.MapActorDetectorComponent.OnOverlapEnter");

	UMapActorDetectorComponent_OnOverlapEnter_Params params;
	params.HitComponent = HitComponent;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;
	params.bFromSweep = bFromSweep;
	params.SweepResult = SweepResult;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.MaterialHelper.UpdateMaterials
// (Final, Native, Public, BlueprintCallable)

void UMaterialHelper::UpdateMaterials()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.MaterialHelper.UpdateMaterials");

	UMaterialHelper_UpdateMaterials_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.MaterialHelper.SetVectorParameter
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FName                   ParameterName                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 NewValue                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)

void UMaterialHelper::SetVectorParameter(const struct FName& ParameterName, const struct FVector& NewValue)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.MaterialHelper.SetVectorParameter");

	UMaterialHelper_SetVectorParameter_Params params;
	params.ParameterName = ParameterName;
	params.NewValue = NewValue;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.MaterialHelper.SetTextureParameter
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FName                   ParameterName                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// class UTexture*                NewTexture                     (Parm, ZeroConstructor, IsPlainOldData)

void UMaterialHelper::SetTextureParameter(const struct FName& ParameterName, class UTexture* NewTexture)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.MaterialHelper.SetTextureParameter");

	UMaterialHelper_SetTextureParameter_Params params;
	params.ParameterName = ParameterName;
	params.NewTexture = NewTexture;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.MaterialHelper.SetScalarParameter
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FName                   ParameterName                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// float                          NewValue                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void UMaterialHelper::SetScalarParameter(const struct FName& ParameterName, float NewValue)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.MaterialHelper.SetScalarParameter");

	UMaterialHelper_SetScalarParameter_Params params;
	params.ParameterName = ParameterName;
	params.NewValue = NewValue;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.MaterialHelper.SetRenderInCustomDepth
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           RenderInCustomDepth            (Parm, ZeroConstructor, IsPlainOldData)

void UMaterialHelper::SetRenderInCustomDepth(bool RenderInCustomDepth)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.MaterialHelper.SetRenderInCustomDepth");

	UMaterialHelper_SetRenderInCustomDepth_Params params;
	params.RenderInCustomDepth = RenderInCustomDepth;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.MaterialHelper.SetRenderInCustomColourNoDepth
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           RenderInCustomColour           (Parm, ZeroConstructor, IsPlainOldData)

void UMaterialHelper::SetRenderInCustomColourNoDepth(bool RenderInCustomColour)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.MaterialHelper.SetRenderInCustomColourNoDepth");

	UMaterialHelper_SetRenderInCustomColourNoDepth_Params params;
	params.RenderInCustomColour = RenderInCustomColour;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.MaterialHelper.SetReceivesDecals
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReceivesDecals                 (Parm, ZeroConstructor, IsPlainOldData)

void UMaterialHelper::SetReceivesDecals(bool ReceivesDecals)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.MaterialHelper.SetReceivesDecals");

	UMaterialHelper_SetReceivesDecals_Params params;
	params.ReceivesDecals = ReceivesDecals;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.MaterialHelper.SetMaterial
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                  GroupName                      (Parm, ZeroConstructor)

void UMaterialHelper::SetMaterial(const class FString& GroupName)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.MaterialHelper.SetMaterial");

	UMaterialHelper_SetMaterial_Params params;
	params.GroupName = GroupName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.MaterialHelper.SetColourParameter
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FName                   ParameterName                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// struct FLinearColor            NewValue                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void UMaterialHelper::SetColourParameter(const struct FName& ParameterName, const struct FLinearColor& NewValue)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.MaterialHelper.SetColourParameter");

	UMaterialHelper_SetColourParameter_Params params;
	params.ParameterName = ParameterName;
	params.NewValue = NewValue;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.MaterialHelper.SetCastCinematicShadows
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           CastCinematicShadows           (Parm, ZeroConstructor, IsPlainOldData)

void UMaterialHelper::SetCastCinematicShadows(bool CastCinematicShadows)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.MaterialHelper.SetCastCinematicShadows");

	UMaterialHelper_SetCastCinematicShadows_Params params;
	params.CastCinematicShadows = CastCinematicShadows;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.MaterialHelper.ResetMaterials
// (Final, Native, Public, BlueprintCallable)

void UMaterialHelper::ResetMaterials()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.MaterialHelper.ResetMaterials");

	UMaterialHelper_ResetMaterials_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.MaterialHelper.RefreshMeshes
// (Final, Native, Public, BlueprintCallable)

void UMaterialHelper::RefreshMeshes()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.MaterialHelper.RefreshMeshes");

	UMaterialHelper_RefreshMeshes_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.MaterialHelper.RefreshMesh
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UMeshComponent*          mc                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UMaterialHelper::RefreshMesh(class UMeshComponent* mc)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.MaterialHelper.RefreshMesh");

	UMaterialHelper_RefreshMesh_Params params;
	params.mc = mc;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.OfferingCard.PlayAnim
// (Event, Public, BlueprintEvent)
// Parameters:
// TEnumAsByte<EOfferingAnimState> State                          (Parm, ZeroConstructor, IsPlainOldData)

void AOfferingCard::PlayAnim(TEnumAsByte<EOfferingAnimState> State)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.OfferingCard.PlayAnim");

	AOfferingCard_PlayAnim_Params params;
	params.State = State;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.OfferingSequenceManager.FadeInScreen
// (Final, Native, Private)

void AOfferingSequenceManager::FadeInScreen()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.OfferingSequenceManager.FadeInScreen");

	AOfferingSequenceManager_FadeInScreen_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.OfferingSequenceAssets.PlaySmoke
// (Event, Public, BlueprintEvent)

void AOfferingSequenceAssets::PlaySmoke()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.OfferingSequenceAssets.PlaySmoke");

	AOfferingSequenceAssets_PlaySmoke_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.OfferingSequenceAssets.PlayFadeOut
// (Event, Public, BlueprintEvent)

void AOfferingSequenceAssets::PlayFadeOut()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.OfferingSequenceAssets.PlayFadeOut");

	AOfferingSequenceAssets_PlayFadeOut_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.OfferingSequenceAssets.PlayFadeIn
// (Event, Public, BlueprintEvent)

void AOfferingSequenceAssets::PlayFadeIn()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.OfferingSequenceAssets.PlayFadeIn");

	AOfferingSequenceAssets_PlayFadeIn_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.BearTrapOutlineUpdateStrategy.SetOwningBearTrapMapActorComponent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UMapActorComponent*      MapActorComponent              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UBearTrapOutlineUpdateStrategy::SetOwningBearTrapMapActorComponent(class UMapActorComponent* MapActorComponent)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.BearTrapOutlineUpdateStrategy.SetOwningBearTrapMapActorComponent");

	UBearTrapOutlineUpdateStrategy_SetOwningBearTrapMapActorComponent_Params params;
	params.MapActorComponent = MapActorComponent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.BearTrapOutlineUpdateStrategy.SetOwningBearTrapIsBroken
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           isBroken                       (Parm, ZeroConstructor, IsPlainOldData)

void UBearTrapOutlineUpdateStrategy::SetOwningBearTrapIsBroken(bool isBroken)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.BearTrapOutlineUpdateStrategy.SetOwningBearTrapIsBroken");

	UBearTrapOutlineUpdateStrategy_SetOwningBearTrapIsBroken_Params params;
	params.isBroken = isBroken;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.RBTOutlineUpdateStrategy.IsRevealedToLocalPlayer_BP
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class ADBDPlayer*              Player                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool URBTOutlineUpdateStrategy::IsRevealedToLocalPlayer_BP(class ADBDPlayer* Player)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.RBTOutlineUpdateStrategy.IsRevealedToLocalPlayer_BP");

	URBTOutlineUpdateStrategy_IsRevealedToLocalPlayer_BP_Params params;
	params.Player = Player;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.VaultableOutlineUpdateStrategy.SetCanBeRevealedToLocalPlayer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           canBeRevealedToLocalPlayer     (Parm, ZeroConstructor, IsPlainOldData)

void UVaultableOutlineUpdateStrategy::SetCanBeRevealedToLocalPlayer(bool canBeRevealedToLocalPlayer)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.VaultableOutlineUpdateStrategy.SetCanBeRevealedToLocalPlayer");

	UVaultableOutlineUpdateStrategy_SetCanBeRevealedToLocalPlayer_Params params;
	params.canBeRevealedToLocalPlayer = canBeRevealedToLocalPlayer;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.GeneratorOutlineUpdateStrategy.SetRevealedColorToSurvivor
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FLinearColor            newColor                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)

void UGeneratorOutlineUpdateStrategy::SetRevealedColorToSurvivor(const struct FLinearColor& newColor)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.GeneratorOutlineUpdateStrategy.SetRevealedColorToSurvivor");

	UGeneratorOutlineUpdateStrategy_SetRevealedColorToSurvivor_Params params;
	params.newColor = newColor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.GeneratorOutlineUpdateStrategy.SetRevealedColorToSlasher
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FLinearColor            newColor                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)

void UGeneratorOutlineUpdateStrategy::SetRevealedColorToSlasher(const struct FLinearColor& newColor)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.GeneratorOutlineUpdateStrategy.SetRevealedColorToSlasher");

	UGeneratorOutlineUpdateStrategy_SetRevealedColorToSlasher_Params params;
	params.newColor = newColor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.GeneratorOutlineUpdateStrategy.ResetRevealedColorToSlasher
// (Final, Native, Public, BlueprintCallable)

void UGeneratorOutlineUpdateStrategy::ResetRevealedColorToSlasher()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.GeneratorOutlineUpdateStrategy.ResetRevealedColorToSlasher");

	UGeneratorOutlineUpdateStrategy_ResetRevealedColorToSlasher_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.SurvivorOutlineUpdateStrategy.SetTrappedIconActive
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           Value                          (Parm, ZeroConstructor, IsPlainOldData)

void USurvivorOutlineUpdateStrategy::SetTrappedIconActive(bool Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.SurvivorOutlineUpdateStrategy.SetTrappedIconActive");

	USurvivorOutlineUpdateStrategy_SetTrappedIconActive_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.SurvivorOutlineUpdateStrategy.IsActivelyHidingAuraFromKiller
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ACamperPlayer*           subject                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// class ASlasherPlayer*          witness                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool USurvivorOutlineUpdateStrategy::IsActivelyHidingAuraFromKiller(class ACamperPlayer* subject, class ASlasherPlayer* witness)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.SurvivorOutlineUpdateStrategy.IsActivelyHidingAuraFromKiller");

	USurvivorOutlineUpdateStrategy_IsActivelyHidingAuraFromKiller_Params params;
	params.subject = subject;
	params.witness = witness;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.PerkManager.HasPerkModifierOfType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayTag            Type                           (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPerkManager::HasPerkModifierOfType(const struct FGameplayTag& Type)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.PerkManager.HasPerkModifierOfType");

	UPerkManager_HasPerkModifierOfType_Params params;
	params.Type = Type;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.PerkManager.HasPerkFlag
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayTag            flag                           (Parm)
// TEnumAsByte<EGameplayModifierSource> Filter                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPerkManager::HasPerkFlag(const struct FGameplayTag& flag, TEnumAsByte<EGameplayModifierSource> Filter)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.PerkManager.HasPerkFlag");

	UPerkManager_HasPerkFlag_Params params;
	params.flag = flag;
	params.Filter = Filter;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.PerkManager.HasAnyEffectWithID
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FName                   ID                             (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPerkManager::HasAnyEffectWithID(const struct FName& ID)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.PerkManager.HasAnyEffectWithID");

	UPerkManager_HasAnyEffectWithID_Params params;
	params.ID = ID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.PerkManager.HasAnyAddonWithTag
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FName                   Tag                            (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPerkManager::HasAnyAddonWithTag(const struct FName& Tag)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.PerkManager.HasAnyAddonWithTag");

	UPerkManager_HasAnyAddonWithTag_Params params;
	params.Tag = Tag;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.PerkManager.HasAllCharacterPerksEquipped
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPerkManager::HasAllCharacterPerksEquipped()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.PerkManager.HasAllCharacterPerksEquipped");

	UPerkManager_HasAllCharacterPerksEquipped_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.PerkManager.GetStatusEffect
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FName                   ID                             (Parm, ZeroConstructor, IsPlainOldData)
// class UStatusEffect*           ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UStatusEffect* UPerkManager::GetStatusEffect(const struct FName& ID)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.PerkManager.GetStatusEffect");

	UPerkManager_GetStatusEffect_Params params;
	params.ID = ID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.PerkManager.GetSourceWithModifier
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayTag            Type                           (Parm)
// TEnumAsByte<EGameplayModifierSource> Filter                         (Parm, ZeroConstructor, IsPlainOldData)
// class UGameplayModifierContainer* ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UGameplayModifierContainer* UPerkManager::GetSourceWithModifier(const struct FGameplayTag& Type, TEnumAsByte<EGameplayModifierSource> Filter)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.PerkManager.GetSourceWithModifier");

	UPerkManager_GetSourceWithModifier_Params params;
	params.Type = Type;
	params.Filter = Filter;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.PerkManager.GetSourceWithFlag
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayTag            flag                           (Parm)
// TEnumAsByte<EGameplayModifierSource> Filter                         (Parm, ZeroConstructor, IsPlainOldData)
// class UGameplayModifierContainer* ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UGameplayModifierContainer* UPerkManager::GetSourceWithFlag(const struct FGameplayTag& flag, TEnumAsByte<EGameplayModifierSource> Filter)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.PerkManager.GetSourceWithFlag");

	UPerkManager_GetSourceWithFlag_Params params;
	params.flag = flag;
	params.Filter = Filter;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.PerkManager.GetPerkModifierMinValue
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayTag            Type                           (Parm)
// float                          startValue                     (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UPerkManager::GetPerkModifierMinValue(const struct FGameplayTag& Type, float startValue)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.PerkManager.GetPerkModifierMinValue");

	UPerkManager_GetPerkModifierMinValue_Params params;
	params.Type = Type;
	params.startValue = startValue;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.PerkManager.GetPerkModifierMaxValue
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayTag            Type                           (Parm)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UPerkManager::GetPerkModifierMaxValue(const struct FGameplayTag& Type)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.PerkManager.GetPerkModifierMaxValue");

	UPerkManager_GetPerkModifierMaxValue_Params params;
	params.Type = Type;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.PerkManager.GetPerkModifier
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayTag            Type                           (Parm)
// TEnumAsByte<EGameplayModifierSource> Filter                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UPerkManager::GetPerkModifier(const struct FGameplayTag& Type, TEnumAsByte<EGameplayModifierSource> Filter)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.PerkManager.GetPerkModifier");

	UPerkManager_GetPerkModifier_Params params;
	params.Type = Type;
	params.Filter = Filter;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.PerkManager.GetPerk
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FName                   ID                             (Parm, ZeroConstructor, IsPlainOldData)
// class UPerk*                   ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UPerk* UPerkManager::GetPerk(const struct FName& ID)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.PerkManager.GetPerk");

	UPerkManager_GetPerk_Params params;
	params.ID = ID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.PerkManager.GetMultiplicativeModifierValueWithCompoundNegative
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayTag            Type                           (Parm)
// TEnumAsByte<EGameplayModifierSource> Filter                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UPerkManager::GetMultiplicativeModifierValueWithCompoundNegative(const struct FGameplayTag& Type, TEnumAsByte<EGameplayModifierSource> Filter)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.PerkManager.GetMultiplicativeModifierValueWithCompoundNegative");

	UPerkManager_GetMultiplicativeModifierValueWithCompoundNegative_Params params;
	params.Type = Type;
	params.Filter = Filter;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.PerkManager.GetMultiplicativeModifierValue
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayTag            Type                           (Parm)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UPerkManager::GetMultiplicativeModifierValue(const struct FGameplayTag& Type)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.PerkManager.GetMultiplicativeModifierValue");

	UPerkManager_GetMultiplicativeModifierValue_Params params;
	params.Type = Type;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.PigAnalytics.RecordRBTSearch
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class ACamperPlayer*           searchingPlayer                (Parm, ZeroConstructor, IsPlainOldData)
// bool                           success                        (Parm, ZeroConstructor, IsPlainOldData)

void UPigAnalytics::STATIC_RecordRBTSearch(class ACamperPlayer* searchingPlayer, bool success)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.PigAnalytics.RecordRBTSearch");

	UPigAnalytics_RecordRBTSearch_Params params;
	params.searchingPlayer = searchingPlayer;
	params.success = success;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.PigAnalytics.OnRBTAttached_Analytics
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class ASlasherPlayer*          attacher                       (Parm, ZeroConstructor, IsPlainOldData)
// class ACamperPlayer*           attachee                       (Parm, ZeroConstructor, IsPlainOldData)

void UPigAnalytics::STATIC_OnRBTAttached_Analytics(class ASlasherPlayer* attacher, class ACamperPlayer* attachee)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.PigAnalytics.OnRBTAttached_Analytics");

	UPigAnalytics_OnRBTAttached_Analytics_Params params;
	params.attacher = attacher;
	params.attachee = attachee;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.PigAnalytics.IncrementRBTTimerActived
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class ACamperPlayer*           attachedPlayer                 (Parm, ZeroConstructor, IsPlainOldData)

void UPigAnalytics::STATIC_IncrementRBTTimerActived(class ACamperPlayer* attachedPlayer)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.PigAnalytics.IncrementRBTTimerActived");

	UPigAnalytics_IncrementRBTTimerActived_Params params;
	params.attachedPlayer = attachedPlayer;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.PigAnalytics.IncrementRBTKilledCount
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class ACamperPlayer*           playerKilled                   (Parm, ZeroConstructor, IsPlainOldData)
// bool                           killedByExecutionZone          (Parm, ZeroConstructor, IsPlainOldData)

void UPigAnalytics::STATIC_IncrementRBTKilledCount(class ACamperPlayer* playerKilled, bool killedByExecutionZone)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.PigAnalytics.IncrementRBTKilledCount");

	UPigAnalytics_IncrementRBTKilledCount_Params params;
	params.playerKilled = playerKilled;
	params.killedByExecutionZone = killedByExecutionZone;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.SkillCheck.ShouldDeactivateSkillCheckOnInteractionEnd
// (Final, Native, Public, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool USkillCheck::ShouldDeactivateSkillCheckOnInteractionEnd()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.SkillCheck.ShouldDeactivateSkillCheckOnInteractionEnd");

	USkillCheck_ShouldDeactivateSkillCheckOnInteractionEnd_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.SkillCheck.Server_SetInteraction
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// class UChargeableInteractionDefinition* Interaction                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void USkillCheck::Server_SetInteraction(class UChargeableInteractionDefinition* Interaction)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.SkillCheck.Server_SetInteraction");

	USkillCheck_Server_SetInteraction_Params params;
	params.Interaction = Interaction;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.SkillCheck.Server_OnSkillCheckSuccess
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// bool                           Bonus                          (Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<ESkillCheckCustomType> Type                           (Parm, ZeroConstructor, IsPlainOldData)

void USkillCheck::Server_OnSkillCheckSuccess(bool Bonus, TEnumAsByte<ESkillCheckCustomType> Type)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.SkillCheck.Server_OnSkillCheckSuccess");

	USkillCheck_Server_OnSkillCheckSuccess_Params params;
	params.Bonus = Bonus;
	params.Type = Type;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.SkillCheck.Server_OnSkillCheckFailure
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// bool                           hadInput                       (Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<ESkillCheckCustomType> Type                           (Parm, ZeroConstructor, IsPlainOldData)

void USkillCheck::Server_OnSkillCheckFailure(bool hadInput, TEnumAsByte<ESkillCheckCustomType> Type)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.SkillCheck.Server_OnSkillCheckFailure");

	USkillCheck_Server_OnSkillCheckFailure_Params params;
	params.hadInput = hadInput;
	params.Type = Type;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.SkillCheck.Multicast_SkillCheckResponse
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
// Parameters:
// bool                           hadInput                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           success                        (Parm, ZeroConstructor, IsPlainOldData)
// bool                           Bonus                          (Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<ESkillCheckCustomType> Type                           (Parm, ZeroConstructor, IsPlainOldData)
// bool                           TriggerLoudNoise               (Parm, ZeroConstructor, IsPlainOldData)
// class UChargeableInteractionDefinition* Interaction                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void USkillCheck::Multicast_SkillCheckResponse(bool hadInput, bool success, bool Bonus, TEnumAsByte<ESkillCheckCustomType> Type, bool TriggerLoudNoise, class UChargeableInteractionDefinition* Interaction)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.SkillCheck.Multicast_SkillCheckResponse");

	USkillCheck_Multicast_SkillCheckResponse_Params params;
	params.hadInput = hadInput;
	params.success = success;
	params.Bonus = Bonus;
	params.Type = Type;
	params.TriggerLoudNoise = TriggerLoudNoise;
	params.Interaction = Interaction;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.SkillCheck.ActivateSkillCheck
// (Final, Native, Public)
// Parameters:
// class UInteractionDefinition*  Interaction                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// float                          Delay                          (Parm, ZeroConstructor, IsPlainOldData)

void USkillCheck::ActivateSkillCheck(class UInteractionDefinition* Interaction, float Delay)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.SkillCheck.ActivateSkillCheck");

	USkillCheck_ActivateSkillCheck_Params params;
	params.Interaction = Interaction;
	params.Delay = Delay;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.SkillCheck.ActivateCustomSkillCheck
// (Final, Native, Public)
// Parameters:
// TEnumAsByte<ESkillCheckCustomType> Type                           (Parm, ZeroConstructor, IsPlainOldData)
// float                          Delay                          (Parm, ZeroConstructor, IsPlainOldData)

void USkillCheck::ActivateCustomSkillCheck(TEnumAsByte<ESkillCheckCustomType> Type, float Delay)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.SkillCheck.ActivateCustomSkillCheck");

	USkillCheck_ActivateCustomSkillCheck_Params params;
	params.Type = Type;
	params.Delay = Delay;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.PlayerInteractionHandler.UnPauseSkillCheckTimer
// (Final, Native, Public, BlueprintCallable)

void UPlayerInteractionHandler::UnPauseSkillCheckTimer()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.PlayerInteractionHandler.UnPauseSkillCheckTimer");

	UPlayerInteractionHandler_UnPauseSkillCheckTimer_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.PlayerInteractionHandler.TriggerSkillCheck
// (Final, Native, Public, BlueprintCallable)

void UPlayerInteractionHandler::TriggerSkillCheck()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.PlayerInteractionHandler.TriggerSkillCheck");

	UPlayerInteractionHandler_TriggerSkillCheck_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.PlayerInteractionHandler.StartCustomSkillCheck
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<ESkillCheckCustomType> Type                           (Parm, ZeroConstructor, IsPlainOldData)
// float                          Delay                          (Parm, ZeroConstructor, IsPlainOldData)

void UPlayerInteractionHandler::StartCustomSkillCheck(TEnumAsByte<ESkillCheckCustomType> Type, float Delay)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.PlayerInteractionHandler.StartCustomSkillCheck");

	UPlayerInteractionHandler_StartCustomSkillCheck_Params params;
	params.Type = Type;
	params.Delay = Delay;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.PlayerInteractionHandler.SetSkillCheckTimer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          Delay                          (Parm, ZeroConstructor, IsPlainOldData)

void UPlayerInteractionHandler::SetSkillCheckTimer(float Delay)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.PlayerInteractionHandler.SetSkillCheckTimer");

	UPlayerInteractionHandler_SetSkillCheckTimer_Params params;
	params.Delay = Delay;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.PlayerInteractionHandler.SetScanForInteractionsEnabled
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           Enabled                        (Parm, ZeroConstructor, IsPlainOldData)

void UPlayerInteractionHandler::SetScanForInteractionsEnabled(bool Enabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.PlayerInteractionHandler.SetScanForInteractionsEnabled");

	UPlayerInteractionHandler_SetScanForInteractionsEnabled_Params params;
	params.Enabled = Enabled;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.PlayerInteractionHandler.Server_StoreInterruption_Interruptor
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// class ADBDPlayer*              interruptionOtherParty         (Parm, ZeroConstructor, IsPlainOldData)
// class UInterruptionDefinition* InterruptionDefinition         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UPlayerInteractionHandler::Server_StoreInterruption_Interruptor(class ADBDPlayer* interruptionOtherParty, class UInterruptionDefinition* InterruptionDefinition)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.PlayerInteractionHandler.Server_StoreInterruption_Interruptor");

	UPlayerInteractionHandler_Server_StoreInterruption_Interruptor_Params params;
	params.interruptionOtherParty = interruptionOtherParty;
	params.InterruptionDefinition = InterruptionDefinition;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.PlayerInteractionHandler.Server_StoreInteraction
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// TEnumAsByte<EInputInteractionType> InteractionType                (Parm, ZeroConstructor, IsPlainOldData)
// class UInteractionDefinition*  Interaction                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UPlayerInteractionHandler::Server_StoreInteraction(TEnumAsByte<EInputInteractionType> InteractionType, class UInteractionDefinition* Interaction)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.PlayerInteractionHandler.Server_StoreInteraction");

	UPlayerInteractionHandler_Server_StoreInteraction_Params params;
	params.InteractionType = InteractionType;
	params.Interaction = Interaction;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.PlayerInteractionHandler.Server_RequestInterruption_Interruptor
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)

void UPlayerInteractionHandler::Server_RequestInterruption_Interruptor()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.PlayerInteractionHandler.Server_RequestInterruption_Interruptor");

	UPlayerInteractionHandler_Server_RequestInterruption_Interruptor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.PlayerInteractionHandler.Server_RequestInteraction
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)

void UPlayerInteractionHandler::Server_RequestInteraction()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.PlayerInteractionHandler.Server_RequestInteraction");

	UPlayerInteractionHandler_Server_RequestInteraction_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.PlayerInteractionHandler.Server_EndInteraction
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class UInteractionDefinition*  Interaction                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UPlayerInteractionHandler::Server_EndInteraction(class UInteractionDefinition* Interaction)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.PlayerInteractionHandler.Server_EndInteraction");

	UPlayerInteractionHandler_Server_EndInteraction_Params params;
	params.Interaction = Interaction;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.PlayerInteractionHandler.Server_DebugRequestInteraction
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// class FString                  interactionName                (Parm, ZeroConstructor)
// class FString                  InteractorName                 (Parm, ZeroConstructor)
// class FString                  interactableName               (Parm, ZeroConstructor)

void UPlayerInteractionHandler::Server_DebugRequestInteraction(const class FString& interactionName, const class FString& InteractorName, const class FString& interactableName)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.PlayerInteractionHandler.Server_DebugRequestInteraction");

	UPlayerInteractionHandler_Server_DebugRequestInteraction_Params params;
	params.interactionName = interactionName;
	params.InteractorName = InteractorName;
	params.interactableName = interactableName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.PlayerInteractionHandler.Server_AnswerInterruption_Interruptee
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// bool                           success                        (Parm, ZeroConstructor, IsPlainOldData)

void UPlayerInteractionHandler::Server_AnswerInterruption_Interruptee(bool success)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.PlayerInteractionHandler.Server_AnswerInterruption_Interruptee");

	UPlayerInteractionHandler_Server_AnswerInterruption_Interruptee_Params params;
	params.success = success;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.PlayerInteractionHandler.ResetSuccessiveSkillCheckCount
// (Final, Native, Public, BlueprintCallable)

void UPlayerInteractionHandler::ResetSuccessiveSkillCheckCount()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.PlayerInteractionHandler.ResetSuccessiveSkillCheckCount");

	UPlayerInteractionHandler_ResetSuccessiveSkillCheckCount_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.PlayerInteractionHandler.RemoveInteraction
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UInteractionDefinition*  Interaction                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UPlayerInteractionHandler::RemoveInteraction(class UInteractionDefinition* Interaction)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.PlayerInteractionHandler.RemoveInteraction");

	UPlayerInteractionHandler_RemoveInteraction_Params params;
	params.Interaction = Interaction;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.PlayerInteractionHandler.PauseSkillCheckTimer
// (Final, Native, Public, BlueprintCallable)

void UPlayerInteractionHandler::PauseSkillCheckTimer()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.PlayerInteractionHandler.PauseSkillCheckTimer");

	UPlayerInteractionHandler_PauseSkillCheckTimer_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.PlayerInteractionHandler.NumInteractionsInZone
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UPlayerInteractionHandler::NumInteractionsInZone()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.PlayerInteractionHandler.NumInteractionsInZone");

	UPlayerInteractionHandler_NumInteractionsInZone_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.PlayerInteractionHandler.Multicast_StoreInterruption_Interruptor
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private, NetValidate)
// Parameters:
// class ADBDPlayer*              interruptionOtherParty         (Parm, ZeroConstructor, IsPlainOldData)
// class UInterruptionDefinition* InterruptionDefinition         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UPlayerInteractionHandler::Multicast_StoreInterruption_Interruptor(class ADBDPlayer* interruptionOtherParty, class UInterruptionDefinition* InterruptionDefinition)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.PlayerInteractionHandler.Multicast_StoreInterruption_Interruptor");

	UPlayerInteractionHandler_Multicast_StoreInterruption_Interruptor_Params params;
	params.interruptionOtherParty = interruptionOtherParty;
	params.InterruptionDefinition = InterruptionDefinition;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.PlayerInteractionHandler.Multicast_StoreInteraction
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private, NetValidate)
// Parameters:
// TEnumAsByte<EInputInteractionType> InteractionType                (Parm, ZeroConstructor, IsPlainOldData)
// class UInteractionDefinition*  Interaction                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UPlayerInteractionHandler::Multicast_StoreInteraction(TEnumAsByte<EInputInteractionType> InteractionType, class UInteractionDefinition* Interaction)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.PlayerInteractionHandler.Multicast_StoreInteraction");

	UPlayerInteractionHandler_Multicast_StoreInteraction_Params params;
	params.InteractionType = InteractionType;
	params.Interaction = Interaction;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.PlayerInteractionHandler.Multicast_RequestInterruption_Interruptee
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private, NetValidate)
// Parameters:
// class ADBDPlayer*              interruptionOtherParty         (Parm, ZeroConstructor, IsPlainOldData)
// class UInterruptionDefinition* InterruptionDefinition         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UPlayerInteractionHandler::Multicast_RequestInterruption_Interruptee(class ADBDPlayer* interruptionOtherParty, class UInterruptionDefinition* InterruptionDefinition)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.PlayerInteractionHandler.Multicast_RequestInterruption_Interruptee");

	UPlayerInteractionHandler_Multicast_RequestInterruption_Interruptee_Params params;
	params.interruptionOtherParty = interruptionOtherParty;
	params.InterruptionDefinition = InterruptionDefinition;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.PlayerInteractionHandler.Multicast_InterruptionRequestResult_Interruptor
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private, NetValidate)
// Parameters:
// bool                           success                        (Parm, ZeroConstructor, IsPlainOldData)

void UPlayerInteractionHandler::Multicast_InterruptionRequestResult_Interruptor(bool success)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.PlayerInteractionHandler.Multicast_InterruptionRequestResult_Interruptor");

	UPlayerInteractionHandler_Multicast_InterruptionRequestResult_Interruptor_Params params;
	params.success = success;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.PlayerInteractionHandler.Multicast_InteractionRequestResult
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private, NetValidate)
// Parameters:
// bool                           success                        (Parm, ZeroConstructor, IsPlainOldData)

void UPlayerInteractionHandler::Multicast_InteractionRequestResult(bool success)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.PlayerInteractionHandler.Multicast_InteractionRequestResult");

	UPlayerInteractionHandler_Multicast_InteractionRequestResult_Params params;
	params.success = success;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.PlayerInteractionHandler.IncrementSuccessiveSkillCheckCount
// (Final, Native, Public, BlueprintCallable)

void UPlayerInteractionHandler::IncrementSuccessiveSkillCheckCount()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.PlayerInteractionHandler.IncrementSuccessiveSkillCheckCount");

	UPlayerInteractionHandler_IncrementSuccessiveSkillCheckCount_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.PlayerInteractionHandler.HasAvailableInteraction
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<EInputInteractionType> InteractionType                (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPlayerInteractionHandler::HasAvailableInteraction(TEnumAsByte<EInputInteractionType> InteractionType)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.PlayerInteractionHandler.HasAvailableInteraction");

	UPlayerInteractionHandler_HasAvailableInteraction_Params params;
	params.InteractionType = InteractionType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.PlayerInteractionHandler.HasActiveSkillCheck
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPlayerInteractionHandler::HasActiveSkillCheck()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.PlayerInteractionHandler.HasActiveSkillCheck");

	UPlayerInteractionHandler_HasActiveSkillCheck_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.PlayerInteractionHandler.GetMultiplicativeSkillCheckProbabilityModifier
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UPlayerInteractionHandler::GetMultiplicativeSkillCheckProbabilityModifier()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.PlayerInteractionHandler.GetMultiplicativeSkillCheckProbabilityModifier");

	UPlayerInteractionHandler_GetMultiplicativeSkillCheckProbabilityModifier_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.PlayerInteractionHandler.GetCurrentInteraction
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UInteractionDefinition*  ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UInteractionDefinition* UPlayerInteractionHandler::GetCurrentInteraction()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.PlayerInteractionHandler.GetCurrentInteraction");

	UPlayerInteractionHandler_GetCurrentInteraction_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.PlayerInteractionHandler.GetAvailableInteraction
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TEnumAsByte<EInputInteractionType> InteractionType                (Parm, ZeroConstructor, IsPlainOldData)
// class UInteractionDefinition*  ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UInteractionDefinition* UPlayerInteractionHandler::GetAvailableInteraction(TEnumAsByte<EInputInteractionType> InteractionType)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.PlayerInteractionHandler.GetAvailableInteraction");

	UPlayerInteractionHandler_GetAvailableInteraction_Params params;
	params.InteractionType = InteractionType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.PlayerInteractionHandler.GetAdditiveSkillCheckProbabilityModifier
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UPlayerInteractionHandler::GetAdditiveSkillCheckProbabilityModifier()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.PlayerInteractionHandler.GetAdditiveSkillCheckProbabilityModifier");

	UPlayerInteractionHandler_GetAdditiveSkillCheckProbabilityModifier_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.PlayerInteractionHandler.ForceBeginSkillCheckProgress
// (Final, Native, Public, BlueprintCallable)

void UPlayerInteractionHandler::ForceBeginSkillCheckProgress()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.PlayerInteractionHandler.ForceBeginSkillCheckProgress");

	UPlayerInteractionHandler_ForceBeginSkillCheckProgress_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.PlayerInteractionHandler.Client_NotifyChargeCompleted
// (Net, NetReliable, Native, Event, Public, NetClient, NetValidate)
// Parameters:
// class UInteractionDefinition*  Interaction                    (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UPlayerInteractionHandler::Client_NotifyChargeCompleted(class UInteractionDefinition* Interaction)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.PlayerInteractionHandler.Client_NotifyChargeCompleted");

	UPlayerInteractionHandler_Client_NotifyChargeCompleted_Params params;
	params.Interaction = Interaction;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.PlayerInteractionHandler.CleanInteractionArray
// (Final, Native, Public)
// Parameters:
// class AActor*                  DestroyedActor                 (Parm, ZeroConstructor, IsPlainOldData)

void UPlayerInteractionHandler::CleanInteractionArray(class AActor* DestroyedActor)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.PlayerInteractionHandler.CleanInteractionArray");

	UPlayerInteractionHandler_CleanInteractionArray_Params params;
	params.DestroyedActor = DestroyedActor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.PlayerInteractionHandler.CanPerformInteraction
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                  interactionName                (Parm, ZeroConstructor)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPlayerInteractionHandler::CanPerformInteraction(const class FString& interactionName)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.PlayerInteractionHandler.CanPerformInteraction");

	UPlayerInteractionHandler_CanPerformInteraction_Params params;
	params.interactionName = interactionName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.PlayerInteractionHandler.Broadcast_Multicast_ConfirmChargedCompleted
// (Net, NetReliable, Native, Event, NetMulticast, Public, NetValidate)
// Parameters:
// bool                           chargeComplete                 (Parm, ZeroConstructor, IsPlainOldData)

void UPlayerInteractionHandler::Broadcast_Multicast_ConfirmChargedCompleted(bool chargeComplete)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.PlayerInteractionHandler.Broadcast_Multicast_ConfirmChargedCompleted");

	UPlayerInteractionHandler_Broadcast_Multicast_ConfirmChargedCompleted_Params params;
	params.chargeComplete = chargeComplete;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.PlayerInteractionHandler.Broadcast_InteractionPlayerProperties_Multicast
// (Net, NetReliable, Native, Event, NetMulticast, Protected, NetValidate)
// Parameters:
// struct FInteractionPlayerProperties playerProperties               (Parm)

void UPlayerInteractionHandler::Broadcast_InteractionPlayerProperties_Multicast(const struct FInteractionPlayerProperties& playerProperties)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.PlayerInteractionHandler.Broadcast_InteractionPlayerProperties_Multicast");

	UPlayerInteractionHandler_Broadcast_InteractionPlayerProperties_Multicast_Params params;
	params.playerProperties = playerProperties;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.PlayerInteractionHandler.Broadcast_InteractionPlayerProperties
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// struct FInteractionPlayerProperties playerProperties               (Parm)

void UPlayerInteractionHandler::Broadcast_InteractionPlayerProperties(const struct FInteractionPlayerProperties& playerProperties)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.PlayerInteractionHandler.Broadcast_InteractionPlayerProperties");

	UPlayerInteractionHandler_Broadcast_InteractionPlayerProperties_Params params;
	params.playerProperties = playerProperties;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.PlayerInteractionHandler.Broadcast_ConfirmChargedCompleted
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// bool                           chargeComplete                 (Parm, ZeroConstructor, IsPlainOldData)

void UPlayerInteractionHandler::Broadcast_ConfirmChargedCompleted(bool chargeComplete)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.PlayerInteractionHandler.Broadcast_ConfirmChargedCompleted");

	UPlayerInteractionHandler_Broadcast_ConfirmChargedCompleted_Params params;
	params.chargeComplete = chargeComplete;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.PlayerInteractionHandler.Authority_ClearPlayerDependency
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ADBDPlayer*              playerDependency               (Parm, ZeroConstructor, IsPlainOldData)

void UPlayerInteractionHandler::Authority_ClearPlayerDependency(class ADBDPlayer* playerDependency)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.PlayerInteractionHandler.Authority_ClearPlayerDependency");

	UPlayerInteractionHandler_Authority_ClearPlayerDependency_Params params;
	params.playerDependency = playerDependency;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.PlayerInteractionHandler.Authority_ClearPlayerDependencies
// (Final, Native, Public, BlueprintCallable)

void UPlayerInteractionHandler::Authority_ClearPlayerDependencies()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.PlayerInteractionHandler.Authority_ClearPlayerDependencies");

	UPlayerInteractionHandler_Authority_ClearPlayerDependencies_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.PlayerInteractionHandler.AddInteraction
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UInteractionDefinition*  Interaction                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UPlayerInteractionHandler::AddInteraction(class UInteractionDefinition* Interaction)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.PlayerInteractionHandler.AddInteraction");

	UPlayerInteractionHandler_AddInteraction_Params params;
	params.Interaction = Interaction;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.ProceduralLevelBuilder.SyncSeeds
// (Final, Native, Private)

void AProceduralLevelBuilder::SyncSeeds()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.ProceduralLevelBuilder.SyncSeeds");

	AProceduralLevelBuilder_SyncSeeds_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.ProceduralLevelBuilder.StartGenerationOnSyncerReady
// (Final, Native, Private)

void AProceduralLevelBuilder::StartGenerationOnSyncerReady()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.ProceduralLevelBuilder.StartGenerationOnSyncerReady");

	AProceduralLevelBuilder_StartGenerationOnSyncerReady_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.ProceduralLevelBuilder.SpawnActor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UClass*                  ActorClass                     (Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<ETileSpawnPointType> spawnPointType                 (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AActor* AProceduralLevelBuilder::SpawnActor(class UClass* ActorClass, TEnumAsByte<ETileSpawnPointType> spawnPointType)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.ProceduralLevelBuilder.SpawnActor");

	AProceduralLevelBuilder_SpawnActor_Params params;
	params.ActorClass = ActorClass;
	params.spawnPointType = spawnPointType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.ProceduralLevelBuilder.OfferingAdjustFog
// (Event, Public, BlueprintEvent)
// Parameters:
// float                          Modifier                       (Parm, ZeroConstructor, IsPlainOldData)

void AProceduralLevelBuilder::OfferingAdjustFog(float Modifier)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.ProceduralLevelBuilder.OfferingAdjustFog");

	AProceduralLevelBuilder_OfferingAdjustFog_Params params;
	params.Modifier = Modifier;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.ProceduralLevelBuilder.Multicast_DebugShareGenerationData
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
// Parameters:
// struct FGenerationParams       usedParams                     (Parm)

void AProceduralLevelBuilder::Multicast_DebugShareGenerationData(const struct FGenerationParams& usedParams)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.ProceduralLevelBuilder.Multicast_DebugShareGenerationData");

	AProceduralLevelBuilder_Multicast_DebugShareGenerationData_Params params;
	params.usedParams = usedParams;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.ProceduralLevelBuilder.BuildFromSeed
// (Final, Native, Private)

void AProceduralLevelBuilder::BuildFromSeed()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.ProceduralLevelBuilder.BuildFromSeed");

	AProceduralLevelBuilder_BuildFromSeed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.ProjectedUserInterface.UpdateMouseInput
// (Final, Native, Public, BlueprintCallable)

void AProjectedUserInterface::UpdateMouseInput()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.ProjectedUserInterface.UpdateMouseInput");

	AProjectedUserInterface_UpdateMouseInput_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.ProjectedUserInterface.InitializeComponents
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UStaticMeshComponent*    projectionPanel                (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void AProjectedUserInterface::InitializeComponents(class UStaticMeshComponent* projectionPanel)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.ProjectedUserInterface.InitializeComponents");

	AProjectedUserInterface_InitializeComponents_Params params;
	params.projectionPanel = projectionPanel;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.PulldownAnalytics.IncrementPalletStun
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class ACamperPlayer*           survivor                       (Parm, ZeroConstructor, IsPlainOldData)

void UPulldownAnalytics::STATIC_IncrementPalletStun(class ACamperPlayer* survivor)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.PulldownAnalytics.IncrementPalletStun");

	UPulldownAnalytics_IncrementPalletStun_Params params;
	params.survivor = survivor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.PulldownAnalytics.IncrementPalletSpawned
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                  Actor                          (Parm, ZeroConstructor, IsPlainOldData)

void UPulldownAnalytics::STATIC_IncrementPalletSpawned(class AActor* Actor)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.PulldownAnalytics.IncrementPalletSpawned");

	UPulldownAnalytics_IncrementPalletSpawned_Params params;
	params.Actor = Actor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.PulldownAnalytics.IncrementPalletDrop
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class ACamperPlayer*           survivor                       (Parm, ZeroConstructor, IsPlainOldData)

void UPulldownAnalytics::STATIC_IncrementPalletDrop(class ACamperPlayer* survivor)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.PulldownAnalytics.IncrementPalletDrop");

	UPulldownAnalytics_IncrementPalletDrop_Params params;
	params.survivor = survivor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.PulldownAnalytics.IncrementPalletDestroy
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class ASlasherPlayer*          killer                         (Parm, ZeroConstructor, IsPlainOldData)

void UPulldownAnalytics::STATIC_IncrementPalletDestroy(class ASlasherPlayer* killer)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.PulldownAnalytics.IncrementPalletDestroy");

	UPulldownAnalytics_IncrementPalletDestroy_Params params;
	params.killer = killer;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.RitualHandlerComponent.ReceiveGameEvent
// (Final, Native, Public)
// Parameters:
// TEnumAsByte<EDBDScoreTypes>    ScoreType                      (Parm, ZeroConstructor, IsPlainOldData)
// float                          amount                         (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  Instigator                     (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  Target                         (Parm, ZeroConstructor, IsPlainOldData)

void URitualHandlerComponent::ReceiveGameEvent(TEnumAsByte<EDBDScoreTypes> ScoreType, float amount, class AActor* Instigator, class AActor* Target)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.RitualHandlerComponent.ReceiveGameEvent");

	URitualHandlerComponent_ReceiveGameEvent_Params params;
	params.ScoreType = ScoreType;
	params.amount = amount;
	params.Instigator = Instigator;
	params.Target = Target;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.GenericPopupScreen.OnChoiceSelected
// (Final, Native, Private)
// Parameters:
// int                            selectedButtonType             (Parm, ZeroConstructor, IsPlainOldData)

void UGenericPopupScreen::OnChoiceSelected(int selectedButtonType)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.GenericPopupScreen.OnChoiceSelected");

	UGenericPopupScreen_OnChoiceSelected_Params params;
	params.selectedButtonType = selectedButtonType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.CharacterInfoScreen.OnBackButtonClick
// (Final, Native, Private)

void UCharacterInfoScreen::OnBackButtonClick()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CharacterInfoScreen.OnBackButtonClick");

	UCharacterInfoScreen_OnBackButtonClick_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.CreditsScreen.SetCreditsHtml
// (Final, Native, Public, Const)
// Parameters:
// class FString                  CreditsHtml                    (Parm, ZeroConstructor)

void UCreditsScreen::SetCreditsHtml(const class FString& CreditsHtml)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CreditsScreen.SetCreditsHtml");

	UCreditsScreen_SetCreditsHtml_Params params;
	params.CreditsHtml = CreditsHtml;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.CreditsScreen.ScrollCreditsScreen
// (Final, Native, Public, Const)
// Parameters:
// float                          scrollAmount                   (Parm, ZeroConstructor, IsPlainOldData)

void UCreditsScreen::ScrollCreditsScreen(float scrollAmount)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CreditsScreen.ScrollCreditsScreen");

	UCreditsScreen_ScrollCreditsScreen_Params params;
	params.scrollAmount = scrollAmount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DailyRitualsScreen.OnRemoveRitual
// (Final, Native, Private)
// Parameters:
// class FString                  ID                             (Parm, ZeroConstructor)

void UDailyRitualsScreen::OnRemoveRitual(const class FString& ID)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DailyRitualsScreen.OnRemoveRitual");

	UDailyRitualsScreen_OnRemoveRitual_Params params;
	params.ID = ID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DailyRitualsScreen.OnClosed
// (Final, Native, Private)

void UDailyRitualsScreen::OnClosed()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DailyRitualsScreen.OnClosed");

	UDailyRitualsScreen_OnClosed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DailyRitualsScreen.OnClaimRitual
// (Final, Native, Private)
// Parameters:
// class FString                  ID                             (Parm, ZeroConstructor)

void UDailyRitualsScreen::OnClaimRitual(const class FString& ID)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DailyRitualsScreen.OnClaimRitual");

	UDailyRitualsScreen_OnClaimRitual_Params params;
	params.ID = ID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.DailyRitualsScreen.OnClaimAllRituals
// (Final, Native, Private)

void UDailyRitualsScreen::OnClaimAllRituals()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.DailyRitualsScreen.OnClaimAllRituals");

	UDailyRitualsScreen_OnClaimAllRituals_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.HudScreen.OnTutorialTallyNext
// (Final, Native, Private)

void UHudScreen::OnTutorialTallyNext()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.HudScreen.OnTutorialTallyNext");

	UHudScreen_OnTutorialTallyNext_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.HudScreen.OnTutorialTallyLeave
// (Final, Native, Private)

void UHudScreen::OnTutorialTallyLeave()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.HudScreen.OnTutorialTallyLeave");

	UHudScreen_OnTutorialTallyLeave_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.HudScreen.OnTutorialNotificationClosedByUserInput
// (Final, Native, Private)

void UHudScreen::OnTutorialNotificationClosedByUserInput()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.HudScreen.OnTutorialNotificationClosedByUserInput");

	UHudScreen_OnTutorialNotificationClosedByUserInput_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.HudScreen.OnQuitGameButtonClick
// (Final, Native, Private)

void UHudScreen::OnQuitGameButtonClick()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.HudScreen.OnQuitGameButtonClick");

	UHudScreen_OnQuitGameButtonClick_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.HudScreen.OnPreviousButtonClick
// (Final, Native, Private)

void UHudScreen::OnPreviousButtonClick()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.HudScreen.OnPreviousButtonClick");

	UHudScreen_OnPreviousButtonClick_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.HudScreen.OnNextButtonClick
// (Final, Native, Private)

void UHudScreen::OnNextButtonClick()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.HudScreen.OnNextButtonClick");

	UHudScreen_OnNextButtonClick_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.HudScreen.OnLeaveButtonClick
// (Final, Native, Private)

void UHudScreen::OnLeaveButtonClick()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.HudScreen.OnLeaveButtonClick");

	UHudScreen_OnLeaveButtonClick_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.HudScreen.OnCancelQuitGameButtonClick
// (Final, Native, Private)

void UHudScreen::OnCancelQuitGameButtonClick()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.HudScreen.OnCancelQuitGameButtonClick");

	UHudScreen_OnCancelQuitGameButtonClick_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.LegalMenuScreen.OnDeclineClick
// (Final, Native, Private)

void ULegalMenuScreen::OnDeclineClick()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.LegalMenuScreen.OnDeclineClick");

	ULegalMenuScreen_OnDeclineClick_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.LegalMenuScreen.OnAcceptClick
// (Final, Native, Private)

void ULegalMenuScreen::OnAcceptClick()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.LegalMenuScreen.OnAcceptClick");

	ULegalMenuScreen_OnAcceptClick_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.LoadingScreen.ShowLoadingTip
// (Final, Native, Public, Const)
// Parameters:
// struct FHintData               tipData                        (Parm)

void ULoadingScreen::ShowLoadingTip(const struct FHintData& tipData)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.LoadingScreen.ShowLoadingTip");

	ULoadingScreen_ShowLoadingTip_Params params;
	params.tipData = tipData;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.LoadingScreen.ShowLoadingProgressBar
// (Final, Native, Public, Const)
// Parameters:
// bool                           show                           (Parm, ZeroConstructor, IsPlainOldData)

void ULoadingScreen::ShowLoadingProgressBar(bool show)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.LoadingScreen.ShowLoadingProgressBar");

	ULoadingScreen_ShowLoadingProgressBar_Params params;
	params.show = show;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.LoadingScreen.ShowLoadingImageTips
// (Final, Native, Public, Const)
// Parameters:
// bool                           IsKiller                       (Parm, ZeroConstructor, IsPlainOldData)

void ULoadingScreen::ShowLoadingImageTips(bool IsKiller)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.LoadingScreen.ShowLoadingImageTips");

	ULoadingScreen_ShowLoadingImageTips_Params params;
	params.IsKiller = IsKiller;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.LoadingScreen.SetLoadingProgressValue
// (Final, Native, Public, Const)
// Parameters:
// float                          Value                          (Parm, ZeroConstructor, IsPlainOldData)

void ULoadingScreen::SetLoadingProgressValue(float Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.LoadingScreen.SetLoadingProgressValue");

	ULoadingScreen_SetLoadingProgressValue_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.MatchManagementScreen.OnToggleMatchAccessibility
// (Final, Native, Private)

void UMatchManagementScreen::OnToggleMatchAccessibility()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.MatchManagementScreen.OnToggleMatchAccessibility");

	UMatchManagementScreen_OnToggleMatchAccessibility_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.MatchManagementScreen.OnRemoveMap
// (Final, Native, Private)
// Parameters:
// class FString                  MapId                          (Parm, ZeroConstructor)

void UMatchManagementScreen::OnRemoveMap(const class FString& MapId)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.MatchManagementScreen.OnRemoveMap");

	UMatchManagementScreen_OnRemoveMap_Params params;
	params.MapId = MapId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.MatchManagementScreen.OnPerksSettingsChange
// (Final, Native, Private)
// Parameters:
// int                            Value                          (Parm, ZeroConstructor, IsPlainOldData)

void UMatchManagementScreen::OnPerksSettingsChange(int Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.MatchManagementScreen.OnPerksSettingsChange");

	UMatchManagementScreen_OnPerksSettingsChange_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.MatchManagementScreen.OnOfferingsSettingsChange
// (Final, Native, Private)
// Parameters:
// int                            Value                          (Parm, ZeroConstructor, IsPlainOldData)

void UMatchManagementScreen::OnOfferingsSettingsChange(int Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.MatchManagementScreen.OnOfferingsSettingsChange");

	UMatchManagementScreen_OnOfferingsSettingsChange_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.MatchManagementScreen.OnItemsAndAddonsSettingsChange
// (Final, Native, Private)
// Parameters:
// int                            Value                          (Parm, ZeroConstructor, IsPlainOldData)

void UMatchManagementScreen::OnItemsAndAddonsSettingsChange(int Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.MatchManagementScreen.OnItemsAndAddonsSettingsChange");

	UMatchManagementScreen_OnItemsAndAddonsSettingsChange_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.MatchManagementScreen.OnChooseMapButtonClick
// (Final, Native, Private)

void UMatchManagementScreen::OnChooseMapButtonClick()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.MatchManagementScreen.OnChooseMapButtonClick");

	UMatchManagementScreen_OnChooseMapButtonClick_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.MatchManagementScreen.OnBackToOverviewButtonClick
// (Final, Native, Private)

void UMatchManagementScreen::OnBackToOverviewButtonClick()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.MatchManagementScreen.OnBackToOverviewButtonClick");

	UMatchManagementScreen_OnBackToOverviewButtonClick_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.MatchManagementScreen.OnBackButtonClick
// (Final, Native, Private)

void UMatchManagementScreen::OnBackButtonClick()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.MatchManagementScreen.OnBackButtonClick");

	UMatchManagementScreen_OnBackButtonClick_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.MatchManagementScreen.OnApplyChangesClicked
// (Final, Native, Private)

void UMatchManagementScreen::OnApplyChangesClicked()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.MatchManagementScreen.OnApplyChangesClicked");

	UMatchManagementScreen_OnApplyChangesClicked_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.MatchManagementScreen.OnAllowDlcSettingsClick
// (Final, Native, Private)

void UMatchManagementScreen::OnAllowDlcSettingsClick()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.MatchManagementScreen.OnAllowDlcSettingsClick");

	UMatchManagementScreen_OnAllowDlcSettingsClick_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.MatchManagementScreen.OnAddMap
// (Final, Native, Private)
// Parameters:
// class FString                  MapId                          (Parm, ZeroConstructor)

void UMatchManagementScreen::OnAddMap(const class FString& MapId)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.MatchManagementScreen.OnAddMap");

	UMatchManagementScreen_OnAddMap_Params params;
	params.MapId = MapId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.NavigationScreen.OnToggleChatVisibility
// (Final, Native, Private)

void UNavigationScreen::OnToggleChatVisibility()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.NavigationScreen.OnToggleChatVisibility");

	UNavigationScreen_OnToggleChatVisibility_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.NavigationScreen.OnStartButtonClick
// (Final, Native, Private)

void UNavigationScreen::OnStartButtonClick()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.NavigationScreen.OnStartButtonClick");

	UNavigationScreen_OnStartButtonClick_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.NavigationScreen.OnSettingsClick
// (Final, Native, Private)

void UNavigationScreen::OnSettingsClick()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.NavigationScreen.OnSettingsClick");

	UNavigationScreen_OnSettingsClick_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.NavigationScreen.OnSendChatMsgButtonClick
// (Final, Native, Private)
// Parameters:
// class FString                  Message                        (Parm, ZeroConstructor)

void UNavigationScreen::OnSendChatMsgButtonClick(const class FString& Message)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.NavigationScreen.OnSendChatMsgButtonClick");

	UNavigationScreen_OnSendChatMsgButtonClick_Params params;
	params.Message = Message;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.NavigationScreen.OnReadyButtonClick
// (Final, Native, Private)

void UNavigationScreen::OnReadyButtonClick()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.NavigationScreen.OnReadyButtonClick");

	UNavigationScreen_OnReadyButtonClick_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.NavigationScreen.OnPlayerInfoClick
// (Final, Native, Private)
// Parameters:
// int                            PlayerId                       (Parm, ZeroConstructor, IsPlainOldData)

void UNavigationScreen::OnPlayerInfoClick(int PlayerId)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.NavigationScreen.OnPlayerInfoClick");

	UNavigationScreen_OnPlayerInfoClick_Params params;
	params.PlayerId = PlayerId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.NavigationScreen.OnMatchManagementButtonClick
// (Final, Native, Private)

void UNavigationScreen::OnMatchManagementButtonClick()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.NavigationScreen.OnMatchManagementButtonClick");

	UNavigationScreen_OnMatchManagementButtonClick_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.NavigationScreen.OnInviteFriendClick
// (Final, Native, Private)

void UNavigationScreen::OnInviteFriendClick()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.NavigationScreen.OnInviteFriendClick");

	UNavigationScreen_OnInviteFriendClick_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.NavigationScreen.OnDailyRitualsClick
// (Final, Native, Private)

void UNavigationScreen::OnDailyRitualsClick()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.NavigationScreen.OnDailyRitualsClick");

	UNavigationScreen_OnDailyRitualsClick_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.NavigationScreen.OnChatInputMouseOver
// (Final, Native, Private)
// Parameters:
// int                            isMouseOver                    (Parm, ZeroConstructor, IsPlainOldData)

void UNavigationScreen::OnChatInputMouseOver(int isMouseOver)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.NavigationScreen.OnChatInputMouseOver");

	UNavigationScreen_OnChatInputMouseOver_Params params;
	params.isMouseOver = isMouseOver;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.NavigationScreen.OnCharacterInfoClick
// (Final, Native, Private)

void UNavigationScreen::OnCharacterInfoClick()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.NavigationScreen.OnCharacterInfoClick");

	UNavigationScreen_OnCharacterInfoClick_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.NavigationScreen.OnCancelButtonClick
// (Final, Native, Private)

void UNavigationScreen::OnCancelButtonClick()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.NavigationScreen.OnCancelButtonClick");

	UNavigationScreen_OnCancelButtonClick_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.OverlayMenuScreen.OnTutorialLevelSelected
// (Final, Native, Private)
// Parameters:
// class FString                  tutorialLevelId                (Parm, ZeroConstructor)

void UOverlayMenuScreen::OnTutorialLevelSelected(const class FString& tutorialLevelId)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.OverlayMenuScreen.OnTutorialLevelSelected");

	UOverlayMenuScreen_OnTutorialLevelSelected_Params params;
	params.tutorialLevelId = tutorialLevelId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.OverlayMenuScreen.OnTopicVideoPositioned
// (Final, Native, Private)
// Parameters:
// float                          stageX                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          stageY                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          stageWidth                     (Parm, ZeroConstructor, IsPlainOldData)
// float                          stageHeight                    (Parm, ZeroConstructor, IsPlainOldData)

void UOverlayMenuScreen::OnTopicVideoPositioned(float stageX, float stageY, float stageWidth, float stageHeight)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.OverlayMenuScreen.OnTopicVideoPositioned");

	UOverlayMenuScreen_OnTopicVideoPositioned_Params params;
	params.stageX = stageX;
	params.stageY = stageY;
	params.stageWidth = stageWidth;
	params.stageHeight = stageHeight;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.OverlayMenuScreen.OnTopicVideoChanged
// (Final, Native, Private)
// Parameters:
// class FString                  VideoID                        (Parm, ZeroConstructor)

void UOverlayMenuScreen::OnTopicVideoChanged(const class FString& VideoID)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.OverlayMenuScreen.OnTopicVideoChanged");

	UOverlayMenuScreen_OnTopicVideoChanged_Params params;
	params.VideoID = VideoID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.OverlayMenuScreen.OnSurvivorMouseSensitivityChanged
// (Final, Native, Private)
// Parameters:
// int                            Value                          (Parm, ZeroConstructor, IsPlainOldData)

void UOverlayMenuScreen::OnSurvivorMouseSensitivityChanged(int Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.OverlayMenuScreen.OnSurvivorMouseSensitivityChanged");

	UOverlayMenuScreen_OnSurvivorMouseSensitivityChanged_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.OverlayMenuScreen.OnSurvivorControllerSensitivityChanged
// (Final, Native, Private)
// Parameters:
// int                            Value                          (Parm, ZeroConstructor, IsPlainOldData)

void UOverlayMenuScreen::OnSurvivorControllerSensitivityChanged(int Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.OverlayMenuScreen.OnSurvivorControllerSensitivityChanged");

	UOverlayMenuScreen_OnSurvivorControllerSensitivityChanged_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.OverlayMenuScreen.OnSelectTab
// (Final, Native, Private)
// Parameters:
// int                            tabIndex                       (Parm, ZeroConstructor, IsPlainOldData)

void UOverlayMenuScreen::OnSelectTab(int tabIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.OverlayMenuScreen.OnSelectTab");

	UOverlayMenuScreen_OnSelectTab_Params params;
	params.tabIndex = tabIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.OverlayMenuScreen.OnResolutionClick
// (Final, Native, Private)
// Parameters:
// int                            Value                          (Parm, ZeroConstructor, IsPlainOldData)

void UOverlayMenuScreen::OnResolutionClick(int Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.OverlayMenuScreen.OnResolutionClick");

	UOverlayMenuScreen_OnResolutionClick_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.OverlayMenuScreen.OnResetDefaults
// (Final, Native, Private)
// Parameters:
// class FString                  keyBindingsData                (Parm, ZeroConstructor)
// int                            mustBeGamepadKey               (Parm, ZeroConstructor, IsPlainOldData)

void UOverlayMenuScreen::OnResetDefaults(const class FString& keyBindingsData, int mustBeGamepadKey)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.OverlayMenuScreen.OnResetDefaults");

	UOverlayMenuScreen_OnResetDefaults_Params params;
	params.keyBindingsData = keyBindingsData;
	params.mustBeGamepadKey = mustBeGamepadKey;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.OverlayMenuScreen.OnRequestKeyInput
// (Final, Native, Private)
// Parameters:
// class FString                  Name                           (Parm, ZeroConstructor)
// bool                           isAxis                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          Scale                          (Parm, ZeroConstructor, IsPlainOldData)
// class FString                  Key                            (Parm, ZeroConstructor)

void UOverlayMenuScreen::OnRequestKeyInput(const class FString& Name, bool isAxis, float Scale, const class FString& Key)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.OverlayMenuScreen.OnRequestKeyInput");

	UOverlayMenuScreen_OnRequestKeyInput_Params params;
	params.Name = Name;
	params.isAxis = isAxis;
	params.Scale = Scale;
	params.Key = Key;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.OverlayMenuScreen.OnQuitGameButtonClick
// (Final, Native, Private)

void UOverlayMenuScreen::OnQuitGameButtonClick()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.OverlayMenuScreen.OnQuitGameButtonClick");

	UOverlayMenuScreen_OnQuitGameButtonClick_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.OverlayMenuScreen.OnQuitButtonClick
// (Final, Native, Private)

void UOverlayMenuScreen::OnQuitButtonClick()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.OverlayMenuScreen.OnQuitButtonClick");

	UOverlayMenuScreen_OnQuitButtonClick_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.OverlayMenuScreen.OnQualitySetIndex
// (Final, Native, Private)
// Parameters:
// int                            Index                          (Parm, ZeroConstructor, IsPlainOldData)

void UOverlayMenuScreen::OnQualitySetIndex(int Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.OverlayMenuScreen.OnQualitySetIndex");

	UOverlayMenuScreen_OnQualitySetIndex_Params params;
	params.Index = Index;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.OverlayMenuScreen.OnPlayerInfoClick
// (Final, Native, Private)
// Parameters:
// class FString                  PlayerId                       (Parm, ZeroConstructor)

void UOverlayMenuScreen::OnPlayerInfoClick(const class FString& PlayerId)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.OverlayMenuScreen.OnPlayerInfoClick");

	UOverlayMenuScreen_OnPlayerInfoClick_Params params;
	params.PlayerId = PlayerId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.OverlayMenuScreen.OnMuteOnFocusLostClick
// (Final, Native, Private)

void UOverlayMenuScreen::OnMuteOnFocusLostClick()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.OverlayMenuScreen.OnMuteOnFocusLostClick");

	UOverlayMenuScreen_OnMuteOnFocusLostClick_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.OverlayMenuScreen.OnMenuMusicVolumeClick
// (Final, Native, Private)
// Parameters:
// int                            Value                          (Parm, ZeroConstructor, IsPlainOldData)

void UOverlayMenuScreen::OnMenuMusicVolumeClick(int Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.OverlayMenuScreen.OnMenuMusicVolumeClick");

	UOverlayMenuScreen_OnMenuMusicVolumeClick_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.OverlayMenuScreen.OnMainVolumeClick
// (Final, Native, Private)
// Parameters:
// int                            Value                          (Parm, ZeroConstructor, IsPlainOldData)

void UOverlayMenuScreen::OnMainVolumeClick(int Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.OverlayMenuScreen.OnMainVolumeClick");

	UOverlayMenuScreen_OnMainVolumeClick_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.OverlayMenuScreen.OnLanguageChange
// (Final, Native, Private)
// Parameters:
// int                            Value                          (Parm, ZeroConstructor, IsPlainOldData)

void UOverlayMenuScreen::OnLanguageChange(int Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.OverlayMenuScreen.OnLanguageChange");

	UOverlayMenuScreen_OnLanguageChange_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.OverlayMenuScreen.OnKillerMouseSensitivityChanged
// (Final, Native, Private)
// Parameters:
// int                            Value                          (Parm, ZeroConstructor, IsPlainOldData)

void UOverlayMenuScreen::OnKillerMouseSensitivityChanged(int Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.OverlayMenuScreen.OnKillerMouseSensitivityChanged");

	UOverlayMenuScreen_OnKillerMouseSensitivityChanged_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.OverlayMenuScreen.OnKillerControllerSensitivityChanged
// (Final, Native, Private)
// Parameters:
// int                            Value                          (Parm, ZeroConstructor, IsPlainOldData)

void UOverlayMenuScreen::OnKillerControllerSensitivityChanged(int Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.OverlayMenuScreen.OnKillerControllerSensitivityChanged");

	UOverlayMenuScreen_OnKillerControllerSensitivityChanged_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.OverlayMenuScreen.OnInvertYClick
// (Final, Native, Private)

void UOverlayMenuScreen::OnInvertYClick()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.OverlayMenuScreen.OnInvertYClick");

	UOverlayMenuScreen_OnInvertYClick_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.OverlayMenuScreen.OnHideTutorialClick
// (Final, Native, Private)

void UOverlayMenuScreen::OnHideTutorialClick()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.OverlayMenuScreen.OnHideTutorialClick");

	UOverlayMenuScreen_OnHideTutorialClick_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.OverlayMenuScreen.OnHeadphonesClick
// (Final, Native, Private)

void UOverlayMenuScreen::OnHeadphonesClick()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.OverlayMenuScreen.OnHeadphonesClick");

	UOverlayMenuScreen_OnHeadphonesClick_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.OverlayMenuScreen.OnFullScreenClick
// (Final, Native, Private)

void UOverlayMenuScreen::OnFullScreenClick()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.OverlayMenuScreen.OnFullScreenClick");

	UOverlayMenuScreen_OnFullScreenClick_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.OverlayMenuScreen.OnBackButtonClick
// (Final, Native, Private)

void UOverlayMenuScreen::OnBackButtonClick()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.OverlayMenuScreen.OnBackButtonClick");

	UOverlayMenuScreen_OnBackButtonClick_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.OverlayMenuScreen.OnAutoAdjustClick
// (Final, Native, Private)

void UOverlayMenuScreen::OnAutoAdjustClick()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.OverlayMenuScreen.OnAutoAdjustClick");

	UOverlayMenuScreen_OnAutoAdjustClick_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.PanelScreen.OnWebNodeSelected
// (Final, Native, Protected)
// Parameters:
// int                            ID                             (Parm, ZeroConstructor, IsPlainOldData)
// int                            nodeDepth                      (Parm, ZeroConstructor, IsPlainOldData)

void UPanelScreen::OnWebNodeSelected(int ID, int nodeDepth)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.PanelScreen.OnWebNodeSelected");

	UPanelScreen_OnWebNodeSelected_Params params;
	params.ID = ID;
	params.nodeDepth = nodeDepth;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.PanelScreen.OnWebBuilt
// (Final, Native, Protected)

void UPanelScreen::OnWebBuilt()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.PanelScreen.OnWebBuilt");

	UPanelScreen_OnWebBuilt_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.PanelScreen.OnStoreButtonClick
// (Final, Native, Protected)

void UPanelScreen::OnStoreButtonClick()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.PanelScreen.OnStoreButtonClick");

	UPanelScreen_OnStoreButtonClick_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.PanelScreen.OnSideTabButtonClick
// (Final, Native, Protected)
// Parameters:
// int                            tabIndex                       (Parm, ZeroConstructor, IsPlainOldData)

void UPanelScreen::OnSideTabButtonClick(int tabIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.PanelScreen.OnSideTabButtonClick");

	UPanelScreen_OnSideTabButtonClick_Params params;
	params.tabIndex = tabIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.PanelScreen.OnRoleButtonClick
// (Final, Native, Protected)

void UPanelScreen::OnRoleButtonClick()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.PanelScreen.OnRoleButtonClick");

	UPanelScreen_OnRoleButtonClick_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.PanelScreen.OnReservedBloodPoints
// (Final, Native, Protected)
// Parameters:
// int                            BloodPoints                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           fullCost                       (Parm, ZeroConstructor, IsPlainOldData)

void UPanelScreen::OnReservedBloodPoints(int BloodPoints, bool fullCost)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.PanelScreen.OnReservedBloodPoints");

	UPanelScreen_OnReservedBloodPoints_Params params;
	params.BloodPoints = BloodPoints;
	params.fullCost = fullCost;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.PanelScreen.OnRegenerateButtonClick
// (Final, Native, Protected)
// Parameters:
// int                            levelUp                        (Parm, ZeroConstructor, IsPlainOldData)

void UPanelScreen::OnRegenerateButtonClick(int levelUp)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.PanelScreen.OnRegenerateButtonClick");

	UPanelScreen_OnRegenerateButtonClick_Params params;
	params.levelUp = levelUp;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.PanelScreen.OnPrestigeUp
// (Final, Native, Protected)

void UPanelScreen::OnPrestigeUp()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.PanelScreen.OnPrestigeUp");

	UPanelScreen_OnPrestigeUp_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.PanelScreen.OnLoadoutSlotButtonClick
// (Final, Native, Protected)
// Parameters:
// int                            SlotIndex                      (Parm, ZeroConstructor, IsPlainOldData)

void UPanelScreen::OnLoadoutSlotButtonClick(int SlotIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.PanelScreen.OnLoadoutSlotButtonClick");

	UPanelScreen_OnLoadoutSlotButtonClick_Params params;
	params.SlotIndex = SlotIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.PanelScreen.OnItemUnselected
// (Final, Native, Protected)
// Parameters:
// int                            ItemIndex                      (Parm, ZeroConstructor, IsPlainOldData)

void UPanelScreen::OnItemUnselected(int ItemIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.PanelScreen.OnItemUnselected");

	UPanelScreen_OnItemUnselected_Params params;
	params.ItemIndex = ItemIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.PanelScreen.OnItemSelected
// (Final, Native, Protected)
// Parameters:
// int                            ItemIndex                      (Parm, ZeroConstructor, IsPlainOldData)

void UPanelScreen::OnItemSelected(int ItemIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.PanelScreen.OnItemSelected");

	UPanelScreen_OnItemSelected_Params params;
	params.ItemIndex = ItemIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.PanelScreen.OnConfirmCollectSelectedNode
// (Final, Native, Protected)

void UPanelScreen::OnConfirmCollectSelectedNode()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.PanelScreen.OnConfirmCollectSelectedNode");

	UPanelScreen_OnConfirmCollectSelectedNode_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.PanelScreen.OnCharInfoClick
// (Final, Native, Protected)

void UPanelScreen::OnCharInfoClick()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.PanelScreen.OnCharInfoClick");

	UPanelScreen_OnCharInfoClick_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.PanelScreen.OnCharacterSlotButtonClick
// (Final, Native, Protected)
// Parameters:
// int                            CharacterIndex                 (Parm, ZeroConstructor, IsPlainOldData)

void UPanelScreen::OnCharacterSlotButtonClick(int CharacterIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.PanelScreen.OnCharacterSlotButtonClick");

	UPanelScreen_OnCharacterSlotButtonClick_Params params;
	params.CharacterIndex = CharacterIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.PanelScreen.OnCategoryIndexSelected
// (Final, Native, Protected)
// Parameters:
// int                            categoryIndex                  (Parm, ZeroConstructor, IsPlainOldData)

void UPanelScreen::OnCategoryIndexSelected(int categoryIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.PanelScreen.OnCategoryIndexSelected");

	UPanelScreen_OnCategoryIndexSelected_Params params;
	params.categoryIndex = categoryIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.PanelScreen.OnAvailableItemSelected
// (Final, Native, Protected)
// Parameters:
// int                            ItemIndex                      (Parm, ZeroConstructor, IsPlainOldData)

void UPanelScreen::OnAvailableItemSelected(int ItemIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.PanelScreen.OnAvailableItemSelected");

	UPanelScreen_OnAvailableItemSelected_Params params;
	params.ItemIndex = ItemIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.RoleSelectionScreen.OnChangeUserButtonClick
// (Final, Native, Private)

void URoleSelectionScreen::OnChangeUserButtonClick()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.RoleSelectionScreen.OnChangeUserButtonClick");

	URoleSelectionScreen_OnChangeUserButtonClick_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.RoleSelectionScreen.OnButtonSelected
// (Final, Native, Private)
// Parameters:
// int                            buttonId                       (Parm, ZeroConstructor, IsPlainOldData)

void URoleSelectionScreen::OnButtonSelected(int buttonId)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.RoleSelectionScreen.OnButtonSelected");

	URoleSelectionScreen_OnButtonSelected_Params params;
	params.buttonId = buttonId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.SplashScreen.ShowSaveGamePopup
// (Final, Native, Public, Const)

void USplashScreen::ShowSaveGamePopup()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.SplashScreen.ShowSaveGamePopup");

	USplashScreen_ShowSaveGamePopup_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.SplashScreen.ShowPressKeyState
// (Final, Native, Public, Const)

void USplashScreen::ShowPressKeyState()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.SplashScreen.ShowPressKeyState");

	USplashScreen_ShowPressKeyState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.SplashScreen.ShowLoadingState
// (Final, Native, Public, Const)

void USplashScreen::ShowLoadingState()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.SplashScreen.ShowLoadingState");

	USplashScreen_ShowLoadingState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.SplashScreen.SetVersionText
// (Final, Native, Public, Const)
// Parameters:
// class FString                  versionText                    (Parm, ZeroConstructor)

void USplashScreen::SetVersionText(const class FString& versionText)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.SplashScreen.SetVersionText");

	USplashScreen_SetVersionText_Params params;
	params.versionText = versionText;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.SplashScreen.OnSaveGamePopupComplete
// (Final, Native, Private)

void USplashScreen::OnSaveGamePopupComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.SplashScreen.OnSaveGamePopupComplete");

	USplashScreen_OnSaveGamePopupComplete_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.SplashScreen.OnKeyPressed
// (Final, Native, Private)

void USplashScreen::OnKeyPressed()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.SplashScreen.OnKeyPressed");

	USplashScreen_OnKeyPressed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.SplashScreen.HidePressKeyState
// (Final, Native, Public, Const)

void USplashScreen::HidePressKeyState()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.SplashScreen.HidePressKeyState");

	USplashScreen_HidePressKeyState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.StoreScreen.OnUnlockWithCurrency
// (Final, Native, Private, Const)
// Parameters:
// int                            currencyId                     (Parm, ZeroConstructor, IsPlainOldData)
// class FString                  combinedItem                   (Parm, ZeroConstructor)

void UStoreScreen::OnUnlockWithCurrency(int currencyId, const class FString& combinedItem)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.StoreScreen.OnUnlockWithCurrency");

	UStoreScreen_OnUnlockWithCurrency_Params params;
	params.currencyId = currencyId;
	params.combinedItem = combinedItem;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.StoreScreen.OnTabSelected
// (Final, Native, Private)
// Parameters:
// int                            Index                          (Parm, ZeroConstructor, IsPlainOldData)

void UStoreScreen::OnTabSelected(int Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.StoreScreen.OnTabSelected");

	UStoreScreen_OnTabSelected_Params params;
	params.Index = Index;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.StoreScreen.OnStorySelected
// (Final, Native, Private, Const)

void UStoreScreen::OnStorySelected()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.StoreScreen.OnStorySelected");

	UStoreScreen_OnStorySelected_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.StoreScreen.OnStoreItemSelected
// (Final, Native, Private)
// Parameters:
// class FString                  combinedItemId                 (Parm, ZeroConstructor)

void UStoreScreen::OnStoreItemSelected(const class FString& combinedItemId)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.StoreScreen.OnStoreItemSelected");

	UStoreScreen_OnStoreItemSelected_Params params;
	params.combinedItemId = combinedItemId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.StoreScreen.OnStoreItemLinkSelected
// (Final, Native, Private)
// Parameters:
// class FString                  combinedItemId                 (Parm, ZeroConstructor)

void UStoreScreen::OnStoreItemLinkSelected(const class FString& combinedItemId)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.StoreScreen.OnStoreItemLinkSelected");

	UStoreScreen_OnStoreItemLinkSelected_Params params;
	params.combinedItemId = combinedItemId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.StoreScreen.OnStoreCharacterSelected
// (Final, Native, Private)
// Parameters:
// int                            CharacterIndex                 (Parm, ZeroConstructor, IsPlainOldData)

void UStoreScreen::OnStoreCharacterSelected(int CharacterIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.StoreScreen.OnStoreCharacterSelected");

	UStoreScreen_OnStoreCharacterSelected_Params params;
	params.CharacterIndex = CharacterIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.StoreScreen.OnStoreCatalogCategorySelected
// (Final, Native, Private)
// Parameters:
// TEnumAsByte<ECustomizationCategory> Category                       (Parm, ZeroConstructor, IsPlainOldData)

void UStoreScreen::OnStoreCatalogCategorySelected(TEnumAsByte<ECustomizationCategory> Category)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.StoreScreen.OnStoreCatalogCategorySelected");

	UStoreScreen_OnStoreCatalogCategorySelected_Params params;
	params.Category = Category;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.StoreScreen.OnSearchInputChanged
// (Final, Native, Private)
// Parameters:
// class FString                  searchInput                    (Parm, ZeroConstructor)

void UStoreScreen::OnSearchInputChanged(const class FString& searchInput)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.StoreScreen.OnSearchInputChanged");

	UStoreScreen_OnSearchInputChanged_Params params;
	params.searchInput = searchInput;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.StoreScreen.OnRotateCharacter
// (Final, Native, Private)
// Parameters:
// float                          mouseDistanceChange            (Parm, ZeroConstructor, IsPlainOldData)

void UStoreScreen::OnRotateCharacter(float mouseDistanceChange)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.StoreScreen.OnRotateCharacter");

	UStoreScreen_OnRotateCharacter_Params params;
	params.mouseDistanceChange = mouseDistanceChange;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.StoreScreen.OnNotEnoughTokens
// (Final, Native, Private)

void UStoreScreen::OnNotEnoughTokens()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.StoreScreen.OnNotEnoughTokens");

	UStoreScreen_OnNotEnoughTokens_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.StoreScreen.OnMarketSlotButtonClick
// (Final, Native, Private)
// Parameters:
// int                            SlotIndex                      (Parm, ZeroConstructor, IsPlainOldData)

void UStoreScreen::OnMarketSlotButtonClick(int SlotIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.StoreScreen.OnMarketSlotButtonClick");

	UStoreScreen_OnMarketSlotButtonClick_Params params;
	params.SlotIndex = SlotIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.StoreScreen.OnFiltersUpdated
// (Final, Native, Private)
// Parameters:
// bool                           All                            (Parm, ZeroConstructor, IsPlainOldData)
// bool                           rarityCommon                   (Parm, ZeroConstructor, IsPlainOldData)
// bool                           rarityUncommon                 (Parm, ZeroConstructor, IsPlainOldData)
// bool                           rarityRare                     (Parm, ZeroConstructor, IsPlainOldData)
// bool                           rarityVeryRare                 (Parm, ZeroConstructor, IsPlainOldData)
// bool                           rarityUltraRare                (Parm, ZeroConstructor, IsPlainOldData)
// bool                           includeAllOwnedItems           (Parm, ZeroConstructor, IsPlainOldData)

void UStoreScreen::OnFiltersUpdated(bool All, bool rarityCommon, bool rarityUncommon, bool rarityRare, bool rarityVeryRare, bool rarityUltraRare, bool includeAllOwnedItems)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.StoreScreen.OnFiltersUpdated");

	UStoreScreen_OnFiltersUpdated_Params params;
	params.All = All;
	params.rarityCommon = rarityCommon;
	params.rarityUncommon = rarityUncommon;
	params.rarityRare = rarityRare;
	params.rarityVeryRare = rarityVeryRare;
	params.rarityUltraRare = rarityUltraRare;
	params.includeAllOwnedItems = includeAllOwnedItems;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.StoreScreen.OnFeaturedButtonSelected
// (Final, Native, Private)
// Parameters:
// int                            linkIndex                      (Parm, ZeroConstructor, IsPlainOldData)

void UStoreScreen::OnFeaturedButtonSelected(int linkIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.StoreScreen.OnFeaturedButtonSelected");

	UStoreScreen_OnFeaturedButtonSelected_Params params;
	params.linkIndex = linkIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.StoreScreen.OnEquipItem
// (Final, Native, Private)
// Parameters:
// class FString                  combinedItemId                 (Parm, ZeroConstructor)

void UStoreScreen::OnEquipItem(const class FString& combinedItemId)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.StoreScreen.OnEquipItem");

	UStoreScreen_OnEquipItem_Params params;
	params.combinedItemId = combinedItemId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.StoreScreen.OnCatalogSelected
// (Final, Native, Private, Const)

void UStoreScreen::OnCatalogSelected()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.StoreScreen.OnCatalogSelected");

	UStoreScreen_OnCatalogSelected_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.StoreScreen.OnBuyCurrencyBundle
// (Final, Native, Private)
// Parameters:
// int                            Index                          (Parm, ZeroConstructor, IsPlainOldData)

void UStoreScreen::OnBuyCurrencyBundle(int Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.StoreScreen.OnBuyCurrencyBundle");

	UStoreScreen_OnBuyCurrencyBundle_Params params;
	params.Index = Index;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.SystemPromptsScreen.OnTextInputMouseOver
// (Final, Native, Private)
// Parameters:
// int                            isMouseOver                    (Parm, ZeroConstructor, IsPlainOldData)

void USystemPromptsScreen::OnTextInputMouseOver(int isMouseOver)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.SystemPromptsScreen.OnTextInputMouseOver");

	USystemPromptsScreen_OnTextInputMouseOver_Params params;
	params.isMouseOver = isMouseOver;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.SystemPromptsScreen.OnSystemPromptsEnd
// (Final, Native, Private)

void USystemPromptsScreen::OnSystemPromptsEnd()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.SystemPromptsScreen.OnSystemPromptsEnd");

	USystemPromptsScreen_OnSystemPromptsEnd_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.SystemPromptsScreen.OnReplyLegalTerms
// (Final, Native, Private)
// Parameters:
// int                            accepted                       (Parm, ZeroConstructor, IsPlainOldData)

void USystemPromptsScreen::OnReplyLegalTerms(int accepted)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.SystemPromptsScreen.OnReplyLegalTerms");

	USystemPromptsScreen_OnReplyLegalTerms_Params params;
	params.accepted = accepted;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.SystemPromptsScreen.OnConfirmReportPlayer
// (Final, Native, Private)
// Parameters:
// class FString                  Category                       (Parm, ZeroConstructor)
// class FString                  Comment                        (Parm, ZeroConstructor)

void USystemPromptsScreen::OnConfirmReportPlayer(const class FString& Category, const class FString& Comment)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.SystemPromptsScreen.OnConfirmReportPlayer");

	USystemPromptsScreen_OnConfirmReportPlayer_Params params;
	params.Category = Category;
	params.Comment = Comment;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.SystemPromptsScreen.OnConfirmBuyMarketItem
// (Final, Native, Private)

void USystemPromptsScreen::OnConfirmBuyMarketItem()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.SystemPromptsScreen.OnConfirmBuyMarketItem");

	USystemPromptsScreen_OnConfirmBuyMarketItem_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.TallyScreen.OnSpectateButtonClick
// (Final, Native, Private)

void UTallyScreen::OnSpectateButtonClick()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.TallyScreen.OnSpectateButtonClick");

	UTallyScreen_OnSpectateButtonClick_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.TallyScreen.OnShowSlasherInfos
// (Final, Native, Private)

void UTallyScreen::OnShowSlasherInfos()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.TallyScreen.OnShowSlasherInfos");

	UTallyScreen_OnShowSlasherInfos_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.TallyScreen.OnReportPlayerButtonClick
// (Final, Native, Private)
// Parameters:
// class FString                  plateformAccountId             (Parm, ZeroConstructor)
// class FString                  MirrorsId                      (Parm, ZeroConstructor)
// class FString                  PlayerName                     (Parm, ZeroConstructor)
// int                            IsKiller                       (Parm, ZeroConstructor, IsPlainOldData)

void UTallyScreen::OnReportPlayerButtonClick(const class FString& plateformAccountId, const class FString& MirrorsId, const class FString& PlayerName, int IsKiller)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.TallyScreen.OnReportPlayerButtonClick");

	UTallyScreen_OnReportPlayerButtonClick_Params params;
	params.plateformAccountId = plateformAccountId;
	params.MirrorsId = MirrorsId;
	params.PlayerName = PlayerName;
	params.IsKiller = IsKiller;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.TallyScreen.OnRateMatch
// (Final, Native, Private)
// Parameters:
// int                            rateValue                      (Parm, ZeroConstructor, IsPlainOldData)

void UTallyScreen::OnRateMatch(int rateValue)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.TallyScreen.OnRateMatch");

	UTallyScreen_OnRateMatch_Params params;
	params.rateValue = rateValue;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.TallyScreen.OnPlayerInfoClick
// (Final, Native, Private)
// Parameters:
// class FString                  PlayerId                       (Parm, ZeroConstructor)

void UTallyScreen::OnPlayerInfoClick(const class FString& PlayerId)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.TallyScreen.OnPlayerInfoClick");

	UTallyScreen_OnPlayerInfoClick_Params params;
	params.PlayerId = PlayerId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.TallyScreen.OnLevelingSequenceComplete
// (Final, Native, Private)

void UTallyScreen::OnLevelingSequenceComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.TallyScreen.OnLevelingSequenceComplete");

	UTallyScreen_OnLevelingSequenceComplete_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.TallyScreen.OnLeaveButtonClick
// (Final, Native, Private)

void UTallyScreen::OnLeaveButtonClick()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.TallyScreen.OnLeaveButtonClick");

	UTallyScreen_OnLeaveButtonClick_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.TallyScreen.OnBloodwebButtonClick
// (Final, Native, Private)

void UTallyScreen::OnBloodwebButtonClick()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.TallyScreen.OnBloodwebButtonClick");

	UTallyScreen_OnBloodwebButtonClick_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.ScreenSpaceLocationComponent.HasValidPosition
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UScreenSpaceLocationComponent::HasValidPosition()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.ScreenSpaceLocationComponent.HasValidPosition");

	UScreenSpaceLocationComponent_HasValidPosition_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.ScreenSpaceLocationComponent.GetCurrentResolution
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector2D               ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FVector2D UScreenSpaceLocationComponent::GetCurrentResolution()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.ScreenSpaceLocationComponent.GetCurrentResolution");

	UScreenSpaceLocationComponent_GetCurrentResolution_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.SeasonManager.GetOldSlasherPips
// (Final, Native, Public, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int ASeasonManager::GetOldSlasherPips()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.SeasonManager.GetOldSlasherPips");

	ASeasonManager_GetOldSlasherPips_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.SeasonManager.GetOldCamperPips
// (Final, Native, Public, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int ASeasonManager::GetOldCamperPips()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.SeasonManager.GetOldCamperPips");

	ASeasonManager_GetOldCamperPips_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.SelectiveVisibilityComponent.Local_SetVisibility
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           bNewVisibility                 (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bPropagateToChildren           (Parm, ZeroConstructor, IsPlainOldData)

void USelectiveVisibilityComponent::Local_SetVisibility(bool bNewVisibility, bool bPropagateToChildren)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.SelectiveVisibilityComponent.Local_SetVisibility");

	USelectiveVisibilityComponent_Local_SetVisibility_Params params;
	params.bNewVisibility = bNewVisibility;
	params.bPropagateToChildren = bPropagateToChildren;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.Sequencer.Unregister
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                  Step                           (Parm, ZeroConstructor, IsPlainOldData)

void USequencer::Unregister(class AActor* Step)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.Sequencer.Unregister");

	USequencer_Unregister_Params params;
	params.Step = Step;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.Sequencer.Register
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                  Step                           (Parm, ZeroConstructor, IsPlainOldData)

void USequencer::Register(class AActor* Step)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.Sequencer.Register");

	USequencer_Register_Params params;
	params.Step = Step;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.Sequencer.CleanSequence
// (Final, Native, Private)
// Parameters:
// class AActor*                  DestroyedActor                 (Parm, ZeroConstructor, IsPlainOldData)

void USequencer::CleanSequence(class AActor* DestroyedActor)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.Sequencer.CleanSequence");

	USequencer_CleanSequence_Params params;
	params.DestroyedActor = DestroyedActor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.SlaveAnimInstance.SetMasterMesh
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class USkeletalMeshComponent*  masterMesh                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void USlaveAnimInstance::SetMasterMesh(class USkeletalMeshComponent* masterMesh)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.SlaveAnimInstance.SetMasterMesh");

	USlaveAnimInstance_SetMasterMesh_Params params;
	params.masterMesh = masterMesh;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.SlaveAnimInstance.GetMasterMesh
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USkeletalMeshComponent*  ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class USkeletalMeshComponent* USlaveAnimInstance::GetMasterMesh()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.SlaveAnimInstance.GetMasterMesh");

	USlaveAnimInstance_GetMasterMesh_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.StalkedComponent.SetChargeableComponent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UChargeableComponent*    ChargeableComponent            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UStalkedComponent::SetChargeableComponent(class UChargeableComponent* ChargeableComponent)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.StalkedComponent.SetChargeableComponent");

	UStalkedComponent_SetChargeableComponent_Params params;
	params.ChargeableComponent = ChargeableComponent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.StalkedComponent.OnPlayerDisconnect
// (Final, Native, Private)
// Parameters:
// class ADBDPlayer*              Player                         (Parm, ZeroConstructor, IsPlainOldData)

void UStalkedComponent::OnPlayerDisconnect(class ADBDPlayer* Player)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.StalkedComponent.OnPlayerDisconnect");

	UStalkedComponent_OnPlayerDisconnect_Params params;
	params.Player = Player;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.StalkedComponent.IsStalkHighlightVisible
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UStalkedComponent::IsStalkHighlightVisible()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.StalkedComponent.IsStalkHighlightVisible");

	UStalkedComponent_IsStalkHighlightVisible_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.StalkedComponent.IsOutlineVisible
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UStalkedComponent::IsOutlineVisible()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.StalkedComponent.IsOutlineVisible");

	UStalkedComponent_IsOutlineVisible_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.StalkedComponent.IsBeingStalked
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UStalkedComponent::IsBeingStalked()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.StalkedComponent.IsBeingStalked");

	UStalkedComponent_IsBeingStalked_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.StalkedComponent.GetStalkPoints
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ADBDPlayer*              caller                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UStalkedComponent::GetStalkPoints(class ADBDPlayer* caller)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.StalkedComponent.GetStalkPoints");

	UStalkedComponent_GetStalkPoints_Params params;
	params.caller = caller;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.StalkedComponent.GetPercentStalkPoints
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ADBDPlayer*              caller                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UStalkedComponent::GetPercentStalkPoints(class ADBDPlayer* caller)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.StalkedComponent.GetPercentStalkPoints");

	UStalkedComponent_GetPercentStalkPoints_Params params;
	params.caller = caller;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.StalkedComponent.GetOutlineVisibleRange
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UStalkedComponent::GetOutlineVisibleRange()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.StalkedComponent.GetOutlineVisibleRange");

	UStalkedComponent_GetOutlineVisibleRange_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.StalkedComponent.GetMaxStalkPoints
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ADBDPlayer*              caller                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UStalkedComponent::GetMaxStalkPoints(class ADBDPlayer* caller)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.StalkedComponent.GetMaxStalkPoints");

	UStalkedComponent_GetMaxStalkPoints_Params params;
	params.caller = caller;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.StalkedComponent.GetChargeableComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UChargeableComponent*    ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UChargeableComponent* UStalkedComponent::GetChargeableComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.StalkedComponent.GetChargeableComponent");

	UStalkedComponent_GetChargeableComponent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.StalkedComponent.CanBeStandingKilled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UStalkedComponent::CanBeStandingKilled()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.StalkedComponent.CanBeStandingKilled");

	UStalkedComponent_CanBeStandingKilled_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.StalkerComponent.Update
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          DeltaTime                      (Parm, ZeroConstructor, IsPlainOldData)
// class ADBDPlayer*              Player                         (Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<EDetectionZone>    stalkerDetectionZone           (Parm, ZeroConstructor, IsPlainOldData)

void UStalkerComponent::Update(float DeltaTime, class ADBDPlayer* Player, TEnumAsByte<EDetectionZone> stalkerDetectionZone)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.StalkerComponent.Update");

	UStalkerComponent_Update_Params params;
	params.DeltaTime = DeltaTime;
	params.Player = Player;
	params.stalkerDetectionZone = stalkerDetectionZone;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.StalkerComponent.OnPlayerDisconnect
// (Final, Native, Private)
// Parameters:
// class ADBDPlayer*              Player                         (Parm, ZeroConstructor, IsPlainOldData)

void UStalkerComponent::OnPlayerDisconnect(class ADBDPlayer* Player)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.StalkerComponent.OnPlayerDisconnect");

	UStalkerComponent_OnPlayerDisconnect_Params params;
	params.Player = Player;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.StalkerComponent.NotifyKill
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ADBDPlayer*              killedPlayer                   (Parm, ZeroConstructor, IsPlainOldData)

void UStalkerComponent::NotifyKill(class ADBDPlayer* killedPlayer)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.StalkerComponent.NotifyKill");

	UStalkerComponent_NotifyKill_Params params;
	params.killedPlayer = killedPlayer;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.StalkerComponent.IsStalkingSomeone
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UStalkerComponent::IsStalkingSomeone()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.StalkerComponent.IsStalkingSomeone");

	UStalkerComponent_IsStalkingSomeone_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.StalkerComponent.IsAtLastStalkTier
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UStalkerComponent::IsAtLastStalkTier()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.StalkerComponent.IsAtLastStalkTier");

	UStalkerComponent_IsAtLastStalkTier_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.StalkerComponent.HasMaxStalkPoints
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UStalkerComponent::HasMaxStalkPoints()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.StalkerComponent.HasMaxStalkPoints");

	UStalkerComponent_HasMaxStalkPoints_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.StalkerComponent.GetTotalStalkingPoints
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UStalkerComponent::GetTotalStalkingPoints()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.StalkerComponent.GetTotalStalkingPoints");

	UStalkerComponent_GetTotalStalkingPoints_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.StalkerComponent.GetRequirementForTier
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            tier                           (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UStalkerComponent::GetRequirementForTier(int tier)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.StalkerComponent.GetRequirementForTier");

	UStalkerComponent_GetRequirementForTier_Params params;
	params.tier = tier;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.StalkerComponent.GetPercentStalkingPointsInCurrentTier
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UStalkerComponent::GetPercentStalkingPointsInCurrentTier()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.StalkerComponent.GetPercentStalkingPointsInCurrentTier");

	UStalkerComponent_GetPercentStalkingPointsInCurrentTier_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.StalkerComponent.GetPercentStalkingPoints
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UStalkerComponent::GetPercentStalkingPoints()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.StalkerComponent.GetPercentStalkingPoints");

	UStalkerComponent_GetPercentStalkingPoints_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.StalkerComponent.GetMaxStalkTier
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UStalkerComponent::GetMaxStalkTier()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.StalkerComponent.GetMaxStalkTier");

	UStalkerComponent_GetMaxStalkTier_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.StalkerComponent.GetMaxStalkingPoints
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UStalkerComponent::GetMaxStalkingPoints()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.StalkerComponent.GetMaxStalkingPoints");

	UStalkerComponent_GetMaxStalkingPoints_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.StalkerComponent.GetEvilWithinScoreMultiplier
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UStalkerComponent::GetEvilWithinScoreMultiplier()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.StalkerComponent.GetEvilWithinScoreMultiplier");

	UStalkerComponent_GetEvilWithinScoreMultiplier_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.StalkerComponent.GetCurrentTier
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UStalkerComponent::GetCurrentTier()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.StalkerComponent.GetCurrentTier");

	UStalkerComponent_GetCurrentTier_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.StalkerComponent.CanStandKill
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ADBDPlayer*              Player                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UStalkerComponent::CanStandKill(class ADBDPlayer* Player)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.StalkerComponent.CanStandKill");

	UStalkerComponent_CanStandKill_Params params;
	params.Player = Player;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.StalkerComponent.CanStalk
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UStalkerComponent::CanStalk()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.StalkerComponent.CanStalk");

	UStalkerComponent_CanStalk_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.StalkerComponent.Broadcast_Tier
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// int                            previousTier                   (Parm, ZeroConstructor, IsPlainOldData)
// int                            currentTier                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           IsFirstTime                    (Parm, ZeroConstructor, IsPlainOldData)

void UStalkerComponent::Broadcast_Tier(int previousTier, int currentTier, bool IsFirstTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.StalkerComponent.Broadcast_Tier");

	UStalkerComponent_Broadcast_Tier_Params params;
	params.previousTier = previousTier;
	params.currentTier = currentTier;
	params.IsFirstTime = IsFirstTime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.StalkerComponent.Broadcast_SetStalkPoints
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// float                          stalkPoints                    (Parm, ZeroConstructor, IsPlainOldData)

void UStalkerComponent::Broadcast_SetStalkPoints(float stalkPoints)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.StalkerComponent.Broadcast_SetStalkPoints");

	UStalkerComponent_Broadcast_SetStalkPoints_Params params;
	params.stalkPoints = stalkPoints;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.StalkerComponent.Broadcast_Multicast_Tier
// (Net, NetReliable, Native, Event, NetMulticast, Protected, NetValidate)
// Parameters:
// int                            previousTier                   (Parm, ZeroConstructor, IsPlainOldData)
// int                            currentTier                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           IsFirstTime                    (Parm, ZeroConstructor, IsPlainOldData)

void UStalkerComponent::Broadcast_Multicast_Tier(int previousTier, int currentTier, bool IsFirstTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.StalkerComponent.Broadcast_Multicast_Tier");

	UStalkerComponent_Broadcast_Multicast_Tier_Params params;
	params.previousTier = previousTier;
	params.currentTier = currentTier;
	params.IsFirstTime = IsFirstTime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.StalkerComponent.Broadcast_Multicast_SetStalkPoints
// (Net, Native, Event, NetMulticast, Protected, NetValidate)
// Parameters:
// float                          stalkPoints                    (Parm, ZeroConstructor, IsPlainOldData)

void UStalkerComponent::Broadcast_Multicast_SetStalkPoints(float stalkPoints)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.StalkerComponent.Broadcast_Multicast_SetStalkPoints");

	UStalkerComponent_Broadcast_Multicast_SetStalkPoints_Params params;
	params.stalkPoints = stalkPoints;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.StalkerComponent.Broadcast_BeingStalked_Server
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// class ADBDPlayer*              Player                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           beingStalked                   (Parm, ZeroConstructor, IsPlainOldData)

void UStalkerComponent::Broadcast_BeingStalked_Server(class ADBDPlayer* Player, bool beingStalked)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.StalkerComponent.Broadcast_BeingStalked_Server");

	UStalkerComponent_Broadcast_BeingStalked_Server_Params params;
	params.Player = Player;
	params.beingStalked = beingStalked;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.StalkerComponent.Broadcast_BeingStalked_Multicast
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private, NetValidate)
// Parameters:
// class ADBDPlayer*              Player                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           beingStalked                   (Parm, ZeroConstructor, IsPlainOldData)

void UStalkerComponent::Broadcast_BeingStalked_Multicast(class ADBDPlayer* Player, bool beingStalked)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.StalkerComponent.Broadcast_BeingStalked_Multicast");

	UStalkerComponent_Broadcast_BeingStalked_Multicast_Params params;
	params.Player = Player;
	params.beingStalked = beingStalked;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.StalkerComponent.Broadcast_AddStalkPointsToPlayer_Server
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// class ADBDPlayer*              Player                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          stalkPoints                    (Parm, ZeroConstructor, IsPlainOldData)

void UStalkerComponent::Broadcast_AddStalkPointsToPlayer_Server(class ADBDPlayer* Player, float stalkPoints)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.StalkerComponent.Broadcast_AddStalkPointsToPlayer_Server");

	UStalkerComponent_Broadcast_AddStalkPointsToPlayer_Server_Params params;
	params.Player = Player;
	params.stalkPoints = stalkPoints;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.StalkerComponent.Broadcast_AddStalkPointsToPlayer_Multicast
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private, NetValidate)
// Parameters:
// class ADBDPlayer*              Player                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          stalkPoints                    (Parm, ZeroConstructor, IsPlainOldData)

void UStalkerComponent::Broadcast_AddStalkPointsToPlayer_Multicast(class ADBDPlayer* Player, float stalkPoints)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.StalkerComponent.Broadcast_AddStalkPointsToPlayer_Multicast");

	UStalkerComponent_Broadcast_AddStalkPointsToPlayer_Multicast_Params params;
	params.Player = Player;
	params.stalkPoints = stalkPoints;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.StartScreenBase.TravelToMenu
// (Final, Native, Public, BlueprintCallable)

void AStartScreenBase::TravelToMenu()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.StartScreenBase.TravelToMenu");

	AStartScreenBase_TravelToMenu_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.StartScreenBase.BeginDestroyTravelSequence
// (Event, Public, BlueprintEvent)

void AStartScreenBase::BeginDestroyTravelSequence()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.StartScreenBase.BeginDestroyTravelSequence");

	AStartScreenBase_BeginDestroyTravelSequence_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.StateMachine.Server_SetStateStack
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// TArray<uint16_t>               netStateIDStack                (ConstParm, Parm, ZeroConstructor, ReferenceParm)

void UStateMachine::Server_SetStateStack(TArray<uint16_t> netStateIDStack)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.StateMachine.Server_SetStateStack");

	UStateMachine_Server_SetStateStack_Params params;
	params.netStateIDStack = netStateIDStack;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.StateMachine.NetIDStackChanged
// (Final, Native, Private)

void UStateMachine::NetIDStackChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.StateMachine.NetIDStackChanged");

	UStateMachine_NetIDStackChanged_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.StateMachine.Multicast_SetStateStack
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private, NetValidate)
// Parameters:
// TArray<uint16_t>               netStateIDStack                (ConstParm, Parm, ZeroConstructor, ReferenceParm)

void UStateMachine::Multicast_SetStateStack(TArray<uint16_t> netStateIDStack)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.StateMachine.Multicast_SetStateStack");

	UStateMachine_Multicast_SetStateStack_Params params;
	params.netStateIDStack = netStateIDStack;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.StillnessTrackerComponent.StartTracking
// (Final, Native, Private)

void UStillnessTrackerComponent::StartTracking()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.StillnessTrackerComponent.StartTracking");

	UStillnessTrackerComponent_StartTracking_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.CamperStillnessTrackerComponent.OnOverlapExit
// (Final, Native, Protected)
// Parameters:
// class UPrimitiveComponent*     HitComponent                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// int                            OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData)

void UCamperStillnessTrackerComponent::OnOverlapExit(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperStillnessTrackerComponent.OnOverlapExit");

	UCamperStillnessTrackerComponent_OnOverlapExit_Params params;
	params.HitComponent = HitComponent;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.CamperStillnessTrackerComponent.OnOverlapEnter
// (Final, Native, Protected, HasOutParms)
// Parameters:
// class UPrimitiveComponent*     HitComponent                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// int                            OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bFromSweep                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FHitResult              SweepResult                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void UCamperStillnessTrackerComponent::OnOverlapEnter(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperStillnessTrackerComponent.OnOverlapEnter");

	UCamperStillnessTrackerComponent_OnOverlapEnter_Params params;
	params.HitComponent = HitComponent;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;
	params.bFromSweep = bFromSweep;
	params.SweepResult = SweepResult;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.CamperStillnessTrackerComponent.OnLevelReadyToPlay
// (Final, Native, Protected)

void UCamperStillnessTrackerComponent::OnLevelReadyToPlay()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperStillnessTrackerComponent.OnLevelReadyToPlay");

	UCamperStillnessTrackerComponent_OnLevelReadyToPlay_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.CamperStillnessTrackerComponent.ExitInteriorZone
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UExposerInteriorZoneComponent* zone                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UCamperStillnessTrackerComponent::ExitInteriorZone(class UExposerInteriorZoneComponent* zone)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperStillnessTrackerComponent.ExitInteriorZone");

	UCamperStillnessTrackerComponent_ExitInteriorZone_Params params;
	params.zone = zone;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.CamperStillnessTrackerComponent.EnterInteriorZone
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UExposerInteriorZoneComponent* zone                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UCamperStillnessTrackerComponent::EnterInteriorZone(class UExposerInteriorZoneComponent* zone)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.CamperStillnessTrackerComponent.EnterInteriorZone");

	UCamperStillnessTrackerComponent_EnterInteriorZone_Params params;
	params.zone = zone;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.SurvivorInteractionAnalytics.RecordHealSuccess
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class ACamperPlayer*           survivor                       (Parm, ZeroConstructor, IsPlainOldData)

void USurvivorInteractionAnalytics::STATIC_RecordHealSuccess(class ACamperPlayer* survivor)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.SurvivorInteractionAnalytics.RecordHealSuccess");

	USurvivorInteractionAnalytics_RecordHealSuccess_Params params;
	params.survivor = survivor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.SurvivorInteractionAnalytics.RecordHatchEscape
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class ACamperPlayer*           survivor                       (Parm, ZeroConstructor, IsPlainOldData)

void USurvivorInteractionAnalytics::STATIC_RecordHatchEscape(class ACamperPlayer* survivor)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.SurvivorInteractionAnalytics.RecordHatchEscape");

	USurvivorInteractionAnalytics_RecordHatchEscape_Params params;
	params.survivor = survivor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.SurvivorInteractionAnalytics.IncrementUnhookCount
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class ACamperPlayer*           survivor                       (Parm, ZeroConstructor, IsPlainOldData)

void USurvivorInteractionAnalytics::STATIC_IncrementUnhookCount(class ACamperPlayer* survivor)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.SurvivorInteractionAnalytics.IncrementUnhookCount");

	USurvivorInteractionAnalytics_IncrementUnhookCount_Params params;
	params.survivor = survivor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.SurvivorInteractionAnalytics.IncrementHealCount
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class ACamperPlayer*           survivor                       (Parm, ZeroConstructor, IsPlainOldData)

void USurvivorInteractionAnalytics::STATIC_IncrementHealCount(class ACamperPlayer* survivor)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.SurvivorInteractionAnalytics.IncrementHealCount");

	USurvivorInteractionAnalytics_IncrementHealCount_Params params;
	params.survivor = survivor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.Tile.OnSetSpawnObject
// (Event, Public, BlueprintEvent)
// Parameters:
// class UTileSpawnPoint*         TileSpawnPoint                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class AActor*                  spawnedObject                  (Parm, ZeroConstructor, IsPlainOldData)

void ATile::OnSetSpawnObject(class UTileSpawnPoint* TileSpawnPoint, class AActor* spawnedObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.Tile.OnSetSpawnObject");

	ATile_OnSetSpawnObject_Params params;
	params.TileSpawnPoint = TileSpawnPoint;
	params.spawnedObject = spawnedObject;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.Tile.OnRep_Initialized
// (Final, Native, Protected)
// Parameters:
// bool                           OldValue                       (Parm, ZeroConstructor, IsPlainOldData)

void ATile::OnRep_Initialized(bool OldValue)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.Tile.OnRep_Initialized");

	ATile_OnRep_Initialized_Params params;
	params.OldValue = OldValue;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.Tile.InitOnSpawned
// (Event, Protected, BlueprintEvent)

void ATile::InitOnSpawned()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.Tile.InitOnSpawned");

	ATile_InitOnSpawned_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.TimerGateDecrease.Update
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          DeltaTime                      (Parm, ZeroConstructor, IsPlainOldData)

void ATimerGateDecrease::Update(float DeltaTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.TimerGateDecrease.Update");

	ATimerGateDecrease_Update_Params params;
	params.DeltaTime = DeltaTime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.TrapPlacerComponent.IsPlacementValid
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTrapPlacerComponent::IsPlacementValid()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.TrapPlacerComponent.IsPlacementValid");

	UTrapPlacerComponent_IsPlacementValid_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.TriggerableWorldObjectComponent.SetGuaranteedTriggerVolume
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UPrimitiveComponent*     Volume                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UTriggerableWorldObjectComponent::SetGuaranteedTriggerVolume(class UPrimitiveComponent* Volume)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.TriggerableWorldObjectComponent.SetGuaranteedTriggerVolume");

	UTriggerableWorldObjectComponent_SetGuaranteedTriggerVolume_Params params;
	params.Volume = Volume;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.TriggerableWorldObjectComponent.SetConditionalTriggerVolume
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UPrimitiveComponent*     Volume                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UTriggerableWorldObjectComponent::SetConditionalTriggerVolume(class UPrimitiveComponent* Volume)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.TriggerableWorldObjectComponent.SetConditionalTriggerVolume");

	UTriggerableWorldObjectComponent_SetConditionalTriggerVolume_Params params;
	params.Volume = Volume;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.TriggerableWorldObjectComponent.Multicast_OnTriggerReset
// (Net, NetReliable, Native, Event, NetMulticast, Protected)

void UTriggerableWorldObjectComponent::Multicast_OnTriggerReset()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.TriggerableWorldObjectComponent.Multicast_OnTriggerReset");

	UTriggerableWorldObjectComponent_Multicast_OnTriggerReset_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.TriggerableWorldObjectComponent.Multicast_OnTriggered
// (Net, NetReliable, Native, Event, NetMulticast, Protected, HasDefaults)
// Parameters:
// class AActor*                  Instigator                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 triggerLocation                (Parm, ZeroConstructor, IsPlainOldData)

void UTriggerableWorldObjectComponent::Multicast_OnTriggered(class AActor* Instigator, const struct FVector& triggerLocation)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.TriggerableWorldObjectComponent.Multicast_OnTriggered");

	UTriggerableWorldObjectComponent_Multicast_OnTriggered_Params params;
	params.Instigator = Instigator;
	params.triggerLocation = triggerLocation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.TriggerableWorldObjectComponent.GetConditionalModifiers
// (Native, Event, Protected, HasOutParms, BlueprintEvent)
// Parameters:
// class ADBDPlayer*              Player                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          outAdditive                    (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// float                          outMultiplicative              (Parm, OutParm, ZeroConstructor, IsPlainOldData)

void UTriggerableWorldObjectComponent::GetConditionalModifiers(class ADBDPlayer* Player, float* outAdditive, float* outMultiplicative)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.TriggerableWorldObjectComponent.GetConditionalModifiers");

	UTriggerableWorldObjectComponent_GetConditionalModifiers_Params params;
	params.Player = Player;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (outAdditive != nullptr)
		*outAdditive = params.outAdditive;
	if (outMultiplicative != nullptr)
		*outMultiplicative = params.outMultiplicative;
}


// Function DeadByDaylight.TriggerableWorldObjectComponent.CanPlayerTriggerGuaranteed
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// class ADBDPlayer*              Player                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTriggerableWorldObjectComponent::CanPlayerTriggerGuaranteed(class ADBDPlayer* Player)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.TriggerableWorldObjectComponent.CanPlayerTriggerGuaranteed");

	UTriggerableWorldObjectComponent_CanPlayerTriggerGuaranteed_Params params;
	params.Player = Player;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.TriggerableWorldObjectComponent.CanPlayerTriggerConditional
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// class ADBDPlayer*              Player                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTriggerableWorldObjectComponent::CanPlayerTriggerConditional(class ADBDPlayer* Player)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.TriggerableWorldObjectComponent.CanPlayerTriggerConditional");

	UTriggerableWorldObjectComponent_CanPlayerTriggerConditional_Params params;
	params.Player = Player;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.TriggerableWorldObjectComponent.Authority_Trigger
// (Final, BlueprintAuthorityOnly, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class AActor*                  Instigator                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 triggerLocation                (Parm, ZeroConstructor, IsPlainOldData)

void UTriggerableWorldObjectComponent::Authority_Trigger(class AActor* Instigator, const struct FVector& triggerLocation)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.TriggerableWorldObjectComponent.Authority_Trigger");

	UTriggerableWorldObjectComponent_Authority_Trigger_Params params;
	params.Instigator = Instigator;
	params.triggerLocation = triggerLocation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.TriggerableWorldObjectComponent.Authority_ResetTrigger
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)

void UTriggerableWorldObjectComponent::Authority_ResetTrigger()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.TriggerableWorldObjectComponent.Authority_ResetTrigger");

	UTriggerableWorldObjectComponent_Authority_ResetTrigger_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.TriggerableWorldObjectComponent.Authority_GuaranteedVolumeOverlap
// (Final, Native, Protected, HasOutParms)
// Parameters:
// class UPrimitiveComponent*     OverlappedComponent            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class AActor*                  Other                          (Parm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// int                            OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bFromSweep                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FHitResult              HitResult                      (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void UTriggerableWorldObjectComponent::Authority_GuaranteedVolumeOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* Other, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& HitResult)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.TriggerableWorldObjectComponent.Authority_GuaranteedVolumeOverlap");

	UTriggerableWorldObjectComponent_Authority_GuaranteedVolumeOverlap_Params params;
	params.OverlappedComponent = OverlappedComponent;
	params.Other = Other;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;
	params.bFromSweep = bFromSweep;
	params.HitResult = HitResult;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.TriplanarDecalComponent.UpdateTriplanarDecal
// (Event, Public, BlueprintEvent)

void UTriplanarDecalComponent::UpdateTriplanarDecal()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.TriplanarDecalComponent.UpdateTriplanarDecal");

	UTriplanarDecalComponent_UpdateTriplanarDecal_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.TutorialFunctionLibrary.IsInTutorial
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTutorialFunctionLibrary::STATIC_IsInTutorial(class UObject* WorldContextObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.TutorialFunctionLibrary.IsInTutorial");

	UTutorialFunctionLibrary_IsInTutorial_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.TutorialFunctionLibrary.GetTutorialGameState
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// class ATutorialGameState*      ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ATutorialGameState* UTutorialFunctionLibrary::STATIC_GetTutorialGameState(class UObject* WorldContextObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.TutorialFunctionLibrary.GetTutorialGameState");

	UTutorialFunctionLibrary_GetTutorialGameState_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.TutorialFunctionLibrary.GetTutorialGameMode
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// class ATutorialGameMode*       ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ATutorialGameMode* UTutorialFunctionLibrary::STATIC_GetTutorialGameMode(class UObject* WorldContextObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.TutorialFunctionLibrary.GetTutorialGameMode");

	UTutorialFunctionLibrary_GetTutorialGameMode_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.VaultableComponent.SignalVault
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ADBDPlayer*              survivor                       (Parm, ZeroConstructor, IsPlainOldData)

void UVaultableComponent::SignalVault(class ADBDPlayer* survivor)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.VaultableComponent.SignalVault");

	UVaultableComponent_SignalVault_Params params;
	params.survivor = survivor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.VaultableComponent.OnChaseEnded
// (Final, Native, Private)
// Parameters:
// class ACamperPlayer*           survivor                       (Parm, ZeroConstructor, IsPlainOldData)

void UVaultableComponent::OnChaseEnded(class ACamperPlayer* survivor)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.VaultableComponent.OnChaseEnded");

	UVaultableComponent_OnChaseEnded_Params params;
	params.survivor = survivor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.WorldRunawayMeshComponent.SetShouldRunAwayWithRandomDelay
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           should                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          delayRange                     (Parm, ZeroConstructor, IsPlainOldData)

void UWorldRunawayMeshComponent::SetShouldRunAwayWithRandomDelay(bool should, float delayRange)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.WorldRunawayMeshComponent.SetShouldRunAwayWithRandomDelay");

	UWorldRunawayMeshComponent_SetShouldRunAwayWithRandomDelay_Params params;
	params.should = should;
	params.delayRange = delayRange;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.WorldRunawayMeshComponent.SetShouldRunAwayWithDelay
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           should                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          Delay                          (Parm, ZeroConstructor, IsPlainOldData)

void UWorldRunawayMeshComponent::SetShouldRunAwayWithDelay(bool should, float Delay)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.WorldRunawayMeshComponent.SetShouldRunAwayWithDelay");

	UWorldRunawayMeshComponent_SetShouldRunAwayWithDelay_Params params;
	params.should = should;
	params.Delay = Delay;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.WorldRunawayMeshComponent.SetShouldRunAway
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           should                         (Parm, ZeroConstructor, IsPlainOldData)

void UWorldRunawayMeshComponent::SetShouldRunAway(bool should)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.WorldRunawayMeshComponent.SetShouldRunAway");

	UWorldRunawayMeshComponent_SetShouldRunAway_Params params;
	params.should = should;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.WorldRunawayMeshComponent.GetShouldRunAway
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UWorldRunawayMeshComponent::GetShouldRunAway()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.WorldRunawayMeshComponent.GetShouldRunAway");

	UWorldRunawayMeshComponent_GetShouldRunAway_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.WorldRunawayMeshComponent.GetRunawayMustTickDuration
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UWorldRunawayMeshComponent::GetRunawayMustTickDuration()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.WorldRunawayMeshComponent.GetRunawayMustTickDuration");

	UWorldRunawayMeshComponent_GetRunawayMustTickDuration_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.WorldRunawayMeshComponent.GetReturnMustTickDuration
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UWorldRunawayMeshComponent::GetReturnMustTickDuration()
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.WorldRunawayMeshComponent.GetReturnMustTickDuration");

	UWorldRunawayMeshComponent_GetReturnMustTickDuration_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function DeadByDaylight.LevelCrowWRMeshComponent.SetVisibilityHeight
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          InVisibilityHeight             (Parm, ZeroConstructor, IsPlainOldData)

void ULevelCrowWRMeshComponent::SetVisibilityHeight(float InVisibilityHeight)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.LevelCrowWRMeshComponent.SetVisibilityHeight");

	ULevelCrowWRMeshComponent_SetVisibilityHeight_Params params;
	params.InVisibilityHeight = InVisibilityHeight;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.ZoneDetectorComponent.OnOverlapExit
// (Final, Native, Protected)
// Parameters:
// class UPrimitiveComponent*     HitComponent                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// int                            OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData)

void UZoneDetectorComponent::OnOverlapExit(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.ZoneDetectorComponent.OnOverlapExit");

	UZoneDetectorComponent_OnOverlapExit_Params params;
	params.HitComponent = HitComponent;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function DeadByDaylight.ZoneDetectorComponent.OnOverlapEnter
// (Final, Native, Protected, HasOutParms)
// Parameters:
// class UPrimitiveComponent*     HitComponent                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// int                            OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bFromSweep                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FHitResult              SweepResult                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void UZoneDetectorComponent::OnOverlapEnter(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static auto fn = UObject::FindObject<UFunction>("Function DeadByDaylight.ZoneDetectorComponent.OnOverlapEnter");

	UZoneDetectorComponent_OnOverlapEnter_Params params;
	params.HitComponent = HitComponent;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;
	params.bFromSweep = bFromSweep;
	params.SweepResult = SweepResult;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


}

#ifdef _MSC_VER
	#pragma pack(pop)
#endif
